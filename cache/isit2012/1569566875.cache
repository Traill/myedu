{"id":"1569566875","paper":{"title":{"text":"A Compression Algorithm Using Mis-aligned Side-information 1"},"authors":[{"name":"Nan Ma"},{"name":"Kannan Ramchandran"},{"name":"David Tse"}],"abstr":{"text":"Abstract\u2014We study the problem of compressing a source sequence in the presence of side-information that is related to the source via insertions, deletions and substitutions. We propose a simple algorithm to compress the source sequence when the side- information is present at both the encoder and decoder. A key attribute of the algorithm is that it encodes the edits contained in runs of di ﬀerent extents separately. For small insertion and deletion probabilities, the compression rate of the algorithm is shown to be asymptotically optimal."},"body":{"text":"In [1], we have studied the problem of compressing a source sequence with the help of mis-aligned decoder-only side- information, where the source and side-information are the input and output of a deletion channel, respectively. The min- imum rate is shown to correspond to the amount of information in the deleted content plus the locations of the deletions, minus the uncertainty in the locations given the source and side- information. We refer to the latter as \u201cnature\u2019s secret\u201d. This is the information that the encoder and decoder can never ﬁnd out. It represents the over-counting of information in the locations of the deletions. For example, if the input and output of a deletion channel and are (0 , 0) and (0), the encoder and decoder will never know and never need to know whether the ﬁrst or the second bit is deleted. An interesting question is: how to construct a practical compression algorithm with the optimal compression rate, where the encoded bits do not reveal \u201cnature\u2019s secret\u201d? In this paper we provide such a construction for a simpler problem where the side-information is available at both the encoder and decoder. Although the availability of the side-information is changed, the minimum rate remains the same.\nIn this paper, we study the problem of compressing a source sequence, X, with the help of side-information, Y, which is available at both the encoder and the decoder. The side- information is related to the source via insertions, deletions and substitutions. See Figure 1 for an illustration of the system. The objective of this work is to construct an encod- ing /decoding algorithm to achieve the optimal compression rate deﬁned as the minimum number of encoded bits per source bit.\n- \t - - \t -\nX = (0, 0, 1, 1, 0, 1) Y = (0, 1, 0, 0, 1, 1)\nIn order to compare these two sequences, we can insert some gaps, which are denoted by \u2018 −\u2019, to align them as follows.\nX ∗ = (0, 0, 1, 1, 0, 1, −) Y ∗ = (0, −, 1, 0, 0, 1, 1)\nThis alignment explains the X with respect to Y with an insertion, a substitution and a deletion: X 2 is inserted between Y 1 and Y 2 ; X 4 substitutes Y 3 ; Y 6 is deleted. The encoder needs to describe the above editing information using the minimum number of bits.\nThe problem of synchronizing edited sequences has been studied by [2]\u2013[4] assuming the number of edits is a constant that does not increase with the length of the sequence. Upper and lower bounds on the minimum number of encoded bits were provided as functions of the number of edits and the length of the sequence. In [5], an interactive, low-complexity and asymptotically optimal scheme was proposed. In compari- son, in this paper, we consider the case that a fraction of source bits, rather than a constant number of bits, is edited, which makes the problem more general. There are also practical synchronization algorithms. such as RSYNC [6] for generic ﬁles and VSYNC [7], which targets video applications. In the special case when the source and the side-information di ﬀer only by substitutions (side-information is aligned), a universal compression algorithm has been proposed by [8].\nIn this paper, we propose a simple compression algorithm, for which the compression rate is asymptotically optimal when the editing probability is small. The key ideas are: (1) describing the locations of insertions and deletions by\nspecifying the runs 2 of side-information in which they appear, and (2) separately encoding the edits that appears in runs of di ﬀerent extents. To explain idea (1), consider the example where the side-information is Y = (0, 0, 1, 0) and the source is X = (0, 1, 0). Neither the encoder nor the decoder knows whether the ﬁrst bit or the second bit is deleted. Therefore the encoder needs to describe the location of the deletion only up to a run, which consists of the ﬁrst two bits in this example, but not further. To explain idea (2), consider the example where the side-information Y = (0, 0, 1, 0) and the source is X = (0, 1). These sequences can be explained by two deletions, in the ﬁrst run and the third run of Y, respectively. If the deletion process is memoryless and stationary, the longer ﬁrst run is more likely to contain a deletion than the shorter third run. Therefore the two deletion events should be encoded separately, using entropy coders with di ﬀerent target distributions, or using a universal entropy coder.\nOur compression algorithm can ﬁnd applications in a num- ber of settings, for example, to compress genomic sequences, as in [9]. 3 The di ﬀerence between the genomic sequences from two individuals of the same species is a small fraction of a whole sequence, and is in the form of insertions, deletions and substitutions. If one of the genomic sequences can be used as side-information, the algorithm can be used to compress the other sequence. The algorithm can also be used in distributed ﬁle backup or ﬁle sharing systems, where di ﬀerent source nodes have di ﬀerent versions of the same ﬁle diﬀering by a small number of edits including insertions, deletions and substitutions. Here, an old version can be used as side- information that is mis-aligned to the new version of the same ﬁle.\nThe rest of this paper is organized as follows. In Section II we formally setup the problem. In Section III we consider a simple case where the source sequence is obtained from side-information by pure deletion. We present the algorithm and analyze the performance. In Section IV we present the algorithm in the general setup. All the proofs are provided in [10] due to the page limit.\nNotation: Symbols in boldface represent sequences or ma- trices, and the symbols in non-boldface represent scalars. The binary entropy function is denoted by h 2 ( ·). The notation {0, 1} n denotes the n-fold Cartesian product of {0, 1}, and {0, 1} ∗ denotes\nWe will deﬁne two sequences X and Y, which di ﬀer by insertions, deletions, and substitutions.\nFirst, consider an auxiliary length-n sequence Z X = (Z X ,1 , . . . , Z X ,n ) ∈ {0, 1} n ∼ iid Bernoulli(p), where p ∈ (0, 1). Pass Z X through a binary symmetric channel with crossover probability q to get Z Y .\nWe will then make deletions in Z X and Z Y to construct X and Y, respectively. Let the deletion pattern D X be a length- n sequence ∼ iid Bernoulli(d X ), which is independent of Z X and Z Y . The deleted sequence X ∈ {0, 1} ∗ is a subsequence of Z X , which is derived from Z X by deleting all those Z X ,i \u2019s with D X ,i = 1. Similarly, the deletion pattern D Y ∼ iid Bernoulli(d Y ) describes the deletion process from Z Y to Y.\nSince the editing process from Z X to X is a deletion process, the inverse process from X to Z X can be regarded as an insertion process. Therefore from X to Y there are insertions (from X to Z X ), substitutions (from Z Y to Z Y ) and deletions (from Z Y to Y).\nBoth sequences X and Y are available to the encoder and Y is available only to the decoder as side-information. All the other sequences, Z X , Z Y , D X , and D Y are available to neither the encoder nor the decoder. The encoder encodes X in the presence of Y and sends a bit string of variable length to the decoder so that the decoder can reproduce X without any error. The sequences X and Y are called the source sequence and the side-information, respectively. Please see Fig. 2 for the structure of the system together with the source model.\nThe performance of the encoder and the decoder is mea- sured by the expected operational rate, which is deﬁned as R op : = lim n →∞ E[L M /L Y ], where L M is the length of encoded bit string, and L Y is the length of Y.\nIf there is no computational constraint, the generally optimal approach for this conditional compression problem is to enu- merate all possible source sequences x\u2019s for each realization of the side-information sequence y and compute p X |Y (x |y), and then construct a Hu ﬀman code to encode the x\u2019s. However, the complexity is exponential in n and hence impractical in most applications. The objective of this work is to ﬁnd a practical encoder and decoder which minimize the expected operational rate.\nIn order to provide a clear presentation of our algorithm, we start by considering a special case of the general prob- lem, where the source sequence X is derived from the side- information Y only by deletion, but not substitution or in-\nsertion. Formally speaking, q = 0 and d Y = 0, which imply Z X = Z Y = Y. For the sake of simplicity, in this section, we drop the subscript X in d X and D X and denote them as d and D , respectively.\n1) Alignment: In this stage we insert some gaps in X to get X ∗ , which has the same length as Y. The fol- lowing greedy alignment algorithm described in [11, Section 3.1] is used.\nRead X and Y from left to right. Take the ﬁrst bit of X , and match it with the leftmost appearance of this bit in Y; then take the second bit of X, and match it with the subsequent leftmost appearance of this bit in Y ; and so on. All the bits in Y that are not matched with bits from X are matched with gaps denoted by \u2018 −\u2019. Let X ∗ be the aligned version of X with gaps inserted. The alignment implies a reconstructed deletion pattern D , which can explain the deletion process from Y to X, but is in general di ﬀerent from D.\nLet the maximum extent of the runs in Y be L max . For IID sequence Y, E[L max ] = Θ(log n) [12]. The encoder performs the following:\n\u2013 Compute U l , the number of runs of extent l in Y. \u2013 For i = 1, . . . , U l , compute V l ,i , the number of\ndeletions in the i-th run of extent l in Y according to D.\n3) Entropy coding: For each l = 1, . . . , L max , compress the sequence {V l ,i } U l i =1 using an entropy coder. Note that V l ,i with l = 1, . . . , L max have di ﬀerent distributions.\nThe encoded string generated by the encoder is the output of the entropy coder in stage 3).\n2) Locate deletions up to runs: For each l and each i, ﬁnd the i-th run of extent l in Y, and delete V i ,l bits in that run. The outcome is the reconstruction of X.\nSince the total number of entries in {V i ,l } is the total number of runs in Y, which is no larger than n, the size of memory the algorithm takes is O(n). Since the greedy alignment, the generation and coding of {V i ,l } take O(n) operations, the algorithm takes O(n) operations.\nLet the side-information, the hidden deletion pattern, and the source sequence be as follows for example:\nY = (1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1) D = (1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0) X = (0, 1, 0, 0, 1, 0, 1).\nStage 1): The greedy alignment algorithm aligns X and Y and generates D as follows.\nStage 2): The maximum extent of the runs in Y is L max = 3. There are U 1 = 4 runs of extent 1, U 2 = 2 runs of extent 2, and U 3 = 1 run of extent 3. For the four extent-1 runs, \u20181\u2019, \u20180\u2019, \u20181\u2019 and \u20180\u2019, only the ﬁrst one is deleted according to D, therefore we have\nFor the two extent-2 runs, \u20181 , 1\u2019 and \u20181, 1\u2019, there is a deletion in each of them. Therefore we have\nFor the only extent-3 run, \u20180 , 0, 0\u2019, there is a deletion in it. Therefore we have\nStage \t 3): \t The \t entropy \t encoder \t com- presses \t ((V 1 ,1 , V 1 ,2 , V 1 ,3 , V 1 ,4 ) , (V 2 ,1 , V 2 ,2 ) , (V 3 ,1 )) \t = ((1 , 0, 0, 0), (1, 1), (1)). Note that each entry in (V 1 ,1 , V 1 ,2 , V 1 ,3 , V 1 ,4 ) is more likely to be 0 than (V 2 ,1 , V 2 ,2 ) and (V 3 ,1 ). Therefore we should use entropy encoder with di ﬀerent target distributions to encode them, when the sequences are long.\nStage \t 1): \t The \t entropy \t decoder \t recon- structs \t ((V 1 ,1 , V 1 ,2 , V 1 ,3 , V 1 ,4 ) , (V 2 ,1 , V 2 ,2 ) , (V 3 ,1 )) \t = ((1 , 0, 0, 0), (1, 1), (1)).\nStage 2): Since (V 1 ,1 , V 1 ,2 , V 1 ,3 , V 1 ,4 ) = (1, 0, 0, 0), the de- coder deletes the ﬁrst run of extent-1, i.e., the ﬁrst bit. Since (V 2 ,1 , V 2 ,2 ) = (1, 1), the decoder deletes a bit from each of the two runs of extent-2. It does not matter which bit to delete in each run. Since (V 3 ,1 ) = (1), the decoder deletes a bit in the only extent-3 run. The deletions are represented by D and the reconstruction of the source sequence is denoted by X.\nY = (1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1) D = (1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1) X = (0, 1, 0, 0, 1, 0, 1).\nLet U : = {U l } L max l =1 and V : = {V l ,i } L max ,U l l =1,i=1 . In the limit as the lengths of the sequences tends to inﬁnity, the operational rate of this algorithm is R op = lim n →∞ H(V) /n. The optimal rate is lim n →∞ H(X |Y)/n. When the probability of deletion d is small, the following theorem shows that the algorithm is asymptotically optimal.\nTheorem 1: The gap between the operational rate of the algorithm described in Section III-A and the optimal rate\nsatisﬁes: lim n →∞ [H(V) /n − H(X|Y)/n] = O(d 2 −ϵ ), for any ϵ > 0.\nThe proof is provided in [10, Appendix 1], which can be intuitively explained as follows. When d is small, the deletions are typically far away from each other. Therefore the intervals between the deletions are so long that can be used to synchronize segments of X to segments of Y. As a result, the deletions can be located within the correct runs with high probability. The exact positions of the deletions within the runs are impossible to ﬁnd based on only X and Y. Since the goal is to reconstruct X, describing the positions within runs is unnecessary. Moreover, the description of the locations of the deletions, V, is almost independent of the decoder side- information Y. Therefore sending V is approximately optimal in terms of rate. See Section III-D-2 for more discussions about the independence between V and Y. The deletions cannot be located within the correct runs only if two or more deletions are in the same run or adjacent runs, which occurs with the probability in the order of O(d 2 ). This event a ﬀects the performance of the algorithm when d is not small. Therefore the gap between the operational rate and the optimum is in the order of O(d 2 −ϵ ).\nRemark 1: In [1], we have shown that when p = 1/2, for any ϵ > 0, lim n →∞ H(X |Y)/n = h 2 (d) −cd+O(d 2 −ϵ ), where c : = ∑\n2 −l−1 l log 2 l ≈ 1.29. 4 It captures the asymptotic expansion of the optimal rate to the precision of Θ(d) with a remainder term O(d 2 −ϵ ). Due to Theorem 1, R op = h 2 (d) − cd + O(d 2 −ϵ ), which also matches the optimal rate to the precision of Θ(d).\nRemark 2: In [1], we have shown that lim n →∞ H(X |Y)/n is also the minimum rate when the side-information is only avail- able available at the decoder but not the encoder. Although the minimum rate is the same, constructing an explicit algorithm to implement the distributed compression at the asymptotically optimal rate remains an open problem.\nLet us compare the algorithm described in Section III-A with two simpler but suboptimal algorithms in the simple case Y ∼ iid Bernoulli(1/2) (p = 1/2). The comparison reveals more intuition on why the algorithm is asymptotically optimal.\n1) Sending D directly: A simple and the most natural algorithm to compress X given Y is ﬁrst running a greedy alignment to obtain D (as in stage 1)) and then compressing D using an entropy coder (similar to stage 3)). As the lengths of the sequences tend to inﬁnity, the operational rate is lim n →∞ H(D) /n. If we approximate H(D) by H(D) 5 , the opera- tional rate is approximately h 2 (d) = −d log 2 d +d log 2 e +O(d 2 ). Therefore for small d, the operational rate of this simple algorithm matches the optimal expression up to the −d log 2 d term. But for the Θ(d) term, there is a gap cd ≈ 1.29d. That is, this compression algorithm wastes 1 .29 bits per deletion bit on average. When d is not very small, −d log 2 d and d can be\nin the same order of magnitude. Therefore the gap may not be negligible in practice.\nThe above strategy is suboptimal because D speciﬁes the exact positions of the deletions. Note that after specifying the runs that contain the deletions and specifying the number of deletions in each run, X can already be deduced from Y. How- ever, this strategy goes further and speciﬁes the exact positions within the runs, which are redundant in terms of reconstructing X . Therefore this strategy over-describes the positions of the deletions beyond what is necessary to represent X. The amount of over-description, H(D |X, Y), is called \u201cnature\u2019s secret\u201d in [1], because only the hypothetical party \u201cnature\u201d has access to D, but the encoder and decoder do not.\n2) Locating deletions up to runs: The analysis of the previous strategy suggests that the encoder should specify the location of the deletions with respect to runs. Therefore a better algorithm than the one described in Section III-D-1 is ﬁrst deﬁning a sequence W such that W i is the number of deletions in the i-th run of Y according to D, then compressing W at the entropy rate.\nSince the average extent of a run in an iid Bernoulli(1 /2) sequence is 2, the length of W is approximately half of that of D . It can be shown 6 that the operational rate can be approxi- mated by (h 2 (d) − d). There is still a linear d gap between this rate and the optimal one, given by (c − 1)d ≈ 0.29d. That is, this algorithm wastes 0 .29 bit per deletion bit.\nWhy is this algorithm suboptimal? The reason is because W is signiﬁcantly correlated with Y. If the deletion process is iid, then the longer runs of Y tend to contain more deletions and the shorter runs tend to contain less deletions. Therefore Y reveals a certain amount of information about W, that is about 0 .29 bit per deletion bit. The algorithm described above does not use this amount of information and thus is suboptimal.\nThe algorithm described in Section III-A, however, treats the deletions contained in runs of di ﬀerent extents diﬀerently. As a result the operational rate matches the optimal rate for the Θ(d) term.\nTable I provides a comparison among the performance of the two algorithms in Section III-D and the one in Section III-A for n = 1000kb and d = 0.01. Note that when Y has biased bits (p = 0.1), the beneﬁt of the proposed algorithm in Section III-A is more signiﬁcant than when p = 0.5. The reason is that when p = 0.1, the runs of Y are longer and it pays to exploit the information from the run-lengths.\nThe algorithm described in Section III-A can be extended to the general problem where Y is related to X by insertions,\nA. Algorithm for insertions, deletions and substitutions The encoder has the following stages.\n1) Alignment: align X and Y using the minimum total number of insertions, deletions and substitutions. If there are multiple such alignments, pick any one of them. This can be done by the Needleman-Wunsch algorithm [13] with the gap penalty and the substitution penalty equal to 1, with computation complexity of order O(n 2 ). The algorithm generates two sequences X ∗ and Y ∗ , which are X and Y with gaps, respectively. Then construct Z X and Z Y by replacing the gaps in X ∗ and Y ∗ by the corresponding bits in Y ∗ and X ∗ , respectively.\n2) Describing the insertions (from Y to Z Y ): The edits from Y to Z Y can be viewed as insertions. The locations of the insertions are speciﬁed by the gaps in Y ∗ . The content of the insertions is speciﬁed by the corresponding bits in Z Y .\nAll the insertions can be categorized into isolated insertions with only one bit per insertion event, and bursts of insertions with two or more consecutive bits per insertion event. For each insolated insertion, if the inserted bit is equal to the bit on the left (or right) side, the insertion is extending the run to the left (or right). If the inserted bit is not equal to the bits on either side, it is breaking an existing run and creating a new run. We will describe the isolated insertions that extend runs, then the insertions that break runs, then the bursts of insertions.\n\u2022 In order to describe the insertions that extend runs, the encoder does the following.\n\u2013 For l = 1, . . . , L max (L max is the the maximum extent of the runs in Y), for i = 1, . . . , U l (U l is the number of runs of extent l in Y), let V ins l ,i : = 1 if the i-th run of extent l in Y is extended by one bit, and V ins l ,i : = 0 otherwise.\n\u2022 In order to describe the insertions that break runs, the encoder does the following.\nIn the sequence Y \u2032 , a slot between two bits is a potential location to break a run only if the two bits are the same. The slots before the ﬁrst bit and after the last bit are also potential locations to create new runs. Let U 0 denote the total number of such potential locations in Y \u2032 . For i = 1, . . . , U 0 , let V ins 0 ,i : = 1 if a bit is inserted in the i-th potential location, and V ins 0 ,i : = 0 otherwise.\nHaving made such insertions, Y \u2032 becomes Y \u2032\u2032 . Let V ins denote all the descriptions up to this step: {V ins l ,i } l ≥0 .\n\u2022 In order to describe the bursts of insertions, the encoder creates a sequence V burst from Z Y by keeping the bursts of inserted bits and replacing the other bits by \u2018 ∗\u2019. V burst describes the insertions needed to construct Z Y from Y \u2032\u2032 .\nThe edits from Z Y to Z X can be viewed as substitutions, which can be described by V sub : = Z Y ⊕ Z X .\n4) Describe the deletions (from Z X to X) as in stage 2) of Section III-A. Denote the description by V del .\nThe decoder decodes V ins , V burst , V sub and V del by an entropy decoder, and then follow the stages 2) to 4) to construct X from Y.\nThe operational rate of the above algorithm can be analyzed for small probability of insertion, deletion and substitution as follows.\nTheorem 2: The gap between the operational rate of the algorithm described in Section IV-A and the optimal rate satisﬁes: lim n →∞ [H(V ins , V burst , V sub , V del ) /n − H(X|Y)/n] = O(d 2 −ϵ ), for any ϵ > 0, where d = max{d X , d Y , q}.\nThe proof is similar to that of Theorem 1 and is provided in [10, Appendix 2].\nWe have proposed an algorithm to compress the source sequence given the mis-aligned side-information at both the encoder and decoder. For small editing probability, the com- pression rate of the algorithm is asymptotically optimal. Di- rections for future work include (1) developing algorithms for bursty edits, and (2) developing distributed algorithms to compress a source sequence when the reference sequence is only available at the decoder side."},"refs":[{"authors":[{"name":"N. Ma"},{"name":"K. Ramchandran"},{"name":"D. Tse"}],"title":{"text":"E ﬃcient ﬁle synchronization: A distributed source coding approach"}},{"authors":[{"name":"V. L. Levenshtein"}],"title":{"text":"Binary codes capable of correcting deletions, inser- tions and reversals"}},{"authors":[{"name":"A. Orlitsky"},{"name":"K. Viswanathan"}],"title":{"text":"One-way communication and error- correcting codes"}},{"authors":[{"name":"S. Agarwal"},{"name":"V. Chauhan"},{"name":"A. Trachtenberg"}],"title":{"text":"Bandwidth e ﬃcient string reconciliation using puzzles"}},{"authors":[{"name":"R. Venkataramanan"},{"name":"H. Zhang"},{"name":"K. Ramchandran"}],"title":{"text":"Interactive low- complexity codes for synchronization from deletions and insertions"}},{"authors":[{"name":"A. Tridgell"},{"name":"P. Mackerras"}],"title":{"text":"The rsync algorithm"}},{"authors":[{"name":"H. Zhang"},{"name":"C. Yeo"},{"name":"K. Ramchandran"}],"title":{"text":"VSYNC: a novel video ﬁle synchronization protocol"}},{"authors":[{"name":"H. Cai"},{"name":"S. Kulkarni"},{"name":"S. Verdu"}],"title":{"text":"An algorithm for universal lossless compression with side information"}},{"authors":[{"name":"M. C. Brandon"},{"name":"D. C. Wallace"},{"name":"P. Baldi"}],"title":{"text":"Data structures and compression algorithms for genomic sequence data"}},{"authors":[{"name":"N. Ma"},{"name":"K. Ramchandran"},{"name":"D. Tse"}],"title":{"text":"A compression algorithm using mis-aligned side-information"}},{"authors":[{"name":"M. Mitzenmacher"}],"title":{"text":"A survey of results for deletion channels and related synchronization channels"}},{"authors":[{"name":"M. F. Schilling"}],"title":{"text":"The longest run of heads"}},{"authors":[{"name":"S. B. Needleman"},{"name":"C. D. Wunsch"}],"title":{"text":"A general method applicable to the search for similarities in the amino acid sequence of two proteins"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566875.pdf"},"links":[{"id":"1569566567","weight":2},{"id":"1569564843","weight":10},{"id":"1569566381","weight":3},{"id":"1569566527","weight":6},{"id":"1569566485","weight":2},{"id":"1569565383","weight":2},{"id":"1569565883","weight":5},{"id":"1569564889","weight":4},{"id":"1569565223","weight":3},{"id":"1569566725","weight":5},{"id":"1569565663","weight":2},{"id":"1569565377","weight":5},{"id":"1569566385","weight":8},{"id":"1569564635","weight":7},{"id":"1569566799","weight":3},{"id":"1569565067","weight":2},{"id":"1569559665","weight":2},{"id":"1569561021","weight":7},{"id":"1569564669","weight":2},{"id":"1569565691","weight":3},{"id":"1569559617","weight":2},{"id":"1569566321","weight":5},{"id":"1569566605","weight":2},{"id":"1569565489","weight":2},{"id":"1569566683","weight":6},{"id":"1569566855","weight":3},{"id":"1569560629","weight":3},{"id":"1569566869","weight":8},{"id":"1569565097","weight":3},{"id":"1569566091","weight":4},{"id":"1569559259","weight":6},{"id":"1569566697","weight":3},{"id":"1569566597","weight":6},{"id":"1569565551","weight":4},{"id":"1569565711","weight":3},{"id":"1569566761","weight":4},{"id":"1569566943","weight":5},{"id":"1569565091","weight":3},{"id":"1569566591","weight":5},{"id":"1569566571","weight":17},{"id":"1569552245","weight":5},{"id":"1569565607","weight":2},{"id":"1569565495","weight":2},{"id":"1569567045","weight":5},{"id":"1569565227","weight":2},{"id":"1569564481","weight":5},{"id":"1569560833","weight":5},{"id":"1569566415","weight":6},{"id":"1569564805","weight":3},{"id":"1569567005","weight":7},{"id":"1569566081","weight":6},{"id":"1569565355","weight":4},{"id":"1569564469","weight":4},{"id":"1569565931","weight":4},{"id":"1569566373","weight":2},{"id":"1569566647","weight":3},{"id":"1569551535","weight":6},{"id":"1569566765","weight":3},{"id":"1569565775","weight":2},{"id":"1569565547","weight":2},{"id":"1569566871","weight":2},{"id":"1569566653","weight":3},{"id":"1569565461","weight":7},{"id":"1569564731","weight":3},{"id":"1569566207","weight":7},{"id":"1569564227","weight":9},{"id":"1569558325","weight":6},{"id":"1569565837","weight":2},{"id":"1569566671","weight":5},{"id":"1569566303","weight":3},{"id":"1569564233","weight":13},{"id":"1569566459","weight":4},{"id":"1569567535","weight":2},{"id":"1569563411","weight":6},{"id":"1569560427","weight":8},{"id":"1569564401","weight":3},{"id":"1569564849","weight":4},{"id":"1569559541","weight":2},{"id":"1569565317","weight":3},{"id":"1569566319","weight":4},{"id":"1569565123","weight":5},{"id":"1569566941","weight":5},{"id":"1569566033","weight":2},{"id":"1569555811","weight":3},{"id":"1569558459","weight":2},{"id":"1569565609","weight":2},{"id":"1569565291","weight":12},{"id":"1569564203","weight":6},{"id":"1569566821","weight":2},{"id":"1569556713","weight":6},{"id":"1569562685","weight":2},{"id":"1569566467","weight":4},{"id":"1569565771","weight":3},{"id":"1569566157","weight":3},{"id":"1569560613","weight":2},{"id":"1569566903","weight":3},{"id":"1569566999","weight":3},{"id":"1569565859","weight":7},{"id":"1569565809","weight":5},{"id":"1569566843","weight":4},{"id":"1569566579","weight":3},{"id":"1569558483","weight":2},{"id":"1569566563","weight":3},{"id":"1569566089","weight":4},{"id":"1569559221","weight":5},{"id":"1569556091","weight":3},{"id":"1569565347","weight":4},{"id":"1569566925","weight":3},{"id":"1569564387","weight":5},{"id":"1569565455","weight":4},{"id":"1569566497","weight":5},{"id":"1569566795","weight":2},{"id":"1569566963","weight":4},{"id":"1569561679","weight":3},{"id":"1569566709","weight":5},{"id":"1569564989","weight":4},{"id":"1569566787","weight":2},{"id":"1569566717","weight":15},{"id":"1569566015","weight":3},{"id":"1569565897","weight":3},{"id":"1569551763","weight":3},{"id":"1569565953","weight":2},{"id":"1569566895","weight":2},{"id":"1569566889","weight":2},{"id":"1569565709","weight":2},{"id":"1569566749","weight":4},{"id":"1569566269","weight":6},{"id":"1569564189","weight":5},{"id":"1569564195","weight":2},{"id":"1569561513","weight":5},{"id":"1569566985","weight":4},{"id":"1569564613","weight":3},{"id":"1569567009","weight":5},{"id":"1569566865","weight":3},{"id":"1569565321","weight":3},{"id":"1569564647","weight":3},{"id":"1569566095","weight":3},{"id":"1569566193","weight":4},{"id":"1569564337","weight":2},{"id":"1569565907","weight":3},{"id":"1569566343","weight":38},{"id":"1569564311","weight":2},{"id":"1569565803","weight":3},{"id":"1569565785","weight":4},{"id":"1569566239","weight":2},{"id":"1569566167","weight":2},{"id":"1569566679","weight":4},{"id":"1569565989","weight":4},{"id":"1569566575","weight":10},{"id":"1569563981","weight":8},{"id":"1569561085","weight":2},{"id":"1569566617","weight":3},{"id":"1569559565","weight":3},{"id":"1569566905","weight":4},{"id":"1569563307","weight":9},{"id":"1569566063","weight":4},{"id":"1569558681","weight":4},{"id":"1569566759","weight":5},{"id":"1569565589","weight":2},{"id":"1569559195","weight":2},{"id":"1569566149","weight":3},{"id":"1569566657","weight":4},{"id":"1569558859","weight":5},{"id":"1569565199","weight":5},{"id":"1569565213","weight":2},{"id":"1569566643","weight":5},{"id":"1569566511","weight":6},{"id":"1569566991","weight":2},{"id":"1569565841","weight":2},{"id":"1569566975","weight":2},{"id":"1569566369","weight":3},{"id":"1569566531","weight":5},{"id":"1569567665","weight":5},{"id":"1569561143","weight":8},{"id":"1569566581","weight":3},{"id":"1569565833","weight":4},{"id":"1569566489","weight":3},{"id":"1569564611","weight":4},{"id":"1569565535","weight":3},{"id":"1569562867","weight":6},{"id":"1569566395","weight":2},{"id":"1569565667","weight":2},{"id":"1569561795","weight":3},{"id":"1569566325","weight":5},{"id":"1569566423","weight":2},{"id":"1569564795","weight":4},{"id":"1569567015","weight":6},{"id":"1569559805","weight":2},{"id":"1569566437","weight":6},{"id":"1569566811","weight":2},{"id":"1569566851","weight":3},{"id":"1569558901","weight":2},{"id":"1569565735","weight":6},{"id":"1569553909","weight":5},{"id":"1569559111","weight":5},{"id":"1569566687","weight":3},{"id":"1569566939","weight":2},{"id":"1569553537","weight":12},{"id":"1569565427","weight":4},{"id":"1569566403","weight":6},{"id":"1569552251","weight":6},{"id":"1569566139","weight":6},{"id":"1569553519","weight":4},{"id":"1569567051","weight":2},{"id":"1569566885","weight":3},{"id":"1569564441","weight":2},{"id":"1569566231","weight":5},{"id":"1569564209","weight":33},{"id":"1569566513","weight":2},{"id":"1569566425","weight":22},{"id":"1569554881","weight":4},{"id":"1569554971","weight":4},{"id":"1569565501","weight":5},{"id":"1569566899","weight":2},{"id":"1569566445","weight":3},{"id":"1569566209","weight":2},{"id":"1569562821","weight":2},{"id":"1569566649","weight":3},{"id":"1569565559","weight":4},{"id":"1569566371","weight":3},{"id":"1569565655","weight":6},{"id":"1569566127","weight":4},{"id":"1569558985","weight":3},{"id":"1569563763","weight":6},{"id":"1569565087","weight":3},{"id":"1569566473","weight":6},{"id":"1569564857","weight":3},{"id":"1569566913","weight":5},{"id":"1569566809","weight":3},{"id":"1569566629","weight":4},{"id":"1569566257","weight":2},{"id":"1569565033","weight":9},{"id":"1569566447","weight":4},{"id":"1569566357","weight":2},{"id":"1569565817","weight":4},{"id":"1569565847","weight":5},{"id":"1569564353","weight":4},{"id":"1569563897","weight":4},{"id":"1569565887","weight":6},{"id":"1569566141","weight":3},{"id":"1569566721","weight":2},{"id":"1569564677","weight":2},{"id":"1569563231","weight":2},{"id":"1569565633","weight":6},{"id":"1569566661","weight":3},{"id":"1569565279","weight":3},{"id":"1569555879","weight":4},{"id":"1569566115","weight":2},{"id":"1569565219","weight":8},{"id":"1569554759","weight":3},{"id":"1569565595","weight":3},{"id":"1569565185","weight":3},{"id":"1569566773","weight":3},{"id":"1569566037","weight":3},{"id":"1569566223","weight":4},{"id":"1569566553","weight":2},{"id":"1569564969","weight":7},{"id":"1569565029","weight":5},{"id":"1569565357","weight":2},{"id":"1569566505","weight":3},{"id":"1569565393","weight":7},{"id":"1569565933","weight":2},{"id":"1569562207","weight":6},{"id":"1569565705","weight":4},{"id":"1569566191","weight":3},{"id":"1569567033","weight":6},{"id":"1569565527","weight":4},{"id":"1569566853","weight":2},{"id":"1569566603","weight":6},{"id":"1569567029","weight":9},{"id":"1569565363","weight":2},{"id":"1569566159","weight":2},{"id":"1569566695","weight":2},{"id":"1569566051","weight":4},{"id":"1569561379","weight":3},{"id":"1569565909","weight":2},{"id":"1569561123","weight":7},{"id":"1569565467","weight":2},{"id":"1569566655","weight":3},{"id":"1569566673","weight":4},{"id":"1569565441","weight":3},{"id":"1569565739","weight":2},{"id":"1569566233","weight":4},{"id":"1569566667","weight":2},{"id":"1569566297","weight":3},{"id":"1569566893","weight":5},{"id":"1569566317","weight":3},{"id":"1569564097","weight":2},{"id":"1569560997","weight":7},{"id":"1569563845","weight":3},{"id":"1569566407","weight":4},{"id":"1569560349","weight":2},{"id":"1569566501","weight":5},{"id":"1569565741","weight":5},{"id":"1569566275","weight":5},{"id":"1569566481","weight":4},{"id":"1569565545","weight":4},{"id":"1569566857","weight":3},{"id":"1569566387","weight":2},{"id":"1569566245","weight":4},{"id":"1569560503","weight":3},{"id":"1569565463","weight":2},{"id":"1569566219","weight":5},{"id":"1569565439","weight":5},{"id":"1569566229","weight":4},{"id":"1569566133","weight":2},{"id":"1569562551","weight":4},{"id":"1569563395","weight":5},{"id":"1569551347","weight":2},{"id":"1569555367","weight":3},{"id":"1569566383","weight":2},{"id":"1569564485","weight":3},{"id":"1569566631","weight":2},{"id":"1569565571","weight":4},{"id":"1569565885","weight":2},{"id":"1569566177","weight":3},{"id":"1569557633","weight":4},{"id":"1569564411","weight":3},{"id":"1569566293","weight":9},{"id":"1569565665","weight":3},{"id":"1569566831","weight":8},{"id":"1569565549","weight":2},{"id":"1569565523","weight":9},{"id":"1569565611","weight":5},{"id":"1569557715","weight":5},{"id":"1569564175","weight":2},{"id":"1569566983","weight":7},{"id":"1569566779","weight":2},{"id":"1569566097","weight":3},{"id":"1569566479","weight":5},{"id":"1569556361","weight":3},{"id":"1569565397","weight":2},{"id":"1569566873","weight":7},{"id":"1569565765","weight":8},{"id":"1569565925","weight":3},{"id":"1569557275","weight":4},{"id":"1569565263","weight":10},{"id":"1569565215","weight":3},{"id":"1569565385","weight":8},{"id":"1569565575","weight":2},{"id":"1569565919","weight":10},{"id":"1569565181","weight":3},{"id":"1569566711","weight":7},{"id":"1569565241","weight":2},{"id":"1569566927","weight":2},{"id":"1569565661","weight":5},{"id":"1569565865","weight":5},{"id":"1569566887","weight":3},{"id":"1569565273","weight":3},{"id":"1569565319","weight":5},{"id":"1569566267","weight":2},{"id":"1569564131","weight":3},{"id":"1569552037","weight":2},{"id":"1569564919","weight":13},{"id":"1569565511","weight":3},{"id":"1569566737","weight":5},{"id":"1569566429","weight":3},{"id":"1569561221","weight":3},{"id":"1569566917","weight":5},{"id":"1569566035","weight":2},{"id":"1569566253","weight":2},{"id":"1569565353","weight":4},{"id":"1569564683","weight":7},{"id":"1569564305","weight":8},{"id":"1569564283","weight":3},{"id":"1569564291","weight":12},{"id":"1569566691","weight":5},{"id":"1569565421","weight":5},{"id":"1569566547","weight":2},{"id":"1569566651","weight":3},{"id":"1569566823","weight":4},{"id":"1569566595","weight":17},{"id":"1569566677","weight":6},{"id":"1569565349","weight":3},{"id":"1569552025","weight":4},{"id":"1569566137","weight":5},{"id":"1569565013","weight":2},{"id":"1569565829","weight":2},{"id":"1569566237","weight":3},{"id":"1569566283","weight":3},{"id":"1569565645","weight":2},{"id":"1569566529","weight":3},{"id":"1569565375","weight":4},{"id":"1569566715","weight":3},{"id":"1569565237","weight":2},{"id":"1569566819","weight":2},{"id":"1569565041","weight":4},{"id":"1569564703","weight":3},{"id":"1569566713","weight":2},{"id":"1569565541","weight":2},{"id":"1569566813","weight":3},{"id":"1569566771","weight":4},{"id":"1569564649","weight":2},{"id":"1569564201","weight":3},{"id":"1569562277","weight":3},{"id":"1569566641","weight":4},{"id":"1569565425","weight":2},{"id":"1569564247","weight":3},{"id":"1569564437","weight":45},{"id":"1569566533","weight":3},{"id":"1569551905","weight":5},{"id":"1569564861","weight":3},{"id":"1569565457","weight":3},{"id":"1569564787","weight":4},{"id":"1569566487","weight":5},{"id":"1569565529","weight":8},{"id":"1569556759","weight":7},{"id":"1569566619","weight":4},{"id":"1569561185","weight":6},{"id":"1569566075","weight":3},{"id":"1569566397","weight":2},{"id":"1569558779","weight":4},{"id":"1569565233","weight":2},{"id":"1569566001","weight":2},{"id":"1569565593","weight":3},{"id":"1569560235","weight":6},{"id":"1569566817","weight":5},{"id":"1569564157","weight":5},{"id":"1569566389","weight":3},{"id":"1569566435","weight":2},{"id":"1569566911","weight":2},{"id":"1569564923","weight":3},{"id":"1569566299","weight":6},{"id":"1569564281","weight":2},{"id":"1569565039","weight":2},{"id":"1569564769","weight":5},{"id":"1569565769","weight":4},{"id":"1569566171","weight":3},{"id":"1569566601","weight":2},{"id":"1569565805","weight":7},{"id":"1569563919","weight":8},{"id":"1569566577","weight":2},{"id":"1569557851","weight":7},{"id":"1569567691","weight":3},{"id":"1569565389","weight":4},{"id":"1569559919","weight":4},{"id":"1569565861","weight":2},{"id":"1569566147","weight":4},{"id":"1569565537","weight":5},{"id":"1569559523","weight":3},{"id":"1569566057","weight":2},{"id":"1569562367","weight":2},{"id":"1569560785","weight":9},{"id":"1569565561","weight":6},{"id":"1569565631","weight":3},{"id":"1569560213","weight":2},{"id":"1569555891","weight":8},{"id":"1569565997","weight":4},{"id":"1569565035","weight":5},{"id":"1569559597","weight":3},{"id":"1569564961","weight":7},{"id":"1569559251","weight":3},{"id":"1569567013","weight":2},{"id":"1569566583","weight":2},{"id":"1569561861","weight":3},{"id":"1569565337","weight":2},{"id":"1569565737","weight":3},{"id":"1569560459","weight":6},{"id":"1569564463","weight":2},{"id":"1569565853","weight":7},{"id":"1569550425","weight":8},{"id":"1569566273","weight":3},{"id":"1569564123","weight":7},{"id":"1569566341","weight":3},{"id":"1569565889","weight":5},{"id":"1569566635","weight":3},{"id":"1569566611","weight":3},{"id":"1569551539","weight":3},{"id":"1569564505","weight":7},{"id":"1569565165","weight":3},{"id":"1569565565","weight":6},{"id":"1569565635","weight":4},{"id":"1569561397","weight":2},{"id":"1569565731","weight":4},{"id":"1569566797","weight":5},{"id":"1569566125","weight":2},{"id":"1569566413","weight":3},{"id":"1569565707","weight":3},{"id":"1569565113","weight":9},{"id":"1569566375","weight":2},{"id":"1569564257","weight":5},{"id":"1569565583","weight":4},{"id":"1569566555","weight":2},{"id":"1569564931","weight":3},{"id":"1569565373","weight":2},{"id":"1569566973","weight":6},{"id":"1569561579","weight":3},{"id":"1569566987","weight":3},{"id":"1569565031","weight":3},{"id":"1569551541","weight":3},{"id":"1569565619","weight":2},{"id":"1569566839","weight":3},{"id":"1569551751","weight":3},{"id":"1569558697","weight":2},{"id":"1569565139","weight":5},{"id":"1569566663","weight":6},{"id":"1569564419","weight":2},{"id":"1569566067","weight":3},{"id":"1569566825","weight":9},{"id":"1569566241","weight":2},{"id":"1569564807","weight":3},{"id":"1569563007","weight":3},{"id":"1569566113","weight":4},{"id":"1569566443","weight":6},{"id":"1569566727","weight":7},{"id":"1569565315","weight":5},{"id":"1569566417","weight":2},{"id":"1569560581","weight":3},{"id":"1569559233","weight":4}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S1.T1.4","endtime":"11:10","authors":"Nan Ma, Kannan Ramchandran, David Tse","date":"1341226200000","papertitle":"A Compression Algorithm Using Mis-aligned Side-information","starttime":"10:50","session":"S1.T1: Source Coding with Side Information","room":"Kresge Rehearsal B (030)","paperid":"1569566875"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"8","spectral28":"22","spectral32":"24","spectral14":"13","spectral20":"14","spectral9":"8","spectral25":"4","spectral42":"36","spectral3":"1","spectral47":"19","spectral17":"2","louvain":"597","spectral36":"6","spectral39":"23","spectral10":"2","spectral15":"8","spectral33":"8","spectral5":"4","spectral21":"10","spectral44":"21","spectral26":"2","spectral40":"14","spectral8":"2","spectral11":"10","spectral4":"2","spectral37":"31","spectral48":"6","spectral22":"21","spectral23":"5","spectral12":"5","spectral50":"38","spectral19":"13","spectral34":"30","spectral45":"29","spectral7":"5","spectral49":"9","spectral38":"20","spectral24":"21","spectral13":"1","spectral31":"0","spectral29":"17","spectral35":"32","spectral30":"1","spectral41":"28","spectral27":"24","spectral18":"5","spectral46":"24","spectral2":"0","spectral16":"5"}}

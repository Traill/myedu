{"id":"1569565177","paper":{"title":{"text":"Trapping Set Structure of Finite Geometry LDPC Codes"},"authors":[{"name":"Qiuju Diao"},{"name":"Ying Yu Tai"},{"name":"Shu Lin"},{"name":"Khaled Abdel-Ghaffar"}],"abstr":{"text":"Abstract\u2014The trapping set structure of LDPC codes con- structed using ﬁnite geometries is analyzed. A trapping set is modeled as a sub-geometry of the geometry used to construct an LDPC code. The variable nodes of a trapping set are viewed as points of the geometry and the check nodes adjacent to the variable nodes are viewed as the lines passing through any of these points. Based on this geometrical representation of a trapping set, its conﬁguration can be determined."},"body":{"text":"With iterative decoding, most LDPC codes have a common severe weakness, known as the error-ﬂoor. The error-ﬂoor of an LDPC code is characterized by the phenomenon that as the SNR continues to increase, the error probability suddenly drops at a rate much slower than that in the region of low to moderate SNR. The error-ﬂoor may preclude LDPC codes from applications where very low error rates are required.\nEver since the phenomenon of the error-ﬂoors of LDPC codes with iterative decoding became known [1], a great deal of research effort has been expended in ﬁnding its causes and methods to resolve or mitigate the error-ﬂoor problem. For the AWGN channel, the error-ﬂoor of an LDPC code is mostly caused by an undesirable structure, known as a trapping set [2], in the Tanner graph on which the decoding is carried out.\nThis paper is concerned with the analysis of the trapping set structure of LDPC codes constructed using ﬁnite geometries, called ﬁnite geometry (FG)-LDPC codes. In this analysis, a trapping set is modeled as a sub-geometry of the geometry used to construct an FG-LDPC code. The variable nodes (VNs) of a trapping set are viewed as points of the geometry and the check nodes (CNs) adjacent to the variable nodes are viewed as the lines containing any of these points. Based on this geometrical representation of a trapping set, we are able to determine the conﬁguration of the trapping set.\nIn this paper, we focus on the trapping set structure of LDPC codes constructed from the two-dimensional Euclidean geometry (EG) over ﬁnite ﬁelds. The concepts and the geomet- rical model developed for this subclass of geometries can be applied in a straightforward manner to Euclidean geometries of higher dimensions and to projective geometries. It should be stated that the geometrical approach has been already used to characterize trapping sets of projective geometry codes of dimensions 2 and 3 in [3] and the related stopping sets in [4]. Our approach is simpler and more elementary than that\nin [3] which resorts to some results in projective geometries to derive the results.\nThis paper is organized as follows. Relevant deﬁnitions are given in Section II. Two-dimensional Euclidean geometries and codes are reviewed in Sections III and IV, respectively. The main contributions are presented in Section V in which the analysis of trapping sets of codes is given. The paper is concluded in Section VI.\nDeﬁnition 1. Let G be the Tanner graph of a binary LDPC code C of length n given by the null space of an m×n matrix H over GF (2). For 1 ≤ κ ≤ n and 0 ≤ τ ≤ m, we have the following deﬁnitions [5]:\n1) A (κ, τ ) trapping set is a set of κ VNs in G which induces a sub-graph of G with exactly τ odd-degree CNs and an arbitrary number of even-degree CNs.\n2) An elementary (κ, τ ) trapping set is a trapping set for which all CNs in the induced sub-graph of the Tanner graph have degree one or degree two, and there are exactly τ degree-one CNs.\n3) A small (κ, τ ) trapping set is a trapping set for which κ ≤ √ n and τ /κ ≤ 4.\nSuppose, in transmission of a codeword in C, an error pattern e with κ errors at the locations of the κ VNs of a (κ, τ ) trapping set, T, occurs. This error pattern will cause τ parity-check failures. In this case, for iterative decoding, another decoding iteration must be carried out to correct the failed check-sums. Iterative decoding, such as the Sum- Product Algorithm (SPA) and the Min-Sum Algorithm (MSA), is very susceptible to trapping sets of a code because it works locally in a distributed-processing manner. Each CN has a local processing unit to process the messages received from the VNs connected to it and each VN has a local processing unit to process the messages received from the CNs connected to it. Hopefully, these local processing units through iterations and message exchanges collect enough information to make a global optimum decision of the transmitted code bits.\nIn each decoding iteration, we call a CN a satisﬁed CN if it satisﬁes its corresponding check-sum constraint, otherwise, we call it an unsatisﬁed CN. During the decoding process, the decoder undergoes state transitions from one state to another until all the CNs satisfy their corresponding check-sum\nconstraints or a predetermined maximum number of iterations is reached. In the process of a decoding iteration, the messages from the satisﬁed CNs try to reinforce the current decoder state, while the messages from the unsatisﬁed CNs try to change some of the bit decisions to satisfy their check-sum constraints. If errors affect the κ code bits (or the κ VNs) of a (κ, τ ) trapping set T, the τ odd-degree CNs, each connected to an odd number of VNs in T, will not be satisﬁed while all other CNs will be satisﬁed. The decoder will succeed in correcting the errors in T if the messages coming from the unsatisﬁed CNs connected to the VNs in T are strong enough to overcome the messages coming from the satisﬁed CNs. However, this may not be the case if τ is small. As a result, the decoder may not converge to a valid codeword even if more decoding iterations are performed and this non-convergence of decoding results in an error-ﬂoor.\nFor the binary-input AWGN channel, error patterns with a small number of errors are more probable to occur than error patterns with a larger number of errors. Consequently, in message-passing decoding algorithms, the most harmful (κ, τ ) trapping sets are usually those with small values of κ and τ , especially when the value of τ is very small compared to that of κ. From extensive computer simulations reported in the literature, it has been observed that most trapping sets that exert a strong inﬂuence on the error-ﬂoor are elementary trapping sets and small trapping sets, see Deﬁnition 1 parts 2) and 3), respectively.\nFurthermore, undetected errors caused by minimum-weight codewords also contribute to the error-ﬂoor of the code. These minimum-weight codewords correspond to (d min , 0) trapping sets where d min is the minimum distance of the code. If there are no harmful trapping sets of size smaller than d min , then the error-ﬂoor of the code decoded with iterative decoding is dominated by the minimum distance of the code.\nA regular binary LDPC code is given by the null space of a sparse parity-check matrix H over GF (2) that has constant column weight γ and constant row weight ρ. Such an LDPC code is said to be (γ, ρ)-regular. In almost all of the proposed constructions of LDPC codes, the following constraint on the rows and columns of the parity-check matrix H is imposed: no two rows (or two columns) can have more than one place where they both have non-zero components. This constraint on the rows and columns of H is referred to as the row- column (RC)-constraint . The RC-constraint ensures that the Tanner graph of the LDPC code given by the null space of H has a girth of at least 6 and that the minimum distance of the code is at least γ + 1 [6], [7]. A parity-check matrix H that satisﬁes the RC-constraint is called an RC-constrained parity- check matrix and the code given by its null space is called an RC-constrained LDPC code. The code is cyclic if the cyclic shift of every codeword in the code is also a codeword. If H is a column of circulants, then its null space is a cyclic code.\nIn a very recent paper [8], we investigated the trapping set structure of RC-constrained regular LDPC codes and showed that, for an RC-constrained (γ, ρ)-regular LDPC code, its Tanner graph contains no trapping set of size κ ≤ γ with\nthe number τ of odd-degree CNs smaller than γ. For several classes of algebraic LDPC codes, their Tanner graphs contain no harmful trapping sets of sizes smaller than their minimum distances, which are relatively large. Hence, the error-ﬂoors of these codes are expected to be very low.\nIn this section, we give a brief review of two-dimensional Euclidean geometries and develop some of their structural properties which are pertinent for analyzing the trapping set structure of EG-LDPC codes.\nConsider the two-dimensional Euclidean geometry EG (2, q) over the ﬁeld GF (q), where q is a power of a prime. This geometry consists of q 2 points and q(q + 1) lines. A point in EG (2, q) is a two-tuple a = (a 0 , a 1 ) over GF(q) and the zero two-tuple (0, 0) is called the origin. A line in EG(2, q) is a one-dimensional subspace or its coset of the vector space of all the q 2 two-tuples over GF (q). A line contains q points. If a point a is on a line, we say that the line passes through the point a. Any two points in EG (2, q) are connected by one and only one line.\nThe ﬁeld GF (q 2 ), as an extension ﬁeld of the ﬁeld GF(q), is a realization of EG (2, q) [7]. Let α be a primitive element of GF (q 2 ). Then, the powers of α, α −∞ 0, α 0 = 1, α, α 2 , . . . , α q 2 − 2 , give all the q 2 elements of GF (q 2 ) and they represent the q 2 points of EG (2, q). The 0-element represents the origin of EG (2, q).\nFor every point a in EG (2, q), there are q + 1 lines that intersect at (or pass through) the point a. These lines are said to form a bundle of lines intersecting at the point a, called an intersecting bundle at a and denoted by ∆(a). Any point in EG (2, q) other than a lies on one and only one line in ∆(a) while the point a lies on every line in ∆(a). Let ∆(b) be the bundle of lines intersecting at the point b = a. Then ∆(a) and ∆(b) have a unique line in common, namely, the line connecting points a and b.\nTwo lines in EG (2, q) are called parallel if they do not have points in common. The q(q + 1) lines in EG(2, q) can be partitioned into q + 1 sets, each set consists of q parallel lines and is called a parallel bundle. Each point in EG (2, q) lies on one and only one line in each parallel bundle.\nLet α be a primitive element of GF(q 2 ). Then the order of α q +1 is q − 1. The set L −∞ = {α −∞ = 0, α 0 = 1, α (q+1) , . . . , α (q−2)(q+1) } of q points in EG(2, q) form a line passing through the origin. For 0 ≤ j ≤ q, the set α j L −∞ = {0, α j , α (q+1)+j , . . . , α (q−2)(q+1)+j } of q points also forms a line passing through the origin of EG (2, q) [7]. Hence, L −∞ , αL −∞ , . . . , α q L −∞ give the q + 1 lines intersecting at the origin.\nLet L = {α j 1 , α j 2 , . . . , α j q } be a line in EG(2, q) not passing through the origin with α j 1 , α j 2 , . . . , α j q as its q points where 0 ≤ j 1 , j 2 , . . . , j q < q 2 − 1. For 0 ≤ i < q 2 − 1, let α i L = {α j 1 +i , α j 2 +i , . . . , α j q +i }. Then, the set α i L of q points also forms a line in EG (2, q) not passing through the\norigin and α 0 L, αL, . . . , α q 2 − 2 L give all the q 2 − 1 lines in EG (2, q) not passing through the origin.\nIn this section, we deﬁne parity-check matrices for Euclidean geometry codes. For a line, L, in EG (2, q), we deﬁne the q 2 -tuple over GF (2): v L \t = \t (v −∞ , v 0 , v 1 , . . . , v q 2 − 2 ), whose components correspond to the q 2 points α −∞ , α 0 , α, α 2 , . . . , α q 2 − 2 of EG (2, q), where v j = 1 if and only if α j is a point on L and v j = 0 otherwise. The weight of v L is q. This q 2 -tuple v L is called the incidence vector of the line L.\nForm a q(q + 1) × q 2 matrix H EG over GF (2) with the incidence vectors of the q(q + 1) lines of EG(2, q) as rows. This matrix is constructed as follows. Let L −∞ and L be a line passing through the origin of EG (2, q) and a line not passing through the origin, respectively. We arrange the rows of H EG in such a way that the incidence vectors of the lines L −∞ , αL −∞ , . . ., α q L −∞ are the ﬁrst q + 1 rows of H EG and the incidence vectors of the lines α j L with 0 ≤ j < q 2 −1 are the next q 2 − 1 rows of H EG . We label the rows of H EG from 0 to q(q + 1) − 1 and the columns of H EG from −∞, 0 to q 2 −2. The column labeled with −∞ corresponds to the origin of the geometry. For 0 ≤ j < q 2 − 1, the column labeled j corresponds to the point α j . Let H EG,T and H EG,B be the sub-matrices of H EG that consist of the top q + 1 and the bottom q 2 − 1 rows of H EG , respectively. Then,\nThe top sub-matrix H EG,T of H EG is a (q + 1) ×q 2 matrix over GF (2) which has the following structures: 1) the −∞- th column consists of q + 1 1-entries; and 2) the 0-th to the (q 2 − 2)-th columns form a row of (q − 1) identity matrices of size (q + 1) ×(q +1). The bottom sub-matrix H EG,B of H EG has the following structures: 1) the −∞-th column consists of q 2 − 1 0-entries; and 2) the other q 2 − 1 columns form a (q 2 −1)×(q 2 −1) circulant with both column and row weights equal to q. The column and row weights of H EG are q + 1 and q, respectively. For j = −∞ or 0 ≤ j < q 2 − 2, there are q + 1 rows in H EG that have 1-components at the j-th position. These rows are the incidence vectors of the q + 1 lines that intersect at the point α j of EG (2, q). The rows of the top sub-matrix H EG,T of H EG correspond to the q + 1 lines of EG (2, q) that intersect at the origin and the rows of the sub-matrix H EG,B of H EG correspond to the q 2 − 1 lines that do not pass through the origin.\nSince two lines in EG (2, q) are either parallel or they intersect at one and only one point, their corresponding incidence vectors have at most one place where they both have 1-components. This implies that H EG satisﬁes the RC-constraint. Its null space gives a binary RC-constrained (q + 1, q)-regular EG-LDPC code C EG . The RC-constraint on H EG ensures that the minimum distance of this code is at least q + 2 and its Tanner graph has a girth of at least 6.\nIf we remove the ﬁrst column from the parity-check matrix H EG , the top sub-matrix becomes a (q+1)×(q 2 −1) circulant\nand the bottom sub-matrix becomes a (q 2 −1)×(q 2 −1) square circulant H ∗ EG,B . The resultant matrix becomes\nThe null space of H ∗ EG gives a cyclic EG-LDPC code since both H ∗ EG,T and H ∗ EG,B are circulants. This code, which we denote by C (0) EG,cyc , has length q 2 − 1 and minimum distance at least q + 2. If we use the bottom circulant H ∗ EG,B in (2) as the parity-check matrix, then the null space of H ∗ EG,B gives a cyclic-EG-LDPC code C (1) EG,cyc of length q 2 −1 with minimum distance at least q + 1. The cyclic-LDPC codes, C (0) EG,cyc and C (1) EG,cyc are called type-0 and type-1 cyclic-EG-LDPC codes, respectively. The type-1 cyclic-EG-LDPC codes were ﬁrst introduced in [6]. Huang et. al. [8] have recently proved that their Tanner graphs do not contain harmful trapping sets of sizes smaller than their minimum distances.\nThe type-1 cyclic EG-LDPC codes, which were introduced in [6], are dual codes of a special subclass of polynomial codes discovered in the late 1960\u2019s and early 1970\u2019s [9],[10]. For q = 2 s , it was proved that the rank of H ∗ EG,B is 3 s − 1 and the type-1 cyclic EG-LDPC code C (1) EG,cyc given by the null space of H ∗ EG,B has minimum distance exactly 2 s + 1. The type-0 cyclic EG-LDPC code C (0) EG,cyc is a sub-code of the type-1 cyclic EG-LDPC code C (1) EG,cyc . It can be readily proved that the rank of H ∗ EG is 3 s and the minimum distance of C (0) EG,cyc is exactly 2 s + 2. The EG-LDPC code C EG given by the parity-check matrix H EG in (1) is an extended code of C (0) EG,cyc and the rank of H EG is also 3 s . The minimum distance of C EG is exactly 2 s + 2.\nIn this section, we analyze the structure of trapping sets of the EG-LDPC code, C EG , whose parity-check matrix, H EG , is the q(q + 1) × q 2 matrix given by (1).\nThe rows of H EG correspond to the q(q + 1) lines of EG (2, q) and the columns correspond to the q 2 points of EG (2, q). For the purpose of our analysis, we label the rows with L 0 , L 1 , . . . , L q (q+1)−1 , the lines of EG (2, q), and label the columns with α −∞ = 0, α 0 = 1, α, α 2 , . . . , α q 2 − 2 , the points of EG (2, q), where α is a primitive element of GF(q 2 ).\nThe Tanner graph G EG associated with the parity-check matrix H EG consists of q 2 VNs and q(q + 1) CNs. Since the VNs correspond to the columns of H EG and the CNs correspond to the rows of H EG , we label the VNs and the CNs of G EG as we labeled the columns and the rows of H EG , respectively. A VN α j is connected to a CN L i if and only if α j is a point on the line L i in EG (2, q), i.e., if and only if the line L i passes through the point α j . Since each point in EG (2, q) is intersected by q +1 lines and each line in EG(2, q)\nconsists of q points, we readily see that the degree of each VN in the Tanner graph G EG associated with the parity-check matrix H EG is q + 1 and the degree of each CN in G EG is q. The Tanner graph G EG is actually a graphical representation of the geometry EG (2, q).\nLet Λ be a set of κ points and Φ(Λ) be the set of lines, each passing through at least one point in Λ. Then, Λ induces a (κ, τ ) trapping set where τ is the number of lines in Φ(Λ), each passing through an odd number of points in Λ. Hence, if n i is the number of lines in Φ(Λ), each passing through exactly i points in Λ, then\nNotice that n i = 0 for i = 0 or i > κ. Based on this geometrical point of view, a trapping set of an EG-LDPC code simply corresponds to a sub-geometry of EG (2, q).\nWe derive here a lower bound on the number, n 1 , of lines passing through exactly one point in Λ. This bound will certainly give a lower bound on τ in (3).\nFirst, we count, in two different ways, the number of pairs where each pair consists of a point in Λ and a line in Φ(Λ) passing through this point. Since each of the κ points in Λ is on q + 1 lines, the total number of such pairs is (q + 1)κ. Alternatively, since a line passing through i points in Λ contributes i such pairs, the total number of pairs is n 1 + 2n 2 + · · · + κn κ . Hence,\nNext, we count, also in two different ways, the number of pairs of points in Λ. (Throughout this paper, by a pair of points we mean an unordered pair of distinct points.) Since Λ consists of κ points, there are κ 2 such pairs. Alternatively, since every pair of points in Λ is on a unique line in Φ(Λ) and a line passing through i points in Λ connects i 2 pairs of points, the total number of pairs of points in Λ is κ i =1 i 2 n i . Hence,\n2 . \t (5) As i 2 = i(i − 1)/2 ≥ i/2 for i ≥ 2, it follows from (5) that\nIf 1 ≤ κ ≤ q + 1, then (q + 2 − κ)κ ≥ q + 1. This follows from the fact that (q + 2 − κ)κ is a concave function in κ which equals q + 1 for κ = 1 and q + 1. From (3) and (7), we conclude that the number of CNs of odd degree in any trapping set of size at most q + 1 is at least q + 1. Since the ratio of the number of CNs of odd degree to the number of VNs is at least q + 2 − κ, it follows, from Deﬁnition 1 part 3), that the Tanner graph G EG associated with the parity-check\nmatrix H EG contains no small trapping set of size κ ≤ q − 3 as τ /κ ≥ q + 2 − κ > 4 in this case. On the other hand, from the same deﬁnition, since the code length n = q 2 , it follows that G EG contains no small trapping set of size κ ≥ q + 1 since κ ≥ √ n + 1 in this case. For q = 2 s , the minimum distance of C EG is 2 s + 2. The above result basically says that the Tanner graph G EG of C EG contains no trapping set of size smaller than the minimum distance 2 s + 2 of the code with the number of CNs of odd degrees smaller than 2 s + 1 (the column weight of the parity-check matrix H EG ).\nEquality holds in (7) if and only if i 2 n i = in i /2 for 2 ≤ i ≤ κ, which is the case if and only if n 3 = n 4 = · · · = n κ = 0, i.e., each line in Φ(Λ) passes through at most two points in Λ. This is the same as saying that no three points in Λ are collinear. In this case, we say that the points in Λ have a uniform pair-wise distribution. If this condition holds, then Λ forms a (κ, (q + 2 − κ)κ) elementary trapping set. Any other distribution of points will result in a trapping set with a larger number CNs with odd degrees.\nAs another special case, we consider the extreme opposite case in which all the points in Λ are collinear. Then, n 2 = · · · = n κ− 1 = 0 and n κ = 1. Substituting in (4), it follows that n 1 = qκ, i.e., the trapping set has qκ CNs of degree 1 in addition to a CN of degree κ. Hence, Λ forms a (κ, qκ) trapping set if κ is even and a (κ, qκ + 1) trapping set if κ is odd. Typically, such trapping sets will not trap the iterative decoder since they have large numbers of CNs of odd degree.\nIn the previous subsection, we developed a bound on the number of odd-degree CNs in the Tanner graph G EG associated with the parity-check matrix H EG of the EG-LDPC code C EG . In the following, we improve upon this bound by considering the detailed conﬁguration of lines passing through the points corresponding to the trapping set.\nBased on the geometrical interpretation presented in this paper, to characterize the subgraph induced by a trapping set of κ VNs, labelled α j 1 , α j 2 , . . . , α j κ , in the Tanner graph of an EG-LDPC code, we consider the set Λ = {α j 1 , α j 2 , . . . , α j κ } in EG (2, q) and the set of lines, Φ(Λ), that contain points in Λ. Notice that the set of lines passing through α j l , for 1 ≤ l ≤ κ, is the intersecting bundle ∆(α j l ). Hence, Φ(Λ) = ∆(α j 1 ) ∪ ∆(α j 2 ) ∪ · · · ∪ ∆(α j κ ). A CN of degree 1 corresponds to a line passing through one and only one point in Λ, i.e., the line belongs to one and only one of the intersecting bundles ∆(α j 1 ), ∆(α j 2 ), . . . , ∆(α j κ ). In the following, we lower bound the number of such lines.\nRecall that each parallel bundle, of q lines, contains all the points in EG (2, q) and, in particular, all the points in Λ = {α j 1 , α j 2 , . . . , α j κ }. Let P be a parallel bundle of lines and L i 1 , L i 2 , . . . , L i b be the lines in P , each passing through at least one point in Λ. For 1 ≤ l ≤ b, let Λ l be the set of points in Λ that lie on line L i l and let κ l be the number of such points. Since the lines L i 1 , L i 2 , . . . , L i b are parallel, each point in Λ lies on one and only one of these lines. Hence, Λ 1 , Λ 2 , . . . , Λ b are disjoint sets whose union is Λ and κ 1 + κ 2 + · · ·+ κ b = κ.\nLet Ω l be the set consisting of the κ l intersecting bundles whose intersecting points are those points in Λ lying on L i l . We call Ω l the congregation with the line L i l as its center. Thus, in total we have b center lines and all other lines in Φ(Λ) are non-center lines. We denote by n \u2032 1 the number of center lines L i l , 1 ≤ l ≤ b, for which κ l = 1, i.e., n \u2032 1 = |{l : 1 ≤ l ≤ b, κ l = 1}|. For 1 ≤ i ≤ κ, let n \u2032\u2032 i denote the number of non-center lines, each passing through i points in Λ. Since any two points in Λ l are connected by a center line, they cannot lie on the same non-center line. Hence, the points on any non-center line belong to different sets Λ 1 , Λ 2 , . . . , Λ b . This implies that n \u2032\u2032 i = 0 for i > b. We are interested in lower bounding n 1 = n \u2032 1 + n \u2032\u2032 1 , the total number of lines in Φ(Λ) that pass through exactly one point in Λ.\nSince each of the κ points in Λ is on q + 1 lines, including the center line, each point is on exactly q non-center lines. Hence, the number of pairs each consisting of a point in Λ and a non-center line passing through the point is\nFor 1 ≤ r < t ≤ b, there are κ r κ t pairs of points, one belonging to Λ r and the other to Λ t . Hence, the number of pairs of points in Λ that do not belong to the same set Λ l for 1 ≤ l ≤ b, is given by\n2 \t . (9)\nSince the two points in every such pair are connected by a non-center line, and a non-center line passing through i points in Λ connects i 2 such pairs, we have\nFrom (8) and (10) and following the same argument leading to (7), we obtain\nHence, the number of lines in Φ(Λ) passing through a single point in Λ, which is n 1 = n \u2032 1 + n \u2032\u2032 1 , is bounded by\nThis gives a lower bound on the number of CNs of degree one in a trapping set of size κ. We notice that this lower bound agrees with the lower bound in (7) whenever κ l ≤ 2 for all 1 ≤ l ≤ b and improves upon it in all other cases.\nInequality (12) can be applied easily once the points in the geometry corresponding to the VNs of the trapping set are given. The inequality depends on the numbers κ 1 , κ 2 , . . . , κ b , which in turn depend on the set of points Λ as well as on the choice of the parallel bundle P . For example, if each point is represented by a two-tuple (a 0 , a 1 ) over GF(q), then {(a 0 , a 1 ) : a 0 ∈ GF(q)} for some a 1 ∈ GF(q) is a line\nassociated with this value of a 1 . The q lines associated with the q values of a 1 ∈ GF(q) form a parallel bundle. (This parallel bundle can be viewed as the set of the q horizontal lines in a two-dimensional plane where each point in the Euclidean geometry is represented by its cartesian coordinates.) The number of points in Λ on the line associated with a 1 is the number of points (a 0 , a 1 ) ∈ Λ. From this, it is easy to compute κ 1 , κ 2 , . . . , κ b which can be used in (12) to obtain a lower bound on the number of CNs of degree one in the trapping set.\nIn this paper, we present a geometrical model to analyze the trapping set structure of the Tanner graph of the EG- LDPC code with parity-check matrix H EG as given in (1). The parity-check matrix H ∗ EG in (2) of the cyclic EG-LDPC code C (0) EG,cyc is obtained by removing the origin from the Euclidean geometry EG (2, q) and, therefore, (6) also holds for its associated trapping sets. By also removing all the lines passing through the origin, we obtain the parity-check matrix H ∗ EG,B of the cyclic-EG-LDPC code C (1) EG,cyc . In this case, each point is on q lines rather than on q + 1 lines as in the case of H EG . Hence, (6) also holds for C (1) EG,cyc after replacing q + 1 by q. Our approach can also be applied to analyze the trapping set structure of projective geometries and Euclidean geometries with dimensions greater than two [11].\nThis work was supported by the National Science Founda- tion (NSF) under the grant CCF1015548."},"refs":[{"authors":[{"name":"D. J. C. MacKay"},{"name":"M. S. Postol"}],"title":{"text":"Weaknesses of Margulis and Ramanujan-Margulis low-density parity-check codes"}},{"authors":[{"name":"T. Richardson"}],"title":{"text":"Error ﬂoors of LDPC codes"}},{"authors":[{"name":"S. Laendner"},{"name":"T. Hehn"},{"name":"O. Milenkovic"},{"name":"J. B. Huber"}],"title":{"text":"The trapping redundancy of linear block codes"}},{"authors":[{"name":"N. Kashyap"},{"name":"A. Vardy"}],"title":{"text":"Stopping sets in codes from designs"}},{"authors":[{"name":"S. L¨andner"},{"name":"O. Milenkovic"}],"title":{"text":"Algorithmic and combinatorial analysis of trapping sets in structured LDPC codes"}},{"authors":[{"name":"Y. Kou"},{"name":"S. Lin"},{"name":"M. P. C. Fossorier"}],"title":{"text":"Low density parity-check codes based on ﬁnite geometries: A rediscovery and new results"}},{"authors":[{"name":"S. Li"},{"name":"D. J. Costell"}],"title":{"text":"Jr"}},{"authors":[{"name":"Q. Huang"},{"name":"Q. Diao"},{"name":"S. Lin"},{"name":"K. Abdel-Ghaffar"}],"title":{"text":"Cyclic and quasi- cyclic LDPC codes on constrained parity-check matrices and their trapping sets"}},{"authors":[{"name":"T. Kasami"},{"name":"S. Lin"},{"name":"W. W. Peterson"}],"title":{"text":"Polynomial codes"}},{"authors":[{"name":"S. Lin"}],"title":{"text":"On the number of information symbols in the polynomial codes"}},{"authors":[{"name":"H. Tang"},{"name":"J. Xu"},{"name":"S. Lin"},{"name":"K. A. S. Abdel-Ghaffar"}],"title":{"text":"Codes on ﬁnite geometries"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565177.pdf"},"links":[{"id":"1569564843","weight":3},{"id":"1569565883","weight":7},{"id":"1569564889","weight":3},{"id":"1569565223","weight":3},{"id":"1569566725","weight":3},{"id":"1569566385","weight":3},{"id":"1569565867","weight":2},{"id":"1569566799","weight":2},{"id":"1569559665","weight":2},{"id":"1569564605","weight":5},{"id":"1569566321","weight":3},{"id":"1569566605","weight":4},{"id":"1569566683","weight":3},{"id":"1569566855","weight":4},{"id":"1569565097","weight":2},{"id":"1569566227","weight":2},{"id":"1569566091","weight":2},{"id":"1569566697","weight":3},{"id":"1569565551","weight":3},{"id":"1569565711","weight":6},{"id":"1569566761","weight":3},{"id":"1569566943","weight":2},{"id":"1569565091","weight":6},{"id":"1569566571","weight":3},{"id":"1569552245","weight":3},{"id":"1569559967","weight":3},{"id":"1569567045","weight":2},{"id":"1569564481","weight":4},{"id":"1569560833","weight":4},{"id":"1569566415","weight":2},{"id":"1569564805","weight":3},{"id":"1569567005","weight":2},{"id":"1569566081","weight":2},{"id":"1569565355","weight":2},{"id":"1569551535","weight":5},{"id":"1569564897","weight":14},{"id":"1569565775","weight":3},{"id":"1569565547","weight":2},{"id":"1569566871","weight":3},{"id":"1569565461","weight":3},{"id":"1569564731","weight":6},{"id":"1569565171","weight":2},{"id":"1569566207","weight":6},{"id":"1569558325","weight":2},{"id":"1569565837","weight":3},{"id":"1569567535","weight":2},{"id":"1569563411","weight":2},{"id":"1569560427","weight":2},{"id":"1569564849","weight":2},{"id":"1569566363","weight":2},{"id":"1569565459","weight":2},{"id":"1569555811","weight":2},{"id":"1569565609","weight":2},{"id":"1569565291","weight":2},{"id":"1569564203","weight":3},{"id":"1569566821","weight":3},{"id":"1569566751","weight":2},{"id":"1569566467","weight":2},{"id":"1569566157","weight":2},{"id":"1569566903","weight":2},{"id":"1569566999","weight":2},{"id":"1569565859","weight":2},{"id":"1569566563","weight":13},{"id":"1569559221","weight":5},{"id":"1569565347","weight":2},{"id":"1569566925","weight":7},{"id":"1569566497","weight":5},{"id":"1569566795","weight":2},{"id":"1569561679","weight":2},{"id":"1569566717","weight":2},{"id":"1569560721","weight":3},{"id":"1569565897","weight":6},{"id":"1569566889","weight":3},{"id":"1569566749","weight":3},{"id":"1569566269","weight":3},{"id":"1569564195","weight":2},{"id":"1569561513","weight":5},{"id":"1569564613","weight":6},{"id":"1569567009","weight":3},{"id":"1569566865","weight":5},{"id":"1569564271","weight":2},{"id":"1569566343","weight":2},{"id":"1569564311","weight":5},{"id":"1569565803","weight":2},{"id":"1569565785","weight":2},{"id":"1569566239","weight":2},{"id":"1569566679","weight":5},{"id":"1569566575","weight":3},{"id":"1569563981","weight":3},{"id":"1569561085","weight":3},{"id":"1569566419","weight":2},{"id":"1569566617","weight":3},{"id":"1569559565","weight":4},{"id":"1569566905","weight":2},{"id":"1569566311","weight":2},{"id":"1569563307","weight":3},{"id":"1569555999","weight":2},{"id":"1569566759","weight":2},{"id":"1569559195","weight":2},{"id":"1569566149","weight":4},{"id":"1569566217","weight":2},{"id":"1569566657","weight":2},{"id":"1569558859","weight":6},{"id":"1569565199","weight":30},{"id":"1569566511","weight":3},{"id":"1569566719","weight":2},{"id":"1569566369","weight":2},{"id":"1569566531","weight":2},{"id":"1569567665","weight":2},{"id":"1569566581","weight":2},{"id":"1569566489","weight":2},{"id":"1569565535","weight":2},{"id":"1569562867","weight":5},{"id":"1569566325","weight":2},{"id":"1569567015","weight":3},{"id":"1569559805","weight":8},{"id":"1569566437","weight":2},{"id":"1569558901","weight":2},{"id":"1569565735","weight":2},{"id":"1569564881","weight":4},{"id":"1569553537","weight":2},{"id":"1569565427","weight":2},{"id":"1569552251","weight":2},{"id":"1569566425","weight":3},{"id":"1569554971","weight":4},{"id":"1569565501","weight":2},{"id":"1569566445","weight":2},{"id":"1569566791","weight":2},{"id":"1569565559","weight":3},{"id":"1569566371","weight":2},{"id":"1569565655","weight":2},{"id":"1569566127","weight":2},{"id":"1569563763","weight":7},{"id":"1569566473","weight":3},{"id":"1569564857","weight":4},{"id":"1569566913","weight":5},{"id":"1569566809","weight":32},{"id":"1569566447","weight":2},{"id":"1569565817","weight":7},{"id":"1569565847","weight":7},{"id":"1569557083","weight":2},{"id":"1569565929","weight":2},{"id":"1569566141","weight":4},{"id":"1569563231","weight":8},{"id":"1569565279","weight":2},{"id":"1569555879","weight":3},{"id":"1569566115","weight":2},{"id":"1569565595","weight":3},{"id":"1569565185","weight":3},{"id":"1569566773","weight":3},{"id":"1569564985","weight":2},{"id":"1569566223","weight":5},{"id":"1569558401","weight":5},{"id":"1569564973","weight":9},{"id":"1569565469","weight":3},{"id":"1569565029","weight":2},{"id":"1569566505","weight":2},{"id":"1569565933","weight":7},{"id":"1569562207","weight":4},{"id":"1569567033","weight":4},{"id":"1569565527","weight":3},{"id":"1569566159","weight":3},{"id":"1569566051","weight":2},{"id":"1569561123","weight":5},{"id":"1569566673","weight":8},{"id":"1569565311","weight":2},{"id":"1569566233","weight":3},{"id":"1569566893","weight":4},{"id":"1569566317","weight":3},{"id":"1569560997","weight":2},{"id":"1569565741","weight":4},{"id":"1569566275","weight":2},{"id":"1569566481","weight":2},{"id":"1569565545","weight":2},{"id":"1569566245","weight":6},{"id":"1569565463","weight":2},{"id":"1569566901","weight":2},{"id":"1569564485","weight":4},{"id":"1569565155","weight":2},{"id":"1569566631","weight":6},{"id":"1569565885","weight":2},{"id":"1569566177","weight":4},{"id":"1569565493","weight":10},{"id":"1569557633","weight":3},{"id":"1569566805","weight":7},{"id":"1569566293","weight":3},{"id":"1569565665","weight":3},{"id":"1569566831","weight":2},{"id":"1569565523","weight":5},{"id":"1569557715","weight":3},{"id":"1569566983","weight":2},{"id":"1569566097","weight":3},{"id":"1569566431","weight":2},{"id":"1569565765","weight":3},{"id":"1569565925","weight":6},{"id":"1569565435","weight":2},{"id":"1569565263","weight":3},{"id":"1569565093","weight":4},{"id":"1569565385","weight":2},{"id":"1569565919","weight":3},{"id":"1569566711","weight":2},{"id":"1569565241","weight":3},{"id":"1569566927","weight":3},{"id":"1569565661","weight":3},{"id":"1569566887","weight":2},{"id":"1569565273","weight":3},{"id":"1569552037","weight":2},{"id":"1569564919","weight":3},{"id":"1569566737","weight":2},{"id":"1569566429","weight":2},{"id":"1569566917","weight":5},{"id":"1569566035","weight":2},{"id":"1569565353","weight":5},{"id":"1569564683","weight":2},{"id":"1569564305","weight":2},{"id":"1569564283","weight":4},{"id":"1569566547","weight":3},{"id":"1569566651","weight":2},{"id":"1569566595","weight":2},{"id":"1569566137","weight":2},{"id":"1569565829","weight":2},{"id":"1569566529","weight":5},{"id":"1569565375","weight":2},{"id":"1569566715","weight":2},{"id":"1569565237","weight":6},{"id":"1569566755","weight":2},{"id":"1569566713","weight":2},{"id":"1569565541","weight":11},{"id":"1569566813","weight":3},{"id":"1569564201","weight":2},{"id":"1569562277","weight":4},{"id":"1569565425","weight":3},{"id":"1569566533","weight":4},{"id":"1569563975","weight":2},{"id":"1569564861","weight":4},{"id":"1569565529","weight":4},{"id":"1569566619","weight":8},{"id":"1569561185","weight":3},{"id":"1569566397","weight":3},{"id":"1569558779","weight":3},{"id":"1569563721","weight":2},{"id":"1569566001","weight":2},{"id":"1569565593","weight":2},{"id":"1569567483","weight":2},{"id":"1569564923","weight":4},{"id":"1569566299","weight":2},{"id":"1569565039","weight":7},{"id":"1569564769","weight":2},{"id":"1569565769","weight":8},{"id":"1569561713","weight":2},{"id":"1569563919","weight":2},{"id":"1569566577","weight":2},{"id":"1569559919","weight":4},{"id":"1569565861","weight":8},{"id":"1569566147","weight":4},{"id":"1569566057","weight":2},{"id":"1569560785","weight":4},{"id":"1569565561","weight":2},{"id":"1569566847","weight":3},{"id":"1569565997","weight":5},{"id":"1569565035","weight":12},{"id":"1569564961","weight":28},{"id":"1569559251","weight":2},{"id":"1569566583","weight":2},{"id":"1569565737","weight":2},{"id":"1569564463","weight":2},{"id":"1569566273","weight":3},{"id":"1569564123","weight":10},{"id":"1569565889","weight":2},{"id":"1569566611","weight":4},{"id":"1569551539","weight":3},{"id":"1569564505","weight":2},{"id":"1569565565","weight":5},{"id":"1569565635","weight":3},{"id":"1569561397","weight":3},{"id":"1569565731","weight":3},{"id":"1569566797","weight":6},{"id":"1569566413","weight":2},{"id":"1569565707","weight":3},{"id":"1569566375","weight":2},{"id":"1569564257","weight":2},{"id":"1569565373","weight":2},{"id":"1569566973","weight":2},{"id":"1569561579","weight":2},{"id":"1569551541","weight":4},{"id":"1569566839","weight":2},{"id":"1569565139","weight":2},{"id":"1569566663","weight":2},{"id":"1569565579","weight":2},{"id":"1569566067","weight":2},{"id":"1569566825","weight":3},{"id":"1569566241","weight":2},{"id":"1569564807","weight":2},{"id":"1569563007","weight":2},{"id":"1569566113","weight":2},{"id":"1569566727","weight":6},{"id":"1569565315","weight":3},{"id":"1569560581","weight":5},{"id":"1569559233","weight":4}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S17.T5.4","endtime":"16:20","authors":"Qiuju Diao, Ying Y. Tai, Shu Lin, Khaled Abdel-Ghaffar","date":"1341590400000","papertitle":"Trapping Set Structure of Finite Geometry LDPC Codes","starttime":"16:00","session":"S17.T5: Cyclic and Quasicyclic LDPC Codes","room":"Kresge Little Theatre (035)","paperid":"1569565177"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"1","spectral43":"1","spectral28":"6","spectral32":"28","spectral14":"6","spectral20":"6","spectral9":"1","spectral25":"18","spectral42":"3","spectral3":"1","spectral47":"43","spectral17":"0","louvain":"626","spectral36":"28","spectral39":"1","spectral10":"6","spectral15":"6","spectral33":"4","spectral5":"2","spectral21":"6","spectral44":"26","spectral26":"14","spectral40":"38","spectral8":"2","spectral11":"3","spectral4":"3","spectral37":"21","spectral48":"40","spectral22":"3","spectral23":"0","spectral12":"0","spectral50":"24","spectral19":"7","spectral34":"23","spectral45":"10","spectral7":"6","spectral49":"19","spectral38":"2","spectral24":"5","spectral13":"4","spectral31":"0","spectral29":"19","spectral35":"0","spectral30":"6","spectral41":"27","spectral27":"18","spectral18":"0","spectral46":"4","spectral2":"0","spectral16":"1"}}

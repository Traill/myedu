{"id":"1569565257","paper":{"title":{"text":"Reducing complexity of tail-biting trellises"},"authors":[{"name":"Heide Gluesing-Luerssen"},{"name":"G. David Forney"},{"name":"Jr."}],"abstr":{"text":"Abstract\u2014It is shown that a trellis realization can be locally reduced if it is not state-trim, branch-trim, proper, observable, and controllable. These conditions are not sufﬁcient for local irreducibility. Making use of notions that amount to \u201calmost unobservability/uncontrollability\u201d, a necessary and sufﬁcient cri- terion of local irreducibility for tail-biting trellises is presented."},"body":{"text":"This paper deals with tail-biting trellis realizations for linear block codes. They form the simplest type of realizations on graphs with cycles. The latter have gained a lot of interest because they are often simpler than realizations on cycle-free graphs and thus may give rise to more powerful iterative de- coding algorithms (e.g., LDPC codes). Unfortunately, minimal realization theory turns out to be much more challenging for graphs with cycles than for graphs on a ﬁnite conventional time axis, see [8] and the references therein, and even on general cycle-free graphs, see [3]. The discussion in [7] nicely illustrates the difﬁculties for the special case of tail-biting trellis realizations.\nIn this note we will study tail-biting trellis realizations with the goal to reduce their complexity by a local reduction process. We ﬁrst present necessary criteria for local irreducibil- ity of such realizations. They amount to well-known basic trellis properties. Secondly, we give a sufﬁcient criterion. This criterion is less obvious, and our approach will reveal how the normal graph dualization as derived in [1] helps to uncover defects of realizations that are otherwise not immediately evident. In fact, it turns out to be beneﬁcial to investigate a trellis and its dual simultaneously.\nFinally, we will relate our results to the approach taken by Koetter and Vardy [7], who narrowed down the class of potentially minimal tail-biting trellises by making use of product constructions.\nWe wish to mention that the results presented in Sec- tions II and III generalize straightforwardly to general normal graphs [3], [4], but it is open whether Section IV can be generalized as well.\nWe ﬁx the following notations pertaining to tail-biting trellis realizations.\nA linear block code C over a ﬁnite ﬁeld F is a subspace of a symbol sequence space A = Π m−1 i=0 A i , where each symbol alphabet A i is a ﬁnite-dimensional vector space over F.\nA linear tail-biting trellis realization (for short: trellis) is a collection of state spaces S i and local constraint codes C i such that all spaces are ﬁnite-dimensional over F and C i ⊆ S i × A i × S i+1 for all i ∈ Z m := {0, . . . , m − 1} (with index computation modulo m). The state sequence space is deﬁned as S = m−1 i=0 S i , and the elements of C i are called branches . The behavior of the realization is the set B of all pairs (a, s) ∈ A × S such that all constraints are satisﬁed; i.e., (s i , a i , s i+1 ) ∈ C i for all i. The code C generated by the realization is the set of all a ∈ A that appear in some (a, s) ∈ B. Note that conventional trellis realizations may simply be regarded as the special case where S 0 is trivial.\nA trellis realization of the code C is observable if for each a ∈ C there is precisely one pair (a, s) ∈ B. The realization is state-trim (resp. branch-trim) if each state (resp. branch) appears on a valid trajectory. We say that a constraint code C i is trim if both the projections of C i onto S i and onto S i+1 are surjective. A constraint code C i is proper if there are no nonzero branches of the form (s i , 0, 0) or (0, 0, s i+1 ) in C i .\nDeﬁnition I.1 A local reduction of a trellis is a replace- ment of one state space, say S i , and the incident constraint codes C i−1 and C i by spaces of at most the same dimension while all other spaces remain unchanged such that the resulting trellis represents the same code. We call a local reduction strict if the state space dimension is strictly reduced. A realization is called locally irreducible if each local reduction is isomorphic to the primal realization.\nObviously, if no dimension is reduced then the terminology \u201clocal reduction\u201d is not quite justiﬁed, and \u201clocal alteration\u201d may be more appropriate. But we will see later (Theorem IV.4) that a local reduction is always either strict or results in a trellis that allows a subsequent strict local reduction so that ultimately we achieve a net reduction of the trellis complexity.\nThe main tools for locally reducing a trellis are the mutu- ally dual processes of trimming and merging. They will be discussed in Section III. It will be shown that they allow us to reduce a trellis and its dual simultaneously.\nIf V is a ﬁnite-dimensional vector space over F, then its dual space ˆ V is deﬁned to be the linear algebra dual of V . Thus we have an inner product on V × ˆ V . For a subspace W ⊆ V the orthogonal space W ⊥ ⊆ ˆ V is deﬁned as the space of all vectors in ˆ V that are orthogonal to all vectors in W . For further properties we refer to [1], [3].\nFollowing the normal graph dualization introduced in [1], we deﬁne the dual of a trellis T as the trellis with the same index set in which the symbol alphabets A i , S i are replaced by their dual spaces ˆ A i , ˆ S i , the constraint codes C i are replaced by their orthogonal spaces C ⊥ i ⊆ ˆ S i × ˆ A i × ˆ S i+1 , and the sign of each dual state variable is inverted in one of the two constraints in which it is involved. The Normal Graph Duality Theorem [1] states that if T realizes a linear code C, then its dual, denoted by T ◦ , realizes the orthogonal code C ⊥ .\nA main tool in dualization is projection/cross-section dual- ity, for which we refer to [1, Thm. 7.2] or [3, Sec. 2.5]. As a ﬁrst application one obtains the following [6], [3].\nTheorem II.1 The constraint code C i of a trellis T is trim if and only if the dual constraint code C ⊥ i of T ◦ is proper.\nWe call a realization T controllable if the constraints C ⊥ i , i ∈ Z m , are linearly independent (in ˆ A × ˆ S). A detailed discussion and justiﬁcation of this terminology can be found in [3], where also the following has been proved.\nTheorem II.2 A trellis T is controllable if and only if the dual trellis T ◦ is observable. Moreover, T is controllable if and only if dim B = i dim C i − dim S.\nExample II.3 This example appeared ﬁrst in [5], [6]. Fig- ure 1(a) shows the product trellis with symbol spaces A i = F 2 for i ∈ Z 4 , obtained from the generators 01110, 10010, 01 101 with the indicated circular spans. The dashed (resp. solid) lines denote symbol variable 0 (resp. 1). The dual trellis is in Figure 1(b). Note that we chose ˆ S i = S i and the standard inner product for all state spaces and that no sign inverter is needed. Both trellises are state-trim, proper, observable and controllable. But the trellis in 1(b) is not branch-trim. We will see in the next section that both trellises are locally reducible.\nIn this section we turn to local reductions of a given trellis. In essence, all constructions will amount to trimming (i.e., restricting) or merging (i.e., \u201cquotienting\u201d) a particular state space. Thus, let us discuss these constructions in detail.\nLet T and T be two trellis realizations of the code C with index set {0, . . . , m − 1}. Denote the state spaces and con- straint codes by S i , C i and S i , C i , respectively. We say that T\nis obtained from T by trimming the state space S i , if S i is a subspace of S i and C i−1 = {(s i−1 , a i−1 , s i ) ∈ C i−1 | s i ∈ S i } and C i = {(s i , a i , s i+1 ) ∈ C i | s i ∈ S i }, while all other state spaces and constraint codes of T and T coincide.\nThe dual of state-trimming is an instance of what is known as merging in the literature of trellis realizations. In our case, merging has to be done by taking a suitable quotient space in order to keep the linearity of the resulting trellis. Precisely, we say the realization T is obtained from T by merging at time i if S i = S i /Y for some subspace Y ⊆ S i and if C i−1 = {(s i−1 , a i−1 , s i + Y) | (s i−1 , a i−1 , s i ) ∈ C i−1 } and similarly C i = {(s i + Y, a i , s i+1 ) | (s i , a i , s i+1 ) ∈ C i }. Again, all other state spaces and constraint codes of T and T coin- cide. It follows from projection/cross-section duality that T\nis obtained from T by trimming S i to the subspace Y if and only if (T ) ◦ is obtained from T ◦ by merging ˆ S i to ˆ S i /Y ⊥ .\nIn general, the trimmed/merged realization generates a dif- ferent code than the original realization. We will, of course, be interested in the case where the code generated does not change after trimming/merging. In this case, trimming and merging obviously form simultaneous local reductions of the trellis and its dual in the sense of Deﬁnition I.1.\nNow we can present a ﬁrst list of necessary conditions for local irreducibility.\nTheorem III.1 Any locally irreducible realization is state- trim, proper, observable, and controllable. More precisely, if a realization T lacks any of these properties, then there exists a strict local reduction of T , and the dual process is a strict local reduction of T ◦ .\nProof: If T is not state-trim or not proper, then we can trim either T or T ◦ (see Theorem II.1). The dual process is a merging, and we obtain strict local reductions for T and T ◦ . Next, suppose T is unobservable. Precisely, let (0, s) be a non- trivial unobservable trajectory and let s i ∈ S i be a nonzero state on this trajectory. Let T i be a subspace of S i such that T i ⊕ s i = S i . It is not hard to see ([3]) that the realization obtained by trimming S i to T i still generates the same code. Thus we have obtained a strict local reduction. The dual process is a suitable state merging of T ◦ , and this again is a strict local reduction. This also shows that uncontrollable realizations are locally reducible.\nNote that the trellises in Figure 1 have all the necessary conditions of the previous theorem, and thus this simple test does not imply their local reducibility. In fact, we need to make use of the fact that the trellis in Figure 1(b) is not branch-trim.\nThe following notion will be crucial for our further in- vestigation. It addresses non-branch-trimness in a way that is naturally dualizable. This will allow us to uncover the shortcomings of the trellis in Figure 1(a).\nDeﬁnition III.2 An observable and controllable trellis is called span-one-uncontrollable (resp. span-one-unobservable) if we can replace one constraint code by a proper subspace (resp. superspace) without changing the code realized by the trellis.\nEvidently, an observable and controllable trellis is span-one- uncontrollable if and only if it is not branch-trim. Moreover, a trellis T is span-one-uncontrollable if and only if its dual T ◦ is span-one-unobservable. This follows immediately from the equivalence ˜ C i ⊂ C i ⇔ ˜ C ⊥ i ⊃ C ⊥ i , which also shows that replacing a constraint code by a proper subspace or superspace are mutually dual processes. Furthermore, if T is span-one- uncontrollable, then a branch-trimming (i.e., replacing a con- straint code by a proper subcode) results in an uncontrollable trellis. This is a direct consequence of Theorem II.2. Dually, a span-one-unobservable trellis will become unobservable after branch-addition (replacing a constraint code by a proper supercode). This explains the terminology.\nNow we can formulate another necessary condition for local irreducibility.\nTheorem III.3 Let T be span-one-unobservable. Then T al- lows a strict local reduction. The dual process is a strict local reduction of T ◦ , and thus span-one-uncontrollable trellises are locally reducible as well.\nProof: Let T be span-one-unobservable (but observable). Then T ◦ is span-one-uncontrollable and we may replace a constraint code, say C ⊥ i , by a strict subspace, say ˜ C ⊥ i , without changing the code generated by the realization. Without loss of generality we may assume dim ˜ C ⊥ i = dim C ⊥ i − 1. Theo- rem II.2 shows that the resulting realization, denoted by ˜ T ◦ , is uncontrollable. The dual process is the expansion of the con- straint code C i to the superspace ˜ C i where dim ˜ C i = dim C i +1, and by Theorem II.2 we obtain an unobservable realization ˜ T . Thus by Theorem III.1 the trellis ˜ T can be trimmed. We have to do this carefully in order to decrease the dimension of the enlarged constraint code ˜ C i . Since T is observable, but ˜ T is not, there exists a nonzero branch (s i , 0, s i+1 ) ∈ ˜ C i \\C i . Without loss of generality, let s i = 0 and thus we may trim the state space S i as described in the proof of Theorem III.1. The resulting realization, denoted by ˆ T , has a strictly smaller state space and constraint code at time i than ˜ T . Hence the ﬁnal constraint code dimensions of ˆ T are not larger than those of T , and we have performed a strict local reduction of T . The dual process is a strict local reduction of T ◦ because it is a branch-trimming followed by a state-merging.\nExample II.3 (cont.) The trellis in Figure 1(b) is span- one-uncontrollable. Indeed, the trellis is not branch-trim, and deleting the four diagonal branches of the last constraint code does not change the code generated by that trellis. Thus, the trellis and its dual in Figure 1(a) are locally reducible. Deleting those four diagonal branches renders the uncontrollable trellis\nin Figure 2(b). The dual process consist of expanding the last constraint code in the trellis in Figure 1(a) by one dimension, namely by adding the branch (01|0|01) to the generators of this constraint code. This results in the unobservable trellis in Figure 2(a), which then is the dual of that in Figure 2(b).\nNow we can trim the ﬁrst trellis at state time 4 to the subspace {00, 11} and merge the dual state space to F 2 2 /{00, 11}. This results in the mutually dual trellises shown in Fig- ure 3. These trellises still generate the original code C =\n01110, 10010, 01101 and its dual C ⊥ , respectively. Notice that they form strict local reductions of the trellises in Figure 1 in the sense of Deﬁnition I.1.\nIs is worth emphasizing that the trellis in Figure 1(a) is locally reducible, even though it is state-trim, proper, branch- trim, observable, controllable, and non-mergeable (i.e., no state space can be merged without changing the code generated by the trellis). We ﬁrst had to perform an auxiliary branch- addition before a state-trimming resulted in a net reduction of the trellis complexity.\nThe necessary conditions for local irreducibility we have presented so far are not sufﬁcient. For instance, the trellises in Figure 3 are state-trim, branch-trim, proper, span-one- observable, and span-one-controllable. Yet they are still locally reducible, as we will see in the next section.\nIn this section we will present a characterization of local irreducibility of tail-biting trellises. For ease of notation, we will restrict ourselves to trellis realizations with symbol spaces A i = F for all i. The results can straightforwardly be generalized to arbitrary trellises. Following the usual notation, all trellises will have length n and thus generate codes in F n .\nLet us return to span-one-unobservable trellises. We have the following alternative description.\nProposition IV.1 An observable and controllable trellis is span-one-unobservable if and only if there exists a nontrivial path of length n−1 representing the zero word (of length n−1).\nProof: It is clear from the paragraph after Deﬁnition III.2 that a span-one-unobservable trellis must contain such a path.\nConversely, let T be observable and controllable with behav- ior B, and let T contain a nontrivial path of length n − 1 representing the zero word. Suppose the path passes through the states s 1 , s 2 , . . . , s 0 . Replace the constraint code C 0 by C 0 + (s 0 |0|s 1 ) . Then the new realization contains B and the new unobservable trajectory (0, s), where s = (s 0 , . . . , s n−1 ). But since the constraint code increases by just one dimension, the behavior can also increase by at most one dimension. Thus, the behavior is given by B + (0, s), and the new trellis still generates the same code. This shows that T is span-one- unobservable.\nAll of this suggests to extend the notion of span-one- observability to longer spans. However, for our purpose of local reductions it will sufﬁce to consider span-two- observability/controllability.\nDeﬁnition IV.2 A trellis realization of length n is called span- two-observable if it does not contain a nontrivial path of length n − 2 representing the zero word. A trellis is called span-two-controllable if its dual is span-two-observable.\nEvidently span-two-observability implies span-one-observa- bility implies observability. Span-two-controllability can be characterized as follows.\nProposition IV.3 A trim trellis is span-two-controllable if and only if, for each i ∈ Z m , each pair of states in S i and S i−2 are connected by a path of length n − 2.\nProof: Without loss of generality let i = 2. Let P be the set of all paths in the trellis T starting at time 2 and ending at time 0. Then the projection P| S 2 ×S 0 is the set of all state pairs that are connected by such a path. With the aid of projection/cross-section duality one obtains that (P| S 2 ×S 0 ) ⊥ is the space of all pairs in ˆ S 2 × ˆ S 0 that are connected by a path in T ◦ that represents the zero word. Since T ◦ is proper, it is span-two-observable if and only if this space is trivial. This in turn is equivalent to P| S 2 ×S 0 = S 2 × S 0 . This proves the desired result.\nNow we can formulate our main result characterizing local irreducibility.\nTheorem IV.4 Let C ⊆ F n be a code such that both C and C ⊥ do not contain any codewords that are supported by an interval of length at most 2. Let T be a trellis realization of C. Then the following are equivalent.\n(ii) T is state-trim, branch-trim, proper, span-two-observable and span-two-controllable.\n(iv) T ◦ is state-trim, branch-trim, proper, span-two-observable and span-two-controllable.\nFurthermore, if T is locally reducible, then it allows either a strict local reduction or a local reduction which gives rise to a subsequent strict local reduction. In either case, the dual process is a reduction of the same type for T ◦ .\nProof: We have seen already in Theorems III.1 and III.3 that if a trellis is not state-trim, branch-trim, proper, span- one-observable/controllable, then it and its dual are locally reducible. If a trellis has all these properties, but is not span-two-observable, then a local reduction is illustrated in Example IV.5 below. The detailed proof can be found in [4].\nLet us sketch the proof for (ii) ⇒ (i). The remaining statements follow easily. Thus, let T be a trellis as in (ii). Suppose ˜ T is a local reduction of T with state space ˜ S 1 and constraint codes ˜ C 0 and ˜ C 1 , while all other spaces of ˜ T and T coincide. We have to show that T and ˜ T are isomorphic, that is, they coincide up to state space isomorphisms. Without loss of generality we may assume that ˜ T is trim and proper at state time 1, and thus at all times. One can easily see that ˜ T and ˜ T ◦ are observable. Let dim ˜ S 1 = dim S 1 − m and dim ˜ C i = dim C i − i for i = 0, 1, where m, o , 1 ≥ 0. With the aid of Theorem II.2 one derives straightforwardly\nWe show next that o = 1 = m = 0. To this end, let (s 0 , a 0 , s 1 ) ∈ C 0 . This branch belongs to a valid tra- jectory in T , say (a, s). By observability, there is a unique valid trajectory (a, ˜ s) in ˜ T , and thus we obtain a branch (s 0 , a 0 , ˜ s 1 ) ∈ ˜ C 0 . Using properness of T and ˜ T , this gives rise to a well-deﬁned, injective linear map ϕ 0 : C 0 → ˜ C 0 , (s 0 , a 0 , s 1 ) → (s 0 , a 0 , s 1 ). As a consequence, dim ˜ C 0 ≥ dim C 0 . But then we have equality and ϕ 0 is an isomorphism. In the same way dim ˜ C 1 = dim C 1 and there is an isomorphism ϕ 1 : C 1 → ˜ C 1 , (s 1 , a 1 , s 2 ) → (s 1 , a 1 , s 2 ). Now 0 + 1 = 0 implies m = 0, thus dim ˜ S 1 = dim S 1 , and the given local reduction is not strict.\nFinally, by Proposition IV.3, for each s 2 ∈ S 2 and s 0 ∈ S 0 there exists a path in T starting in s 2 and ending in s 0 . As a consequence, each path (s 0 , a 0 , s 1 , a 1 , s 2 ) of length 2 in T is part of a valid trajectory in T . This in turn yields that for each such path (s 0 , a 0 , s 1 , a 1 , s 2 ) there exists some ˜ s 1 ∈ ˜ S 1 such that ϕ 0 (s 0 , a 0 , s 1 ) = (s 0 , a 0 , ˜ s 1 ) and ϕ 1 (s 1 , a 1 , s 2 ) = (˜ s 1 , a 1 , s 2 ). This way we obtain a well-deﬁned isomorphism ψ : S 1 → ˜ S 1 such that ˜ C 0 = {(s 0 , a 0 , ψ(s 1 )) | (s 0 , a 0 , s 1 ) ∈ C 0 } and similarly for ˜ C 1 . But this simply means that ˜ T and T are isomorphic trellises.\nExample IV.5 Consider the trellises given in Figure 4 below. The trellis in Figure 4(a) is the product trellis of the code C generated by 110010, 001 110, 100011 with the indicated spans. (The code C ⊥ does not satisfy the requirements of Theorem IV.4. But the example still illustrates the main arguments of the general proof; this is due to the fact that the reduction is based on span-two-unobservability and not span-two-uncontrollability). The trellis is state-trim, branch- trim, proper, observable, and controllable. It is also span- one-observable and span-one-controllable, but not span-two- observable: it contains a path starting at the state 11 ∈ S 4 , ending at 10 ∈ S 2 , and representing the zero word. This will allow us to perform a local reduction by changing the state space S 3 and its incident constraint codes C 2 , C 3 . In a ﬁrst step we expand S 3 by introducing an additional state, say\nIt is easy to see that dualizing the preceding steps leads to a two-step local reduction of the dual trellis.\nThe trellis in Figure 4(d) is state-trim, branch-trim, proper, span-two-observable, span-one-controllable, but not span-two- controllable. Thus it can be further locally reduced.\nIn the same manner the trellis in Figure 3(a) can be locally reduced.\nWe have given a complete description of tail-biting trellises that are locally irreducible in the sense of Deﬁnition I.1. Our methods were solely based on intrinsic trellis properties, and no speciﬁc representation like the product construction was used. Furthermore, we provided constructive procedures of how to reduce a given trellis (and its dual).\nLet us compare our results with previous work on tail- biting trellises with potentially low complexity. To this end, we restrict ourselves again to trellises with symbol spaces A i = F for all i. Koetter and Vardy [7] showed that the search for possibly minimal linear tail-biting trellis realizations could be narrowed to a certain canonical class, which we call KV-trellises (here minimal refers to Θ-minimal in the sense of [7]). A KV-trellis is a product realization with dim C linearly independent generators, each of which has the shortest circular span of any codeword whose span starts (or stops) at the same position [5], [6]. The construction may be regarded as the tail-biting version of the \u201cshortest basis\u201d approach [2]. KV-trellises are state-trim, branch-trim, proper, observable and controllable [7].\nNow we can give an overview of various trellis classes. Let us write S1O, S2O, S1C, S2C for span-one-observabili- ty, span-two-observability, and the dual controllability notions. We also denote \u201cstate-trim, branch-trim and proper\u201d by T/P, and \u201cobservable and controllable\u201d by O/C.\nWith the machinery developed in [6], one can show that if a code does not contain any span-two codewords, then its KV-trellises are S2O. Thus, if both the code and its dual do not contain any span-two codewords (a requirement that is not met by the examples in this note), then their KV-trellises are S2O and S2C. On the other hand, there exist examples of T/P and S2O/S2C trellises that are not KV. All of this leads to the following strict containments of classes of tail-biting trellises for a given code (assuming that neither the code nor its dual contains any span-two codewords):\n{minimal} {KV} {T/P, S2O/S2C} {T/P, S1O/S1C} {T/P, O/C}.\nFurthermore, the four trellis classes in the top row are invariant under taking duals, whereas the one in the bottom row is not. The set {T/P, S2O/S2C} is exactly the class of locally irreducible trellises."},"refs":[{"authors":[{"name":"G. D. Forne"}],"title":{"text":"Jr"}},{"authors":[{"name":"G. D. Forney"}],"title":{"text":"shortest basis"}},{"authors":[{"name":"G. D. Forne"},{"name":"H. Gluesing-Luerssen"}],"title":{"text":"Jr"}},{"authors":[{"name":"H. Gluesing-Luersse"},{"name":"G. D. Forne"}],"title":{"text":"Jr"}},{"authors":[{"name":"H. Gluesing-Luersse"},{"name":"E. Weaver"}],"title":{"text":"Linear tail-biting trellises: Char- acteristic generators and the BCJR-construction"}},{"authors":[{"name":"H. Gluesing-Luersse"},{"name":"E. Weaver"}],"title":{"text":"Characteristic generators and dualization for tail-biting trellises"}},{"authors":[{"name":"R. Koette"},{"name":"A. Vardy"}],"title":{"text":"The structure of tail-biting trellises: Minimality and basic principles"}},{"authors":[{"name":"A. Vardy"},{"name":"V. S. Ples"},{"name":"W. C. Huffma"}],"title":{"text":"Trellis structure of codes"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565257.pdf"},"links":[{"id":"1569566527","weight":2},{"id":"1569565883","weight":2},{"id":"1569564889","weight":4},{"id":"1569566385","weight":2},{"id":"1569566799","weight":2},{"id":"1569559665","weight":3},{"id":"1569564605","weight":2},{"id":"1569559617","weight":2},{"id":"1569566321","weight":6},{"id":"1569566683","weight":3},{"id":"1569566855","weight":2},{"id":"1569566697","weight":7},{"id":"1569566597","weight":6},{"id":"1569565711","weight":2},{"id":"1569566943","weight":2},{"id":"1569566591","weight":7},{"id":"1569566571","weight":2},{"id":"1569559967","weight":7},{"id":"1569565227","weight":2},{"id":"1569564481","weight":2},{"id":"1569566415","weight":3},{"id":"1569564805","weight":2},{"id":"1569566647","weight":3},{"id":"1569551535","weight":3},{"id":"1569566871","weight":3},{"id":"1569565461","weight":2},{"id":"1569564731","weight":2},{"id":"1569566207","weight":3},{"id":"1569558325","weight":2},{"id":"1569565837","weight":2},{"id":"1569566671","weight":2},{"id":"1569566459","weight":2},{"id":"1569563411","weight":3},{"id":"1569564849","weight":11},{"id":"1569559541","weight":3},{"id":"1569566363","weight":4},{"id":"1569566739","weight":4},{"id":"1569566467","weight":2},{"id":"1569566157","weight":2},{"id":"1569566903","weight":2},{"id":"1569566999","weight":2},{"id":"1569565859","weight":2},{"id":"1569565809","weight":2},{"id":"1569558483","weight":2},{"id":"1569566563","weight":6},{"id":"1569566089","weight":2},{"id":"1569565347","weight":4},{"id":"1569566925","weight":2},{"id":"1569566497","weight":2},{"id":"1569561679","weight":2},{"id":"1569560721","weight":6},{"id":"1569565897","weight":3},{"id":"1569566749","weight":20},{"id":"1569566269","weight":2},{"id":"1569564189","weight":2},{"id":"1569566985","weight":3},{"id":"1569567009","weight":3},{"id":"1569558785","weight":2},{"id":"1569566193","weight":2},{"id":"1569566343","weight":2},{"id":"1569565785","weight":2},{"id":"1569566167","weight":8},{"id":"1569566679","weight":4},{"id":"1569565989","weight":2},{"id":"1569566575","weight":3},{"id":"1569559565","weight":2},{"id":"1569566905","weight":2},{"id":"1569563307","weight":2},{"id":"1569555999","weight":2},{"id":"1569566759","weight":2},{"id":"1569559195","weight":6},{"id":"1569566149","weight":2},{"id":"1569566217","weight":8},{"id":"1569566657","weight":2},{"id":"1569558859","weight":2},{"id":"1569566511","weight":2},{"id":"1569566991","weight":9},{"id":"1569566975","weight":2},{"id":"1569566369","weight":2},{"id":"1569567665","weight":2},{"id":"1569565535","weight":2},{"id":"1569566325","weight":2},{"id":"1569564795","weight":6},{"id":"1569567015","weight":2},{"id":"1569559805","weight":9},{"id":"1569566851","weight":2},{"id":"1569565735","weight":2},{"id":"1569559111","weight":5},{"id":"1569565427","weight":2},{"id":"1569567051","weight":3},{"id":"1569566445","weight":2},{"id":"1569566791","weight":4},{"id":"1569565559","weight":7},{"id":"1569565151","weight":2},{"id":"1569563763","weight":3},{"id":"1569566473","weight":3},{"id":"1569564857","weight":8},{"id":"1569566913","weight":9},{"id":"1569566257","weight":2},{"id":"1569565033","weight":2},{"id":"1569566447","weight":6},{"id":"1569565847","weight":14},{"id":"1569564353","weight":18},{"id":"1569557083","weight":2},{"id":"1569566141","weight":3},{"id":"1569565521","weight":2},{"id":"1569565595","weight":2},{"id":"1569565185","weight":2},{"id":"1569558401","weight":2},{"id":"1569566505","weight":3},{"id":"1569565933","weight":7},{"id":"1569565705","weight":10},{"id":"1569567033","weight":3},{"id":"1569565527","weight":3},{"id":"1569566159","weight":2},{"id":"1569561379","weight":3},{"id":"1569561123","weight":2},{"id":"1569566655","weight":2},{"id":"1569567235","weight":2},{"id":"1569565311","weight":3},{"id":"1569566667","weight":2},{"id":"1569566893","weight":2},{"id":"1569566317","weight":2},{"id":"1569565741","weight":2},{"id":"1569566481","weight":2},{"id":"1569566857","weight":2},{"id":"1569565961","weight":2},{"id":"1569566387","weight":2},{"id":"1569566245","weight":2},{"id":"1569565415","weight":2},{"id":"1569561623","weight":2},{"id":"1569564485","weight":3},{"id":"1569566631","weight":3},{"id":"1569566177","weight":2},{"id":"1569559199","weight":3},{"id":"1569566293","weight":3},{"id":"1569565665","weight":4},{"id":"1569565549","weight":4},{"id":"1569565523","weight":2},{"id":"1569564175","weight":2},{"id":"1569566983","weight":2},{"id":"1569556361","weight":2},{"id":"1569565397","weight":3},{"id":"1569566873","weight":2},{"id":"1569565765","weight":2},{"id":"1569565925","weight":2},{"id":"1569565919","weight":3},{"id":"1569566711","weight":2},{"id":"1569565241","weight":70},{"id":"1569566887","weight":6},{"id":"1569565273","weight":3},{"id":"1569564919","weight":2},{"id":"1569566737","weight":2},{"id":"1569566429","weight":2},{"id":"1569561221","weight":2},{"id":"1569566917","weight":2},{"id":"1569565353","weight":2},{"id":"1569564683","weight":2},{"id":"1569565421","weight":2},{"id":"1569566677","weight":2},{"id":"1569566237","weight":2},{"id":"1569566283","weight":2},{"id":"1569566529","weight":4},{"id":"1569566715","weight":3},{"id":"1569565237","weight":23},{"id":"1569566755","weight":2},{"id":"1569566819","weight":2},{"id":"1569565041","weight":2},{"id":"1569564703","weight":2},{"id":"1569566713","weight":2},{"id":"1569565597","weight":2},{"id":"1569566813","weight":2},{"id":"1569566771","weight":9},{"id":"1569562277","weight":3},{"id":"1569565425","weight":5},{"id":"1569564437","weight":2},{"id":"1569564861","weight":6},{"id":"1569566487","weight":3},{"id":"1569565529","weight":2},{"id":"1569556759","weight":2},{"id":"1569566619","weight":2},{"id":"1569566075","weight":2},{"id":"1569558779","weight":2},{"id":"1569566001","weight":5},{"id":"1569564157","weight":3},{"id":"1569566389","weight":2},{"id":"1569566435","weight":2},{"id":"1569567483","weight":2},{"id":"1569565367","weight":4},{"id":"1569565805","weight":2},{"id":"1569561713","weight":2},{"id":"1569559919","weight":2},{"id":"1569565861","weight":2},{"id":"1569566147","weight":2},{"id":"1569565537","weight":2},{"id":"1569562367","weight":3},{"id":"1569565561","weight":6},{"id":"1569560213","weight":2},{"id":"1569566847","weight":2},{"id":"1569563425","weight":2},{"id":"1569565035","weight":3},{"id":"1569564961","weight":2},{"id":"1569567013","weight":2},{"id":"1569561861","weight":3},{"id":"1569565337","weight":2},{"id":"1569565737","weight":17},{"id":"1569564463","weight":2},{"id":"1569565853","weight":2},{"id":"1569550425","weight":2},{"id":"1569566273","weight":5},{"id":"1569564123","weight":3},{"id":"1569565889","weight":2},{"id":"1569565565","weight":4},{"id":"1569566797","weight":5},{"id":"1569565707","weight":3},{"id":"1569566375","weight":2},{"id":"1569564257","weight":3},{"id":"1569566973","weight":3},{"id":"1569566839","weight":2},{"id":"1569558697","weight":2},{"id":"1569565139","weight":4},{"id":"1569566825","weight":2},{"id":"1569566615","weight":2},{"id":"1569564807","weight":13},{"id":"1569563007","weight":5},{"id":"1569566727","weight":2},{"id":"1569565515","weight":2},{"id":"1569560581","weight":9},{"id":"1569559233","weight":18}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S4.T5.2","endtime":"17:20","authors":"Heide Gluesing-Luerssen, David Forney","date":"1341248400000","papertitle":"Reducing complexity of tail-biting trellises","starttime":"17:00","session":"S4.T5: Codes on Graphs","room":"Kresge Little Theatre (035)","paperid":"1569565257"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"1","spectral43":"12","spectral28":"7","spectral32":"3","spectral14":"5","spectral20":"12","spectral9":"1","spectral25":"15","spectral42":"17","spectral3":"1","spectral47":"39","spectral17":"4","louvain":"625","spectral36":"0","spectral39":"4","spectral10":"5","spectral15":"12","spectral33":"29","spectral5":"2","spectral21":"17","spectral44":"43","spectral26":"20","spectral40":"8","spectral8":"7","spectral11":"1","spectral4":"3","spectral37":"5","spectral48":"0","spectral22":"13","spectral23":"1","spectral12":"7","spectral50":"27","spectral19":"18","spectral34":"24","spectral45":"18","spectral7":"3","spectral49":"46","spectral38":"37","spectral24":"10","spectral13":"7","spectral31":"10","spectral29":"26","spectral35":"17","spectral30":"12","spectral41":"22","spectral27":"19","spectral18":"6","spectral46":"18","spectral2":"0","spectral16":"3"}}

{"id":"1569566797","paper":{"title":{"text":"List-decoding of Subspace Codes and Rank-Metric Codes up to Singleton Bound"},"authors":[{"name":"Hessam Mahdavifar"},{"name":"Alexander Vardy"}],"abstr":{"text":"Abstract\u2014 Subspace codes and rank-metric codes can be used to correct errors and erasures in network, with linear network coding. Both types of codes have been extensively studied in the past ﬁve years.\nSubspace codes were introduced by Koetter and Kschischang to correct errors and erasures in networks where topology is un- known (the non-coherent case). In this model, the codewords are vector subspaces of a ﬁxed ambient space; thus codes for this model are collections of such subspaces. In a previous work, we have developed a family of subspace codes, based upon the Koetter-Kschichang construction, which are efﬁciently list decod- able. Using these codes, we achieved a better decoding radius than Koetter-Kschischang codes at low rates. Herein, we introduce a new family of subspace codes based upon a different approach which leads to a linear-algebraic list-decoding algorithm. The re- sulting error-correction radius can be expressed as follows: for any integer s, our list-decoder using s + 1-variate interpolation polynomials guarantees successful recovery of the message sub- space provided the normalized dimension of errors is at most s(1 − sR). The same list-decoding algorithm can be used to cor- rect erasures as well as errors. The size of output list is at most Q s−1 , where Q is the size of the ﬁeld that message symbols are chosen from.\nRank-metric codes are suitable for error correction in the case where the network topology and the underlying network code are known (the coherent case). Gabidulin codes are a well-known class of algebraic rank-metric codes that meet the Singleton bound on the minimum rank-distance of a code. In this paper, we introduce a folded version of Gabidulin codes analogous to the folded Reed-Solomon codes of Guruswami and Rudra along with a list-decoding algorithm for such codes. Our list-decoding algo- rithm makes it possible to recover the message provided that the normalized rank of error is at most 1 − R − , for any > 0. Notably this achieves the information theoretic bound on the decoding radius of a rank-metric code."},"body":{"text":"Subspace codes have been recently introduced in order to enable reliable communication of messages in random linear network coding, where the topology of network is unknown to both the transmitter and receiver [6]. This is called non-coherent network coding. In random linear network coding, each inter- mediate node of the network creates a random linear combina- tion of the packets it receives and sends it through its output links [5]. Let the ambient space W be a vector space over a ﬁnite ﬁeld F q . A subspace code in W is a non-empty subset of all the subspaces of W. Koetter-Kschischang algebraic con- struction of subspace codes, originally called Reed-Solomon- like codes in [6], is analogous to Reed-Solomon codes in clas- sical block codes wherein symbols are replaced by vectors, reg-\nular polynomials with linearized polynomials, and sequences of symbols with F q -linear span of the corresponding vectors.\nIn a previous work, we proposed a new family of subspace codes that enables list-decoding, hence achieving a better trade- off between rate and error-correction capability [7], [8]. The idea was to evaluate all the powers of the linearized message polynomial, up to some power L, in order to list-decode with list size at most L. We further improved this result by introduc- ing multiplicity in the ring of linearized polynomials [9]. This was motivated by Guruswami-Sudan list-decoding algorithm of Reed-Solomon codes [4].\nIn this paper, we introduce a new family of subspace codes that allows a linear-algebraic list-decoding by using s + 1-variate interpolation polynomials, where s is a design pa- rameter. The entire list-decoding algorithm is linear-algebraic. A system of linear equations is solved for the interpolation step and another system is solved to compute the set of all the pos- sible solutions which indeed is a linear space. This is motivated by the recent work of Vadhan [15, Ch. 5] and Guruswami [2] which suggested a simpliﬁed version, with no need of mul- tiplicity, of previously proposed list-decoding algorithm of folded Reed-Solomon codes by Guruswami and Rudra in [3].\nIn the coherent system of network coding, the network topology and the underlying network code are known. In this setting, with pessimistic adversarial errors, rank-metric codes turned out to be the suitable tool to deal with possible injected errors into the network [12]. Each codeword in a rank-metric code is a matrix with ﬁxed dimensions whose entries are taken from a ﬁnite ﬁeld F q . Gabidulin codes were introduced as a class of maximum rank distance codes [1]. In this paper, we deﬁne a folded version of Gabidulin codes. Then we propose a list-decoding algorithm that can correct the fraction of errors up to the Singleton bound which is the information theoretic upper bound on the error-correction radius of a code.\nThe rest of this paper is organized as follows. We start with a brief overview of prior work in Section II. In Section III, we ﬁrst discuss our new construction of subspace codes, then we pro- pose a list-decoding algorithm and establish the correctness of the algorithm. In Section IV, we introduce the folded version of Gabidulin codes and provide the list-decoding algorithm. Then we show that we are able to correct the fraction of errors up to 1 − R, R being the rate of the code, hence achieving the Single- ton bound on the error-correction radius of rank-metric codes.\nIn this section, we ﬁrst explain the ring of linearized poly- nomials. We establish some relevant terminology for subspace codes and explain the Koetter-Kschischang algebraic subspace codes. Then we brieﬂy recap the results of [7] and [8] which provide a new construction of subspace codes. At the end, we brieﬂy review rank-metric codes and Gabidulin codes as a class of maximum rank-distance codes.\nA polynomial over an extension ﬁeld F q m of F q is called F q - linearized if it has the following form:\nwhere a i ∈ F q m , for i = 0, 1, . . . , s. Assuming that a s = 0 we say that the polynomial f (X) has q-degree s. When q is ﬁxed under discussion, we will let X [i] denote X q i . The main prop- erty of linearized polynomials from which they receive their name is that they act as linear maps with respect to F q . The set of linearized polynomials forms a non-commutative ring un- der addition + and composition operation ⊗. For any two lin- earized polynomials f 1 (X) and f 2 (X), the composition opera- tion f 1 (X)⊗f 2 (X) is deﬁned to be the composition f 1 (f 2 (X)) which is always a linearized polynomial. The ring of linearized polynomials over F q m is denoted by L q m [X].\nLet W be a ﬁxed N -dimensional vector space over F q and P(W) denote the set of all subspaces of W. Let also G(W, n) denote the set of all n-dimensional subspaces of W. A code C in the ambient space W is a non-empty subset of P(W). A codeword is an element of C which is in fact a subspace of W. Deﬁnition. [6] Let C be a code associated with the ambient space W of dimension N over F q . Suppose that the dimension of any V ∈ C is at most n. Then the rate of the code R is de- ﬁned as follows:\nnN \t (1) Koetter-Kschischang subspace codes [6] can be regarded as\nan analogous to Reed-Solomon codes. Fix m and an extension ﬁeld F q m of F q . F q m can be also regarded as a vector space of dimension m over F q . Fix a set A = {α 1 , . . . , α n } of n lin- early independent vectors in F q m . Let u = (u 0 , . . . , u k−1 ) be the message vector and f u (X) = \t k−1 i=0 u i X [i] be the corresponding linearized message polynomial. Then the corresponding codeword V is the F q -linear span of the set {(α i , f (α i )) : 1 i n} which is an n-dimensional vec- tor space. In this setting, erasures are considered as deletion of vectors from the transmitted subspace V while errors are considered as addition of linearly independent vectors to V . Koetter and Kschischang proposed a decoding algorithm capa- ble of correcting errors and erasures as long as the normalized dimension of errors and erasures is at most 1 − R, where R is the rate of the code [6].\nIn list-decoding Koetter-Kschischang codes, the main obstacle is that the ring of linearized polynomials is non- commutative. Because of that, an equation of certain degree\nover the ring of linearized polynomials may have exponentially many roots, while one has to guarantee a bounded list-size at the output of the decoder. In order to enable list-decoding, we modiﬁed Koetter-Kschischang codes in many important ways. Our work in [7] and [8] essentially leads to a new family of subspace codes which are efﬁciently list-decodable, hence im- proving the error-correction radius upon Koetter-Kschischang codes for a wide range of rates. For a given message poly- nomial f u (X), our encoder outputs the n-dimensional vector space spanned by the vectors\nfor i = 1, 2, . . . , n. In this construction, we choose α i \u2019s in a particular way which leads to a larger set of interpolation points at the decoder. We refer the reader to [8] for details about the code construction and the proposed list-decoding algorithm.\nRank-metric codes are suitable for error correction in the co- herent system of network coding when pessimistic adversarial errors are assumed [12]. In [13], Silva et al. also show that sub- space codes and rank-metric are closely related. Indeed, there is an injective mapping between rank-metric codes and subspace codes through a lifting operation.\nLet F n×m q \t denote the set of all n × m matrices over F q . For any X ∈ F n×m q , let X denote the row space of the matrix X. A rank-metric code is just a subset of F n×m q \t which is called an array code in [11]. The distance between X, Y ∈ F n×m q \t is deﬁned as rank( X − Y). We deﬁne the rate R of a rank-metric code C ⊆ F n×m q as follows:\nThe minimum (rank) distance of C is the minimum distance between distinct elements of C. The Singleton bound is estab- lished in the context of rank-metric codes by Gabidulin in [1]. It states that the minimum distance of a code C with rate R, normalized by the number of rows n, when n m, is at most 1−R. A rank-metric code that meets the Singleton bound on the minimum distance is called a maximum rank-distance (MRD) code.\nGabidulin codes are a class of MRD codes proposed in [1]. Suppose that the input to the Gabidulin encoder is a message vector u = [u 0 u 1 . . . u k−1 ] which consists of k message sym- bols in F q m . Let f u (X) denote the corresponding linearized message polynomial k−1 i=0 u i X [i] . Then the corresponding codeword V is\nwhere the elements α 1 , α 2 , . . . , α n ∈ F q m are linearly inde- pendent over F q . Each codeword is a column vector of length n over F q m which can be also regarded as a matrix in F n×m q . Note that the condition n m is required. The rate of the code is R = k/n. The minimum rank distance of a Gabidulin code is d = n − k + 1 which satisﬁes the Singleton bound [1]. The minimum rank distance is then normalized to 1 − R.\nIn this section, we present a new construction of subspace codes and a list-decoding algorithm capable of correcting both errors and erasures. Our results in this section are motivated by the recent work of Vadhan [15, Ch. p] and Guruswami [2]. Then we establish the correctness of our algorithm and compute the error-correction radius of the proposed construction.\nThe following parameters of the construction are ﬁxed: the ﬁnite ﬁeld F q and an extension F q m , the number of informa- tion symbols k, the dimension of code n and the parameter s which is related to the list size. We require that k n m. A set A = {α 1 , α 2 , . . . , α n } of n linearly independent elements of F q m is also ﬁxed. Let γ be an element of F q m which is not contained in any subﬁeld of F q m i.e. γ, γ q , . . . , γ q m−1 are all distinct.\nFormally, the encoder is a function E : F k q m → G(W, n). It ac- cepts as input a message u = (u 0 , u 1 , . . . , u k−1 ) ∈ F k q m . The corresponding message polynomial is f u (X) = k−1 i=0 u i X [i] . Then the corresponding codeword V is the F q -linear span of the set α i , f (α i ), f (γα i ), . . . , f (γ s−1 α i ) : i ∈ [n] .\nNotice that, Koetter-Kschischang code is a special case of this for s = 1. Since α i \u2019s are linearly independent, each code- word is an n-dimensional vector space which is a subspace of\nThe dimension of W is n + sm. Each element of W is represented as a vector with s + 1 coordinates such as (x, y 1 , . . . , y s ), where x is an element of the vector space spanned by α 1 , α 2 , . . . , α n and all y i \u2019s belong to F q m .\nSuppose that V is transmitted and a subspace U of W of dimension r is received. We need another parameter d at the decoder which is computed as follows:\nThe decoder accepts as input a vector space U which is a sub- space of W. It then outputs a list of size at most q m(s−1) of vectors in F k q m in three steps:\nFind a basis (x i , y i,1 , y i,2 , . . . , y i,s ), i = 1, 2, . . . , r, for U . This is the set of interpolation points.\nwhere Q i \u2019s are linearized polynomials over F q m , Q 0 has q-degree at most d − 1 and Q i has q-degree at most d − k, for i = 1, 2, . . . , s, subject to the constraint that\n3) Message recovery: Find all polynomials f (X) ∈ L q m [X] of degree at most k − 1 that satisfy the following equation:\nThe decoder outputs coefﬁcients of each solution f (X) as a vector of length k.\nThe second step is basically solving a system of linear equa- tions. Efﬁcient interpolation algorithms in the ring of linearized polynomials are presented in [16]. In this case, the complexity of corresponding interpolation algorithm is given as O(n 2 s 3 ) ﬁeld operations over F q m . The parameter s is in fact a design parameter and can be regarded as a constant. Indeed, the inter- polation step is quadratic in terms of n. In the next subsection, we explain how the message recovery step can be done using a linear algebraic method. The complexity of the message recov- ery step is also quadratic. Hence, the total complexity of our algorithm is quadratic in terms of n, the dimension of the code.\nAs discussed in the foregoing subsection, in the last step of the list-decoding algorithm, we need to ﬁnd all polynomials f (X) ∈ L q m [X] of degree at most k − 1 that satisfy\nRemark. Suppose that f, g ∈ L q m [X] are two solutions to the equation (5). Since Q i \u2019s are linearized polynomials, for any α ∈ F q , αf + (1 − α)g is also a solution to (5). Therefore, the set of solutions, which can be regarded as vectors of length k over F q m , forms an afﬁne subspace of F k q m as a vector space over F q . \t 2\nIn the next lemma, we establish an upperbound on the num- ber of solutions to (5). The proof of lemma also clariﬁes how the afﬁne space of solutions can be computed with quadratic complexity. We refer the reader to [10] for details.\nLemma 1. The dimension of the afﬁne space of solutions f (X) ∈ L q m [X], of degree at most k − 1, to ( 5) is at most m(s − 1).\nProof. We just sketch the proof due to space constraints and refer the reader to [10] for a complete proof. For i = 0, 1, 2, . . . , s, let\nWe also deﬁne the linearized polynomial P (X) and the poly- nomial A(X) as follows:\nW.L.O.G. we assume that A(X) is a non-zero polynomial. The coefﬁcient of X q i in P (X), for i = 0, 1, . . . , k − 1, can be expressed as\nfor some elements a (i) j ∈ F q m . Now, suppose that we want to ﬁnd all possible solutions f (X) to the equation (5). Then all the coefﬁcients of P (X) have to be equal to zero. Starting from u 0 , we compute u i \u2019s iteratively. For any i, suppose that u 0 , u 1 , . . . , u i−1 are already computed. If A(γ q i ) is non-zero, then u i can be uniquely determined by (6) . Otherwise, we take the whole F q m as the space of solutions to u i and keep going for each of them separately. Notice that A(X) is a non-zero polynomial of degree s − 1 and γ, γ q , . . . , γ q k−1 are distinct elements of F q m . Therefore, A(γ q i ) is equal to zero for at most s − 1 possible values of i. This implies that the total number of solutions for f (X) to (5) is at most q m(s−1) which proves the lemma.\nCorollary2. The afﬁne space of solutions to ( 5) can be com- puted with quadratic complexity in terms of dimension n.\nIn this subsection, we ﬁrst establish the correctness of our list-decoding algorithm. Then we compute the error-correction radius of our code.\nThe particular choice of d in (3) guarantees existence of a non-zero solution for interpolation polynomial Q that satisﬁes (4). The proof is by counting the number of equations and vari- ables in the system of linear equations given by (4). We refer the reader to [10] for the details of proof. Let ρ and t denote the dimension of erasures and errors in the received subspace U , respectively. Hence, the dimension of U is r = n − ρ + t.\nProof. The proof follows from the fact that the dimension of V ∩ U is equal to n − ρ and each element in V ∩ U corresponds to a root for E(X). We refer the reader to [10] for a detailed proof.\nCorollary4. If d n−ρ, then the linearized polynomial E(X) is identically zero.\nProof. The q-degree of f u (X) is at most k − 1. Therefore, the q-degree of Q i ⊗ f u (γ i−1 X) is at most\nfor i = 1, . . . , L. Also, the q-degree of Q 0 (X) is at most d − 1. Thus the q-degree of E(X) is at most d − 1. On the other hand, E(X) has at least n−ρ linearly independent roots by Lemma 3. Therefore, E(X) must be the all zero polynomial.\nTheorem 5. The output of our list-decoding algorithm is a list of size at most q m(s−1) which includes the transmitted message u provided that\nProof. Observe that (7) is in fact equivalent to the condition on d in Corollary 4 by plugging r = n − ρ + t in the expres- sion for d given in (3).Then by Corollary 4, E(X) is the all zero polynomial. Therefore, the message polynomial f u (X) is a solution to (5). There are at most q m(s−1) solutions to (5) by Lemma 1. Therefore, the list size is at most q m(s−1) .\nThe ambient space W is given in (2) which has dimension n + sm. The rate R can be computed as deﬁned in (1):\nBy Theorem 5, the message is successfully recovered as long as the normalized error-correction radius τ = (t + sρ)/n satisﬁes\nIn the regime where n is much smaller than ms, the bound on error-correction radius can be approximated as s(1 − sR).\nIn this section, we ﬁrst introduce a folded version of Gabidulin codes. Then we propose a list-decoding algorithm which provides error-correction radius up to the Singleton bound 1 − R, the best possible trade-off between the rate and error-correction radius.\nLet γ be a primitive element of F q m . Let C denote the Gabidulin code constructed with parameters α i = γ [i−1] as discussed in Section II-B. Let also h be a positive integer that divides n. Then let N = n/h and M = hm.\nThe h-folded version of Gabidulin code C is a rank-metric code whose codewords are elements of F N ×M q \t . The message polyno- mial f u (X) of q-degree at most k − 1 is encoded into a matrix with the h-tuple f u (γ ih ), f u (γ ih+1 ), . . . , f u (γ (i+1)h−1 ) , which is regarded as an element in F M q , as its i-th row, for 0 i < N . The rate of the folded version of C is k/n, equal to the rate of original code C. \t 2\nLet U ∈ F N ×M q \t denote the codeword corresponding to the message polynomial f u (X). For 0 i N − 1 and 0 j\nm − 1, let y i,j ∈ F q m denote the (i, j)-th coordinate of received word Y regarded as a matrix in F N ×h q m . Let t denote the rank of error, which is also called the number of errors. Let s be a positive integer less than or equal to h. We propose a decod- ing algorithm based on interpolating an s + 1-variate linearized polynomial Q(X, Y 1 , . . . , Y s ). The q-degree of Q is character- ized in terms of parameter d which is set as follows:\nwhere Q i \u2019s are linearized polynomials over F q m , Q 0 has q-degree at most d − 1 and the q-degree of all other Q i \u2019s is at most d − k, subject to the constraint that\n2) Message recovery: Find all the solutions f (X) ∈ L q m [X] to the following equation:\nThe decoder outputs coefﬁcients of each solution f (X) as a vector of length k.\nThe decoding steps can be done similar to the steps of the list-decoding algorithm discussed in Section III-A in quadratic complexity in terms of dimension n.\nNext, we establish correctness of the proposed list-decoding algorithm and compute the error-correction radius.\nThe particular choice of d in (9) guarantees existence of a non-zero solution for interpolation polynomial Q that satisﬁes (10). The proof is by counting the number of equations and vari- ables in the system of linear equations given by (10). We refer the reader to [10] for the details of proof.\nLemma 6. There are at least (N − t)(h − s + 1) linearly inde- pendent roots in F q m for the linearized polynomial\nProof. The proof follows from the fact that the dimension of U ∩ Y is N − t and each element in U ∩ Y corresponds\nto h − s + 1 roots for E(X). We refer the reader to [10] for a detailed proof.\nCorollary7. If d (N −t)(h−s+1), then E(X) is identically equal to zero.\nProof. The proof is very similar to the proof of Corollary 4. The q-degree of E(X) is at most d − 1 by the same argument. E(X) has at least (N − t)(h − s + 1) linearly independent roots by Lemma 6. Thus, E(X) must be the all zero polynomial.\nthen the proposed list-decoding algorithm of folded Gabidulin codes is correct i.e. it outputs a list of size at most q m(s−1) which includes the transmitted message u.\nProof. Observe that (12) is indeed equivalent to the condition on d in Corollary 7, if we plug in d form (9) and use the approx- imation R = (k − 1)/n. Then by Corollary 7, E(X) is the all zero polynomial. Therefore, the message polynomial f u (X) is a solution to (11). There are at most q m(s−1) solutions to (11) by Lemma 1. Therefore, the list size is at most q m(s−1) .\nBy Theorem 8, the message is successfully recovered pro- vided that the normalized error-correction radius τ = t/n sat- isﬁes\nIf we let both s and h grow large while s is much smaller that h, we get decoding radius arbitrary close to 1 − R, while the unique decoding radius bound is equal to (1−R)/2. Notice that 1−R is indeed equal to the normalized minimum rank-distance of the code. We are able to achieve the ultimate error-correction radius for rank-metric codes, as stated in the following theorem. Theorem 9. For every > 0 and 0 < R < 1, there is a family of folded Gabidulin codes with rate R that can be list-decoded up to normalized number of errors 1 − R − . The size of out- put list is at most Q O(1/ ) , where Q is the size of the ﬁeld that message symbols are chosen from.\nProof. Given R and , we can apply the result of Theorem 8 with the choice s = 1/2 and h = 1/4 2 ."},"refs":[{"authors":[{"name":"E. M. Gabidulin"}],"title":{"text":"Theory of codes with maximum rank distance"}},{"authors":[{"name":"V. Guruswami"}],"title":{"text":"Linear-algebraic list decoding of folded Reed-Solomon codes"}},{"authors":[{"name":"V. Guruswami"},{"name":"A. Rudra"}],"title":{"text":"Explicit codes achieving list decoding ca- pacity: Error-correction up to the Singleton bound."}},{"authors":[{"name":"V. Guruswami"},{"name":"M. Sudan"}],"title":{"text":"Improved decoding of Reed-Solomon and algebraic-geometric codes"}},{"authors":[{"name":"T. Ho"},{"name":"R. Koetter"},{"name":"M. Medard"},{"name":"D. Karger"},{"name":"M. Effros"}],"title":{"text":"The beneﬁts of coding over routing in a randomized setting"}},{"authors":[{"name":"R. Koetter"},{"name":"R. Kschischang"}],"title":{"text":"Coding for errors and erasures in ran- dom network coding."}},{"authors":[{"name":"H. Mahdavifar"}],"title":{"text":"Algebraic list-decoding on the operator channel"}},{"authors":[{"name":"H. Mahdavifar"}],"title":{"text":"Algebraic list-decoding of subspace codes"}},{"authors":[{"name":"H. Mahdavifar"},{"name":"A. Vardy"}],"title":{"text":"Algebraic list-decoding of subspace codes with multiplicities"}},{"authors":[{"name":"H. Mahdavifar"},{"name":"A. Vardy"}],"title":{"text":"List-decoding of subspace codes and rank-metric codes up to Singleton bound"}},{"authors":[{"name":"R. M. Roth"}],"title":{"text":"Maximum-rank array codes and their application to criss- cross error correction"}},{"authors":[{"name":"D. Silva"},{"name":"F. R. Kschischang"}],"title":{"text":"On metrics for error correction in network coding"}},{"authors":[{"name":"D. Silva"},{"name":"F. R. Kschischang"},{"name":"R. Koetter"}],"title":{"text":"A rank-metric approach to error control in random network coding"}},{"authors":[{"name":"M. Sudan"}],"title":{"text":"Decoding of Reed-Solomon codes beyond the error- correction bound"}},{"authors":[{"name":"S. Vadhan"}],"title":{"text":"Pseudorandomness."}},{"authors":[{"name":"H. Xie"},{"name":"Z. Yan"},{"name":"B. W"}],"title":{"text":"General linearized polynomial interpolation and its applications"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566797.pdf"},"links":[{"id":"1569566567","weight":6},{"id":"1569564843","weight":7},{"id":"1569566381","weight":2},{"id":"1569566527","weight":5},{"id":"1569566485","weight":6},{"id":"1569565383","weight":3},{"id":"1569565883","weight":12},{"id":"1569564889","weight":12},{"id":"1569565223","weight":3},{"id":"1569566725","weight":12},{"id":"1569565663","weight":2},{"id":"1569565377","weight":5},{"id":"1569566385","weight":11},{"id":"1569564635","weight":5},{"id":"1569565867","weight":13},{"id":"1569566799","weight":7},{"id":"1569565067","weight":4},{"id":"1569559665","weight":13},{"id":"1569561021","weight":6},{"id":"1569564669","weight":7},{"id":"1569565691","weight":5},{"id":"1569566815","weight":5},{"id":"1569566875","weight":5},{"id":"1569564605","weight":4},{"id":"1569559617","weight":4},{"id":"1569566981","weight":3},{"id":"1569566433","weight":4},{"id":"1569566321","weight":12},{"id":"1569566605","weight":3},{"id":"1569565489","weight":3},{"id":"1569566683","weight":20},{"id":"1569566855","weight":4},{"id":"1569560629","weight":6},{"id":"1569566869","weight":5},{"id":"1569565097","weight":6},{"id":"1569566227","weight":4},{"id":"1569566091","weight":10},{"id":"1569559259","weight":11},{"id":"1569566697","weight":12},{"id":"1569566597","weight":7},{"id":"1569565551","weight":5},{"id":"1569565711","weight":7},{"id":"1569566761","weight":5},{"id":"1569566943","weight":10},{"id":"1569565091","weight":14},{"id":"1569566591","weight":5},{"id":"1569556029","weight":3},{"id":"1569566571","weight":10},{"id":"1569552245","weight":11},{"id":"1569565607","weight":2},{"id":"1569565495","weight":3},{"id":"1569559967","weight":15},{"id":"1569567045","weight":11},{"id":"1569565227","weight":7},{"id":"1569564481","weight":26},{"id":"1569560833","weight":28},{"id":"1569566415","weight":10},{"id":"1569564805","weight":14},{"id":"1569567005","weight":10},{"id":"1569566469","weight":3},{"id":"1569566081","weight":9},{"id":"1569565355","weight":5},{"id":"1569564469","weight":5},{"id":"1569565931","weight":8},{"id":"1569566373","weight":4},{"id":"1569566647","weight":11},{"id":"1569551535","weight":15},{"id":"1569566765","weight":3},{"id":"1569564897","weight":11},{"id":"1569565775","weight":12},{"id":"1569565547","weight":4},{"id":"1569566871","weight":17},{"id":"1569566653","weight":2},{"id":"1569565461","weight":9},{"id":"1569564245","weight":2},{"id":"1569564731","weight":8},{"id":"1569565171","weight":3},{"id":"1569566207","weight":16},{"id":"1569564227","weight":5},{"id":"1569558325","weight":8},{"id":"1569565837","weight":9},{"id":"1569566671","weight":5},{"id":"1569566303","weight":6},{"id":"1569566119","weight":3},{"id":"1569564233","weight":5},{"id":"1569566459","weight":5},{"id":"1569567535","weight":4},{"id":"1569563411","weight":7},{"id":"1569560427","weight":13},{"id":"1569564401","weight":3},{"id":"1569564849","weight":11},{"id":"1569559541","weight":5},{"id":"1569565317","weight":2},{"id":"1569566363","weight":8},{"id":"1569565459","weight":5},{"id":"1569566319","weight":3},{"id":"1569565123","weight":3},{"id":"1569566941","weight":3},{"id":"1569566033","weight":7},{"id":"1569566739","weight":6},{"id":"1569555811","weight":8},{"id":"1569558459","weight":4},{"id":"1569565609","weight":6},{"id":"1569565291","weight":7},{"id":"1569564203","weight":7},{"id":"1569566821","weight":6},{"id":"1569556713","weight":8},{"id":"1569562685","weight":4},{"id":"1569566751","weight":4},{"id":"1569566467","weight":6},{"id":"1569565771","weight":4},{"id":"1569566157","weight":4},{"id":"1569560613","weight":3},{"id":"1569566903","weight":6},{"id":"1569566999","weight":5},{"id":"1569565859","weight":5},{"id":"1569565809","weight":4},{"id":"1569566843","weight":7},{"id":"1569566579","weight":2},{"id":"1569558483","weight":7},{"id":"1569566563","weight":13},{"id":"1569566089","weight":5},{"id":"1569564903","weight":2},{"id":"1569566173","weight":2},{"id":"1569559221","weight":5},{"id":"1569556091","weight":2},{"id":"1569565347","weight":11},{"id":"1569566925","weight":12},{"id":"1569564387","weight":8},{"id":"1569565455","weight":4},{"id":"1569566497","weight":7},{"id":"1569566795","weight":6},{"id":"1569566963","weight":10},{"id":"1569561679","weight":11},{"id":"1569566709","weight":4},{"id":"1569564989","weight":3},{"id":"1569566787","weight":6},{"id":"1569566717","weight":3},{"id":"1569560721","weight":6},{"id":"1569566015","weight":6},{"id":"1569566523","weight":3},{"id":"1569565897","weight":10},{"id":"1569551763","weight":7},{"id":"1569565953","weight":4},{"id":"1569566895","weight":7},{"id":"1569566889","weight":2},{"id":"1569565709","weight":5},{"id":"1569566749","weight":4},{"id":"1569566269","weight":27},{"id":"1569564189","weight":8},{"id":"1569564195","weight":4},{"id":"1569561513","weight":12},{"id":"1569566985","weight":5},{"id":"1569564613","weight":4},{"id":"1569565369","weight":2},{"id":"1569567009","weight":9},{"id":"1569566865","weight":4},{"id":"1569565321","weight":4},{"id":"1569558785","weight":8},{"id":"1569564647","weight":5},{"id":"1569566095","weight":4},{"id":"1569566193","weight":7},{"id":"1569564271","weight":3},{"id":"1569564337","weight":3},{"id":"1569565907","weight":4},{"id":"1569566343","weight":5},{"id":"1569564311","weight":5},{"id":"1569565803","weight":6},{"id":"1569565785","weight":4},{"id":"1569566239","weight":4},{"id":"1569566167","weight":5},{"id":"1569566679","weight":12},{"id":"1569565989","weight":4},{"id":"1569566575","weight":12},{"id":"1569563981","weight":10},{"id":"1569561085","weight":4},{"id":"1569566419","weight":4},{"id":"1569566617","weight":6},{"id":"1569559565","weight":16},{"id":"1569566905","weight":12},{"id":"1569566733","weight":4},{"id":"1569566753","weight":4},{"id":"1569566311","weight":2},{"id":"1569563307","weight":10},{"id":"1569566063","weight":6},{"id":"1569558681","weight":3},{"id":"1569555999","weight":2},{"id":"1569566759","weight":7},{"id":"1569565589","weight":3},{"id":"1569559195","weight":12},{"id":"1569566149","weight":12},{"id":"1569559995","weight":2},{"id":"1569566217","weight":8},{"id":"1569566657","weight":9},{"id":"1569558859","weight":12},{"id":"1569565199","weight":3},{"id":"1569565213","weight":3},{"id":"1569565365","weight":2},{"id":"1569566643","weight":3},{"id":"1569566511","weight":8},{"id":"1569566719","weight":7},{"id":"1569566991","weight":4},{"id":"1569565841","weight":5},{"id":"1569566369","weight":14},{"id":"1569566531","weight":5},{"id":"1569567665","weight":10},{"id":"1569561143","weight":9},{"id":"1569566581","weight":8},{"id":"1569565833","weight":10},{"id":"1569566489","weight":7},{"id":"1569564611","weight":5},{"id":"1569565535","weight":7},{"id":"1569562867","weight":10},{"id":"1569566395","weight":6},{"id":"1569565667","weight":3},{"id":"1569561795","weight":2},{"id":"1569566845","weight":6},{"id":"1569566325","weight":9},{"id":"1569566423","weight":4},{"id":"1569565257","weight":5},{"id":"1569564795","weight":6},{"id":"1569567015","weight":12},{"id":"1569559805","weight":7},{"id":"1569566437","weight":17},{"id":"1569566811","weight":3},{"id":"1569566851","weight":3},{"id":"1569558901","weight":7},{"id":"1569565735","weight":5},{"id":"1569553909","weight":3},{"id":"1569559111","weight":6},{"id":"1569566687","weight":2},{"id":"1569562285","weight":3},{"id":"1569564881","weight":10},{"id":"1569566939","weight":2},{"id":"1569553537","weight":7},{"id":"1569565427","weight":7},{"id":"1569566403","weight":5},{"id":"1569565839","weight":7},{"id":"1569565915","weight":4},{"id":"1569552251","weight":8},{"id":"1569566139","weight":4},{"id":"1569553519","weight":7},{"id":"1569567051","weight":10},{"id":"1569566885","weight":6},{"id":"1569564441","weight":3},{"id":"1569566231","weight":3},{"id":"1569564209","weight":3},{"id":"1569554689","weight":4},{"id":"1569566513","weight":2},{"id":"1569566425","weight":6},{"id":"1569554881","weight":6},{"id":"1569554971","weight":8},{"id":"1569565501","weight":8},{"id":"1569566899","weight":4},{"id":"1569566445","weight":7},{"id":"1569566209","weight":7},{"id":"1569562821","weight":2},{"id":"1569566649","weight":2},{"id":"1569566791","weight":14},{"id":"1569565559","weight":13},{"id":"1569566371","weight":4},{"id":"1569565655","weight":12},{"id":"1569566909","weight":5},{"id":"1569566127","weight":7},{"id":"1569565151","weight":3},{"id":"1569558985","weight":6},{"id":"1569563763","weight":14},{"id":"1569565087","weight":2},{"id":"1569566473","weight":9},{"id":"1569564857","weight":15},{"id":"1569564333","weight":3},{"id":"1569566913","weight":29},{"id":"1569566809","weight":6},{"id":"1569566629","weight":4},{"id":"1569566257","weight":10},{"id":"1569565033","weight":11},{"id":"1569566447","weight":6},{"id":"1569566357","weight":5},{"id":"1569565817","weight":14},{"id":"1569565847","weight":18},{"id":"1569564353","weight":9},{"id":"1569563897","weight":3},{"id":"1569557083","weight":5},{"id":"1569565887","weight":8},{"id":"1569565929","weight":8},{"id":"1569566141","weight":13},{"id":"1569553591","weight":2},{"id":"1569566721","weight":2},{"id":"1569565055","weight":2},{"id":"1569564677","weight":3},{"id":"1569563231","weight":12},{"id":"1569565633","weight":5},{"id":"1569566661","weight":4},{"id":"1569565279","weight":7},{"id":"1569555879","weight":10},{"id":"1569565521","weight":2},{"id":"1569566115","weight":4},{"id":"1569565219","weight":4},{"id":"1569558509","weight":7},{"id":"1569554759","weight":4},{"id":"1569565595","weight":25},{"id":"1569565185","weight":8},{"id":"1569556671","weight":2},{"id":"1569566773","weight":5},{"id":"1569566037","weight":3},{"id":"1569564985","weight":15},{"id":"1569565095","weight":2},{"id":"1569566223","weight":4},{"id":"1569558401","weight":14},{"id":"1569566553","weight":5},{"id":"1569564973","weight":9},{"id":"1569564969","weight":11},{"id":"1569565029","weight":11},{"id":"1569565357","weight":3},{"id":"1569561245","weight":4},{"id":"1569566505","weight":3},{"id":"1569565393","weight":3},{"id":"1569565933","weight":14},{"id":"1569562207","weight":6},{"id":"1569565705","weight":5},{"id":"1569566191","weight":7},{"id":"1569567033","weight":12},{"id":"1569565527","weight":9},{"id":"1569566853","weight":3},{"id":"1569566603","weight":5},{"id":"1569567029","weight":2},{"id":"1569565363","weight":3},{"id":"1569566159","weight":13},{"id":"1569566695","weight":6},{"id":"1569566051","weight":6},{"id":"1569561379","weight":4},{"id":"1569565909","weight":3},{"id":"1569561123","weight":15},{"id":"1569566655","weight":4},{"id":"1569566673","weight":5},{"id":"1569567235","weight":3},{"id":"1569565739","weight":3},{"id":"1569565311","weight":10},{"id":"1569566233","weight":10},{"id":"1569566667","weight":4},{"id":"1569566297","weight":7},{"id":"1569566893","weight":10},{"id":"1569566317","weight":3},{"id":"1569564097","weight":2},{"id":"1569560997","weight":8},{"id":"1569563845","weight":7},{"id":"1569566407","weight":5},{"id":"1569560349","weight":4},{"id":"1569566501","weight":8},{"id":"1569565741","weight":18},{"id":"1569566275","weight":22},{"id":"1569566481","weight":8},{"id":"1569565545","weight":5},{"id":"1569566857","weight":7},{"id":"1569565961","weight":8},{"id":"1569566387","weight":4},{"id":"1569566245","weight":14},{"id":"1569560503","weight":7},{"id":"1569565463","weight":7},{"id":"1569564339","weight":4},{"id":"1569566219","weight":5},{"id":"1569565439","weight":3},{"id":"1569566229","weight":7},{"id":"1569566949","weight":2},{"id":"1569566133","weight":2},{"id":"1569562551","weight":5},{"id":"1569563395","weight":3},{"id":"1569566901","weight":7},{"id":"1569551347","weight":4},{"id":"1569565415","weight":6},{"id":"1569555367","weight":2},{"id":"1569561623","weight":5},{"id":"1569566383","weight":3},{"id":"1569564485","weight":20},{"id":"1569565155","weight":5},{"id":"1569566631","weight":33},{"id":"1569565571","weight":11},{"id":"1569565885","weight":6},{"id":"1569566177","weight":13},{"id":"1569565493","weight":6},{"id":"1569557633","weight":8},{"id":"1569564411","weight":5},{"id":"1569566805","weight":10},{"id":"1569559199","weight":2},{"id":"1569566929","weight":2},{"id":"1569566293","weight":12},{"id":"1569565665","weight":5},{"id":"1569566831","weight":4},{"id":"1569565549","weight":5},{"id":"1569565523","weight":20},{"id":"1569565611","weight":6},{"id":"1569557715","weight":8},{"id":"1569564175","weight":3},{"id":"1569566983","weight":14},{"id":"1569566779","weight":3},{"id":"1569566097","weight":17},{"id":"1569566479","weight":5},{"id":"1569556361","weight":11},{"id":"1569566431","weight":9},{"id":"1569565397","weight":6},{"id":"1569566873","weight":9},{"id":"1569565765","weight":8},{"id":"1569565925","weight":14},{"id":"1569565435","weight":4},{"id":"1569557275","weight":5},{"id":"1569565263","weight":11},{"id":"1569566129","weight":3},{"id":"1569565215","weight":4},{"id":"1569565093","weight":3},{"id":"1569565385","weight":13},{"id":"1569565575","weight":5},{"id":"1569565919","weight":11},{"id":"1569565181","weight":3},{"id":"1569566711","weight":12},{"id":"1569565241","weight":7},{"id":"1569566927","weight":8},{"id":"1569565661","weight":5},{"id":"1569565865","weight":4},{"id":"1569566887","weight":8},{"id":"1569565273","weight":6},{"id":"1569565319","weight":2},{"id":"1569566267","weight":6},{"id":"1569564131","weight":4},{"id":"1569552037","weight":9},{"id":"1569564919","weight":14},{"id":"1569565511","weight":7},{"id":"1569566737","weight":12},{"id":"1569566429","weight":8},{"id":"1569561221","weight":5},{"id":"1569566917","weight":8},{"id":"1569566035","weight":5},{"id":"1569565353","weight":7},{"id":"1569564683","weight":10},{"id":"1569564305","weight":13},{"id":"1569564283","weight":10},{"id":"1569564291","weight":7},{"id":"1569566691","weight":5},{"id":"1569565421","weight":6},{"id":"1569566547","weight":5},{"id":"1569566651","weight":9},{"id":"1569565177","weight":6},{"id":"1569566823","weight":5},{"id":"1569566595","weight":3},{"id":"1569566677","weight":7},{"id":"1569565349","weight":2},{"id":"1569552025","weight":3},{"id":"1569566137","weight":9},{"id":"1569565013","weight":3},{"id":"1569565829","weight":3},{"id":"1569566237","weight":2},{"id":"1569566283","weight":4},{"id":"1569566529","weight":16},{"id":"1569565375","weight":4},{"id":"1569566715","weight":11},{"id":"1569565237","weight":6},{"id":"1569566639","weight":3},{"id":"1569566819","weight":4},{"id":"1569565041","weight":6},{"id":"1569564703","weight":5},{"id":"1569566713","weight":5},{"id":"1569565541","weight":5},{"id":"1569565597","weight":2},{"id":"1569566813","weight":10},{"id":"1569565293","weight":3},{"id":"1569566771","weight":4},{"id":"1569564649","weight":3},{"id":"1569564201","weight":8},{"id":"1569562277","weight":7},{"id":"1569566641","weight":5},{"id":"1569565425","weight":7},{"id":"1569564247","weight":4},{"id":"1569564437","weight":9},{"id":"1569566533","weight":5},{"id":"1569563975","weight":7},{"id":"1569551905","weight":3},{"id":"1569564861","weight":16},{"id":"1569565457","weight":6},{"id":"1569564787","weight":4},{"id":"1569566487","weight":10},{"id":"1569565529","weight":10},{"id":"1569556759","weight":8},{"id":"1569566619","weight":8},{"id":"1569565271","weight":2},{"id":"1569561185","weight":6},{"id":"1569566075","weight":5},{"id":"1569566397","weight":5},{"id":"1569558779","weight":10},{"id":"1569565669","weight":2},{"id":"1569565233","weight":3},{"id":"1569563721","weight":4},{"id":"1569566001","weight":5},{"id":"1569565593","weight":7},{"id":"1569560235","weight":3},{"id":"1569566817","weight":4},{"id":"1569564157","weight":7},{"id":"1569565729","weight":4},{"id":"1569566389","weight":6},{"id":"1569566435","weight":4},{"id":"1569567483","weight":8},{"id":"1569566911","weight":3},{"id":"1569564923","weight":15},{"id":"1569565367","weight":5},{"id":"1569566299","weight":10},{"id":"1569564281","weight":6},{"id":"1569565039","weight":2},{"id":"1569564769","weight":6},{"id":"1569565769","weight":5},{"id":"1569566171","weight":6},{"id":"1569566601","weight":3},{"id":"1569565805","weight":4},{"id":"1569561713","weight":6},{"id":"1569566933","weight":3},{"id":"1569563919","weight":10},{"id":"1569566577","weight":8},{"id":"1569557851","weight":5},{"id":"1569565389","weight":4},{"id":"1569559919","weight":8},{"id":"1569565861","weight":6},{"id":"1569566147","weight":10},{"id":"1569565537","weight":10},{"id":"1569559523","weight":2},{"id":"1569566057","weight":6},{"id":"1569562367","weight":12},{"id":"1569560785","weight":13},{"id":"1569565561","weight":3},{"id":"1569565631","weight":3},{"id":"1569560213","weight":13},{"id":"1569555891","weight":2},{"id":"1569566847","weight":7},{"id":"1569565997","weight":6},{"id":"1569563425","weight":9},{"id":"1569565035","weight":11},{"id":"1569559597","weight":3},{"id":"1569564961","weight":8},{"id":"1569559251","weight":4},{"id":"1569565089","weight":2},{"id":"1569567013","weight":5},{"id":"1569566583","weight":4},{"id":"1569561861","weight":4},{"id":"1569565337","weight":5},{"id":"1569564253","weight":4},{"id":"1569565737","weight":5},{"id":"1569560459","weight":3},{"id":"1569564463","weight":6},{"id":"1569565853","weight":17},{"id":"1569550425","weight":6},{"id":"1569566273","weight":12},{"id":"1569564123","weight":11},{"id":"1569566341","weight":2},{"id":"1569565889","weight":7},{"id":"1569566635","weight":4},{"id":"1569566611","weight":13},{"id":"1569563725","weight":2},{"id":"1569551539","weight":6},{"id":"1569564505","weight":7},{"id":"1569565165","weight":6},{"id":"1569565565","weight":11},{"id":"1569565635","weight":8},{"id":"1569561397","weight":4},{"id":"1569565731","weight":10},{"id":"1569566125","weight":4},{"id":"1569566413","weight":8},{"id":"1569565707","weight":7},{"id":"1569565113","weight":3},{"id":"1569566375","weight":8},{"id":"1569565143","weight":3},{"id":"1569564257","weight":7},{"id":"1569565583","weight":9},{"id":"1569566555","weight":6},{"id":"1569564931","weight":3},{"id":"1569565373","weight":4},{"id":"1569564141","weight":2},{"id":"1569566973","weight":11},{"id":"1569561579","weight":10},{"id":"1569566449","weight":3},{"id":"1569566987","weight":4},{"id":"1569565031","weight":6},{"id":"1569564755","weight":3},{"id":"1569551541","weight":8},{"id":"1569565619","weight":2},{"id":"1569566839","weight":5},{"id":"1569551751","weight":7},{"id":"1569558697","weight":4},{"id":"1569565139","weight":9},{"id":"1569565895","weight":3},{"id":"1569566663","weight":6},{"id":"1569564419","weight":4},{"id":"1569565579","weight":5},{"id":"1569566067","weight":6},{"id":"1569566825","weight":8},{"id":"1569566615","weight":6},{"id":"1569566241","weight":4},{"id":"1569564807","weight":4},{"id":"1569566609","weight":3},{"id":"1569563007","weight":4},{"id":"1569566113","weight":17},{"id":"1569566443","weight":7},{"id":"1569566727","weight":18},{"id":"1569565315","weight":4},{"id":"1569565515","weight":8},{"id":"1569566417","weight":4},{"id":"1569560581","weight":12},{"id":"1569559233","weight":8}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S9.T1.2","endtime":"10:30","authors":"Hessam Mahdavifar, Alexander  Vardy","date":"1341396600000","papertitle":"List-decoding of Subspace Codes and Rank-Metric Codes up to Singleton Bound","starttime":"10:10","session":"S9.T1: Network Coding:  Security and Reliability","room":"Kresge Rehearsal B (030)","paperid":"1569566797"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"1","spectral43":"25","spectral28":"7","spectral32":"20","spectral14":"5","spectral20":"12","spectral9":"0","spectral25":"16","spectral42":"36","spectral3":"1","spectral47":"32","spectral17":"7","louvain":"18","spectral36":"10","spectral39":"3","spectral10":"5","spectral15":"4","spectral33":"13","spectral5":"2","spectral21":"17","spectral44":"23","spectral26":"6","spectral40":"31","spectral8":"7","spectral11":"2","spectral4":"3","spectral37":"7","spectral48":"9","spectral22":"1","spectral23":"17","spectral12":"10","spectral50":"9","spectral19":"16","spectral34":"28","spectral45":"3","spectral7":"3","spectral49":"16","spectral38":"12","spectral24":"23","spectral13":"0","spectral31":"25","spectral29":"27","spectral35":"21","spectral30":"1","spectral41":"16","spectral27":"10","spectral18":"3","spectral46":"27","spectral2":"0","spectral16":"7"}}

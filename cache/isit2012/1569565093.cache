{"id":"1569565093","paper":{"title":{"text":"Finite-length analysis of the TEP decoder for LDPC ensembles over the BEC"},"authors":[{"name":"Pablo M. Olmos"},{"name":"Fernando P´erez-Cruz"},{"name":"Luis Salamanca"},{"name":"Juan Jos´e Murillo-Fuentes"}],"abstr":{"text":"Abstract\u2014In this work, we analyze the ﬁnite-length perfor- mance of low-density parity check (LDPC) ensembles decoded over the binary erasure channel (BEC) using the tree-expectation propagation (TEP) algorithm. In a previous paper, we showed that the TEP improves the BP performance for decoding regular and irregular short LDPC codes, but the perspective was mainly empirical. In this work, given the degree-distribution of an LDPC ensemble, we explain and predict the range of code lengths for which the TEP improves the BP solution. In addition, for LDPC ensembles that present a single critical point, we propose a scaling law to accurately predict the performance in the waterfall region. These results are of critical importance to design practical LDPC codes for the TEP decoder."},"body":{"text":"Tree-structured expectation propagation (TEP) was ﬁrst pro- posed in [1] to construct tractable approximations to graphical models. Its application to low-density parity-check (LDPC) decoding is introduced in [2], [3], [4] for the binary erasure channel (BEC), where we show that it improves the per- formance of the belief propagation (BP) algorithm, thanks to a better estimation of the posterior probability for each coded bit. Contrary to alternative techniques to BP, such as generalized-BP (GBP) [5], the TEP complexity for the BEC is of the same order as BP, i.e., linear with the LDPC code length [6]. For LDPC over the BEC, the TEP can be explained as a Gaussian elimination algorithm where rows with up to two ones can be processed. For properly designed Raptor codes, extensively considered nowadays in broadcast erasure networks, inactivation decoding [7], [8] achieves the ML solution by GE of rows with no more than two ones, i.e., is equivalent to the TEP.\nIn [4], [3], we compute in detail the TEP decoder graph evolution, which constitutes the basic tool to analyze the TEP decoder properties over the BEC. In [4], we show the condi- tions that have to be fulﬁlled by an LDPC ensemble to improve the BP limiting performance, i.e., the decoding threshold ✏ BP . These conditions are quite restrictive and no code satisfying them have been found to date. On the contrary, the TEP decoder signiﬁcantly improves the BP solution when decoding ﬁnite-length LDPC codes [2], [3]. In [2], we illustrate this result for regular and irregular LDPC ensembles. Based on empirical evidence, we concluded that TEP either provides a gain in word error rate (WER) for a given code length, or a reduction of the code length needed to achieve a target WER.\nIn this contribution, we analyze the ﬁnite-length perfor- mance of the TEP decoder for the BEC from a theoretical perspective. For a given LDPC ensemble, we are able to ex- plain the gain in performance with respect to BP by comparing the expected graph evolution for each decoder. In addition, we derive a scaling law (SL) that accurately predicts the TEP performance for any given LDPC ensemble in the waterfall region. The TEP decoder SL can be used for TEP-oriented ﬁnite-length LDPC optimization. These results can be also applied to estimate the ﬁnite-length ML decoder performance for Raptor codes.\nThe TEP decoder for the erasure channel can be formulated as a peeling algorithm [6], which works over the Tanner graph of the code [4], [2]. We assume, without loss of generality, that the all zero codeword 1 is transmitted through a BEC with erasure parameter ✏. The Tanner graph is initialized by removing all the non-erased variables, along with all their links. Then, one of the two following steps is performed at each iteration:\n1) Variable identiﬁcation: Look for a degree-one check node in the graph and remove it along with the variable it is connected to. The parity of the check node indicates the value of the variable, which is declared as revealed.\n2) Graph reduction: Look for a degree-two check node in the graph and remove it along with one of the variables it is connected to. The removed variable will be revealed once the remaining variable in the graph is revealed. This process is sketched in Fig. 1. The variable V 1 inherits the connections of V 2 (solid lines) in Fig. 1(b) and the check P 1 and the variable V 2 are removed.\nThe BP decoder as a peeling-type algorithm, usually re- ferred to as peeling decoder (PD), only implements the ﬁrst step, i.e., variable identiﬁcation. Note the equivalence between the graph reduction step and the triangularization procedure in [9] for Gaussian elimination. During triangularization proce- dure, a variable is related to some \u201creference\u201d variables or pivots, as done during the graph reduction step. Accordingly, the TEP decoder triangularizes the residual matrix by only processing rows with up to two ones.\nThe TEP operates until all variable nodes have been re- moved, i.e., successful decoding, or until there are no degree- one and degree-two check nodes left. In the graph reduction step, we eventually create check nodes of degree one. For example, in Fig. 2(a), we create a check node of degree one since V 1 and V 2 also share P 3 , a check node of degree three. Once P 1 and V 2 are removed, the check node P 3 becomes degree one, as illustrated in Fig. 2(b). V 3 is now revealed.\nThe TEP decoder complexity is analyzed in [4], where we show that the graph reduction step is performed by a basic BP iteration followed by the addition of two columns of the parity check matrix. Along the decoding process, the matrix remains sparse and the resulting complexity is of order O(n), where n is the code length.\nBoth the PD and the TEP decoder sequentially reduce the LDPC Tanner graph and, as a consequence, the decoding process yields a random sequence of residual graphs. As proved in [10], this random process follows a typical path or expected evolution [6] that is computed as the solution of a set of differential equations. In [11], the authors show that individual sequences of residual graphs under BP decoding are Gaussian distributed around such expected evolution, and that the covariance decays as O(1/n).\nConsider an LDPC ensemble of code length n and degree distribution (DD) ( (x), ⇢(x)):\nwhere i represents the fraction of edges connected to a variable node of degree i, i.e., edges with left degree i, and ⇢ j is the fraction of edges connected to a check node of degree j , i.e., edges of right degree j [10]. In [4], we compute the expected graph evolution during the TEP decoding, also with a set of non-linear differential equations. These equations track down the expected progression of the fraction of edges with left degree i, l i (⌧ ) for i = 1, . . . , l max , and right degree j, r j (⌧ ) for j = 1, . . . , r max , as the TEP decoder iterates. The normalized time ⌧ is such that if ` is the TEP iteration index and E / n is the total number of edges in the original graph then ⌧ = `/E. The normalized size of the residual graph along time is given by e(⌧) = P j r j (⌧ ) = P i l i (⌧ ) . The initial conditions for the TEP differential equations depend on both the DD in (1) and the erasure probability ✏.\nLet us illustrate the accuracy of this model for the analysis of the TEP decoder properties. In Fig. 3, we compare the estimated TEP expected graph evolution (in solid lines) for R 1 (⌧ ) = r 1 (⌧ )E and R 2 (⌧ ) = r 2 (⌧ )E for a regular (3, 6) code with 20 particular decoding trajectories obtained through simulation (thin lines). We choose a very large code length, n = 2 17 , so that the deviation around the expected evolution is small. Since the BP threshold is ✏ BP = 0.4294 , we consider two cases: below the threshold, ✏ = 0.415 in (a), and above, ✏ = 0.43 in (b). We depict their evolution e(⌧). As we can see, our model in [4] accurately estimates the average decoding trajectories. Note that, below the threshold, all the curves represent successful decoding.\nTo perform better than the BP decoder, the TEP decoder needs to create a signiﬁcant amount of check nodes of degree one. In other words, the probability of the scenario in Fig. 2(a) should be large. In [4] we computed the probability that two variable nodes that share a check node of degree-two also share at least another check node (of any degree). Let S denote this scenario. For the graph at time ⌧, if we randomly choose a particular degree-two check node, the probability of this scenario is lower bounded by\nwhere l avg (⌧ ) and r avg (⌧ ) are, respectively, the average left and right edge degrees. The probability of the scenario in Fig. 2(a) is just a fraction of (2). For most codes of interest, in the limit n ! 1, P S (⌧ ) ! 0 for any ⌧, proving that the TEP and BP present the same limiting performance and threshold [4]. For ﬁnite-length codes, P S (⌧ ) is higher than zero and the improvement with respect to the BP decoder is possible.\nIn [11], the authors prove that the BP performance for ﬁnite- length LDPC codes can be predicted by analyzing the average presence of degree-one check nodes at a ﬁnite set of time instants during the BP decoding. These points are referred to as critical points. For a given ensemble with n ! 1, if r BP 1 (⌧ ) is the expected evolution of the fraction of degree-one check\nnodes under BP decoding, we say that ⌧ ⇤ is a BP-critical point if\n, \t (4) and\n. \t (5) Given the parameter u in (5), the decoding process starts at u = 1 and ﬁnishes, if it succeeds, at u = 0. In [11], it is shown that the BP decoder at ✏ = ✏ BP ✏ succeed with very high probability as long as there exists, on average, degree-one check nodes at the critical points. The ﬁnite- length performance is estimated by computing the cumulative probability distribution of individual trajectories at the critical points. We show that the same idea extends to the TEP case.\nFor the TEP decoder, we extend the notion of critical points: given an LDPC ensemble with n ! 1, we say that ⌧ 0 is a TEP-critical point of the LDPC ensemble if\nwhere r 1 (⌧ 0 ) is the evolution of degree-one check nodes under TEP decoding, computed in [4]. The following lemma relates the number of TEP and BP critical points for the same LDPC ensemble. The complete proof of this lemma can be found in the extended version of this paper in [4]:\nLemma 1: For a given LDPC[ (x), ⇢(x), n ! 1] ensem- ble used for transmission over the BEC, the number of TEP critical points is equal to the number of BP critical points.\nTo estimate the TEP performance, we compute the cumu- lative probability distribution of decoding trajectories at the critical points. For a given ﬁnite-length ensemble, the TEP expected graph evolution provides the average presence of degree-one check nodes at any time 2 ⌧ , i.e., r 1 (⌧, n, ✏) . Unlike the BP case in (4), the average trajectory r 1 (⌧, n, ✏) is strongly dependent on the code length n. For instance, in Fig. 4, we include the solution for r 1 (⌧, n, ✏) for the (3, 6) regular code and different code lengths n = 2 i for i = 12, . . . , 17 at ✏ = ✏ BP = ✏ TEP . For n 2 17 , we locate the unique TEP- critical point at e(⌧) ⇡ 0.1, where r 1 (⌧ 0 , n, ✏ BP ) vanishes. For lower code lengths, r 1 (⌧ 0 , n, ✏ TEP ) does not vanish since the graph is small enough to make P S (⌧ ) in (2) signiﬁcant. The fraction r 1 (⌧ 0 , n, ✏ TEP ) represents the number of degree-one check nodes that the TEP decoder is able to create with respect to the BP solution, which is zero at the critical point.\nAs we increase n, we observe that, above a certain length threshold n th , r 1 (⌧ 0 , n, ✏ TEP ) becomes zero. On the one hand, for n n th , we do not expect signiﬁcant mismatch between the BP and the TEP solutions. On the other hand, for n < n th , a closer look to the curves in Fig. 4 shows that r 1 (⌧ 0 , n, ✏ TEP ) decays approximately as O(1/n), which is consistent with with probability P S (⌧ ) in (2):\nwhere TEP depends on the ensemble. We obtain this value by linearly interpolating r 1 (⌧ 0 , n, ✏ TEP ) 1 for different code lengths. Indeed, we have observed that (7) is a general prop- erty, where the constant TEP depends on the ensemble. For instance, for the (3, 6) regular code we obtain 1 TEP = 0.3194 and for the following single-critical-point irregular LDPC ensemble with BP threshold ✏ BP = 0.4828 deﬁned by\nConsider a transmission over the BEC using the ensemble LDPC[ (x), ⇢(x), n], which has a single non-zero critical point. Under these conditions, in [11] it was proposed the following SL to predict the BP error performance:\nwhere P BP W ( C, ✏) is the average block error probability for C 2 LDPC[ (x), ⇢(x), n], ↵ BP = ↵ BP ( (x), ⇢(x)) and BP =\nBP ( (x), ⇢(x)) , i.e., ↵ BP and BP are constants that depend only on the degree distribution. The analytical expression for the parameters ↵ BP and BP can be found in [11], [6].\nIt is important for our work to provide further details about the derivation of the SL in (9). For ✏ = ✏ BP , we know by assumption that there only exists one critical point ⌧ ⇤ . If we now vary ✏ slightly, the expected fraction of check nodes at ⌧ ⇤ can be estimated by Taylor expansion:\nwhere ✏ = (✏ ✏ BP ) [11]. Because of the channel dispersion, individual decoding trajectories are Gaussian distributed with a variance of order O(1/n) [6], [11]. Hence, at point ⌧ ⇤ , the observed fraction of degree-one check nodes is a normal random variable with mean given in (10) and variance denoted by BP r 1 ,r 1 (⌧ ⇤ )/n . A coarse estimation of the error probability is obtained by computing the probability that this random\n0 B B B B\n1 C C C C\n1 (⌧ ) @✏\nFor moderate block-lengths, we are underestimating the error probability since we ignore those trajectories for which the fraction of check nodes of degree one vanishes at ⌧  ⌧ ⇤ . This effect is included in the scaling function by introducing the BP parameter in (9).\nWe now show that the TEP decoder can be modeled by a similar scaling law and we provide a ﬁrst estimate of the scaling parameters as a function of the LDPC DD.\nThe function r 1 (⌧, n, ✏ BP ) provides the average presence of degree-one check nodes at the codes\u2019s critical point for ﬁnite block-lengths. We proceed as in (10)-(12) to estimate the TEP error probability. The LDPC ensemble has threshold ✏ TEP = ✏ BP and a critical point at ⌧ 0 . Assume now an slight deviation of the erasure probability ✏ = ✏ TEP + ✏ . According to (7), the average fraction of degree-one check nodes has the following Taylor expansion:\nTo estimate the TEP error probability, we consider that the TEP decoder will succeed with high probability as long as the fraction of degree-one check nodes at ⌧ 0 is positive. Therefore, assuming a Gaussian distribution around the mean in (13) with a variance denoted by TEP r 1 ,r 1 (⌧ 0 )/n , we have\n0 @\nwhere P TEP W ( C, ✏) is the TEP block error rate for the code C 2 LDPC[ (x), ⇢(x), n] and\n1 (⌧, n, ✏) @✏\n0 )/n at the critical point requires to solve, for the TEP and each particular ensemble, the covariance graph evolution equations [11]. Because the variance of the trajectories es- sentially comes from the channel dispersion [12] and from the LDPC ensemble [11], a ﬁrst approach to estimate this\nparameter is given by the BP variance at the corresponding critical point, i.e., BP r 1 ,r 1 (⌧ ⇤ ) . Besides, for n ! 1, both the TEP and BP converge to the same performance, so we set ↵ TEP = ↵ BP . Due to the assumption of these values for the TEP parameters, our model provides an upper bound to the TEP performance because, the better the decoder is, the less variance we expect among different trajectories.\nLet us include a couple of examples. In Fig. 5 (a), we compare the SL solution in (14) in dashed lines with real performance data obtained through simulation in solid lines for the regular (3, 6) LDPC ensemble for code lengths n = 2 i i = 10, . . . , 12 . As shown in [2], for these code lengths the TEP signiﬁcantly improves the BP solution. The match between dashed and solid lines is quite good, proving the accuracy of the model for the TEP performance and the\nparameter estimation proposed. Due to the assumption of the BP values for TEP r 1 ,r 1 (⌧ 0 )/n and ↵ TEP , we slightly overestimate the TEP error probability. In Fig. 5 (b), we include with similar conclusions the results for the irregular code deﬁned in (8). In all cases, the real error curves have been averaged throughout one hundred code samples chosen to present large enough minimum distance so that the error ﬂoor is far below 10 4 .\nIn this work, we provide a method to analyze the TEP ﬁnite-length performance for an LDPC code. For ensembles that exhibit a single critical point, a model to estimate the error rate as a function of the channel parameter is provided. We show that the BP equivalent parameters provide a good ﬁrst approach. However, irregular capacity-achieving LDPC ensembles typically have several critical points. In [13], the authors propose a BP scaling law that takes into account the effect of all the critical points and its extension to the TEP decoder should be done in the same way as in (14). The computation of the (multiple) scaling parameters, for both the TEP and the BP decoders, is the real challenge. On the other hand, the main open problem is, without any doubt, the analysis of the TEP decoder performance over general binary memoryless channels."},"refs":[{"authors":[{"name":"T. Minka"},{"name":"Y. Qi"}],"title":{"text":"Tree-structured approximations by expectation propagation"}},{"authors":[{"name":"P. Olmos"},{"name":"J. J. Murillo-Fuentes"},{"name":"F. P´erez-Cruz"}],"title":{"text":"Tree-structured expectation propagation for decoding ﬁnite-length LDPC codes"}},{"authors":[{"name":"P. M. Olmos"},{"name":"J. J. Murillo-Fuentes"},{"name":"F. P´erez-Cruz"}],"title":{"text":"Tree-structure expectation propagation for decoding LDPC codes over binary erasure channels"}},{"authors":[{"name":"P. M. Olmos"},{"name":"J. J. Murillo-Fuentes"},{"name":"F. P´erez-Cruz"}],"title":{"text":"Tree-structure expectation propagation for LDPC decoding over the BEC"}},{"authors":[{"name":"J. Yedidia"},{"name":"W. Freeman"},{"name":"Y. Weiss"}],"title":{"text":"Constructing free-energy approximations and generalized belief propagation algorithms"}},{"authors":[{"name":"T. Richardso"},{"name":"R. Urbank"}],"title":{"text":"Modern Coding Theory"}},{"authors":[{"name":"A. Shokrollahi"}],"title":{"text":"Raptor codes"}},{"authors":[{"name":"M. A. Shokrollahi"},{"name":"M. Luby"}],"title":{"text":"Raptor codes"}},{"authors":[{"name":"G. Liva"},{"name":"B. Matuz"},{"name":"E. Paolini"},{"name":"M. Chiani"}],"title":{"text":"Pivoting algorithms for maximum likelihood decoding of LDPC codes over erasure channels"}},{"authors":[{"name":"M. Luby"},{"name":"M. Mitzenmacher"},{"name":"A. Shokrollahi"},{"name":"D. Spielman"},{"name":"V. Ste- mann"}],"title":{"text":"Efﬁcient erasure correcting codes"}},{"authors":[{"name":"A. Amraoui"},{"name":"A. Montanari"},{"name":"T. Richardson"},{"name":"R. Urbanke"}],"title":{"text":"Finite- length scaling for iteratively decoded LDPC ensembles"}},{"authors":[{"name":"Y. Polyanskiy"},{"name":"H. Poor"},{"name":"S. Verdu"}],"title":{"text":"Channel coding rate in the ﬁnite blocklength regime"}},{"authors":[{"name":"A. Amraoui"},{"name":"R. Urbanke"},{"name":"A. Montanari"}],"title":{"text":"Finite-length scaling of irregular LDPC code ensembles"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569565093.pdf"},"links":[{"id":"1569566567","weight":4},{"id":"1569564843","weight":2},{"id":"1569565383","weight":2},{"id":"1569565883","weight":17},{"id":"1569565377","weight":2},{"id":"1569566385","weight":2},{"id":"1569567049","weight":2},{"id":"1569564669","weight":2},{"id":"1569564605","weight":7},{"id":"1569559617","weight":2},{"id":"1569566605","weight":13},{"id":"1569566683","weight":2},{"id":"1569566855","weight":9},{"id":"1569560629","weight":2},{"id":"1569566227","weight":2},{"id":"1569566697","weight":2},{"id":"1569565551","weight":20},{"id":"1569566761","weight":23},{"id":"1569566943","weight":2},{"id":"1569565091","weight":6},{"id":"1569566571","weight":2},{"id":"1569552245","weight":2},{"id":"1569566415","weight":2},{"id":"1569564805","weight":3},{"id":"1569567005","weight":2},{"id":"1569566081","weight":4},{"id":"1569564469","weight":2},{"id":"1569551535","weight":2},{"id":"1569564897","weight":5},{"id":"1569566871","weight":2},{"id":"1569565461","weight":3},{"id":"1569565171","weight":3},{"id":"1569566459","weight":2},{"id":"1569563411","weight":2},{"id":"1569564849","weight":2},{"id":"1569559541","weight":2},{"id":"1569564203","weight":3},{"id":"1569562685","weight":3},{"id":"1569566903","weight":2},{"id":"1569565809","weight":2},{"id":"1569566563","weight":8},{"id":"1569565347","weight":2},{"id":"1569566925","weight":4},{"id":"1569564387","weight":3},{"id":"1569566497","weight":11},{"id":"1569566795","weight":4},{"id":"1569566717","weight":2},{"id":"1569566015","weight":3},{"id":"1569565897","weight":3},{"id":"1569551763","weight":2},{"id":"1569565953","weight":2},{"id":"1569566895","weight":3},{"id":"1569566749","weight":3},{"id":"1569566269","weight":3},{"id":"1569561513","weight":2},{"id":"1569564613","weight":14},{"id":"1569567009","weight":2},{"id":"1569566865","weight":4},{"id":"1569565321","weight":2},{"id":"1569566343","weight":2},{"id":"1569564311","weight":4},{"id":"1569565785","weight":2},{"id":"1569566679","weight":4},{"id":"1569565989","weight":2},{"id":"1569563981","weight":2},{"id":"1569566617","weight":7},{"id":"1569559565","weight":2},{"id":"1569566905","weight":2},{"id":"1569563307","weight":2},{"id":"1569555999","weight":7},{"id":"1569566759","weight":2},{"id":"1569566657","weight":3},{"id":"1569558859","weight":3},{"id":"1569565199","weight":8},{"id":"1569566531","weight":3},{"id":"1569567665","weight":3},{"id":"1569565833","weight":2},{"id":"1569564611","weight":2},{"id":"1569565535","weight":2},{"id":"1569562867","weight":6},{"id":"1569566395","weight":4},{"id":"1569566325","weight":7},{"id":"1569566423","weight":3},{"id":"1569564795","weight":2},{"id":"1569567015","weight":2},{"id":"1569559805","weight":6},{"id":"1569566437","weight":2},{"id":"1569565735","weight":15},{"id":"1569559111","weight":2},{"id":"1569566939","weight":2},{"id":"1569553537","weight":2},{"id":"1569565427","weight":2},{"id":"1569552251","weight":3},{"id":"1569566885","weight":2},{"id":"1569564441","weight":2},{"id":"1569566231","weight":2},{"id":"1569566445","weight":2},{"id":"1569563763","weight":2},{"id":"1569566473","weight":4},{"id":"1569564857","weight":4},{"id":"1569566913","weight":2},{"id":"1569566809","weight":6},{"id":"1569566629","weight":2},{"id":"1569566257","weight":3},{"id":"1569565033","weight":2},{"id":"1569566447","weight":2},{"id":"1569565817","weight":2},{"id":"1569565847","weight":3},{"id":"1569557083","weight":2},{"id":"1569565929","weight":2},{"id":"1569566141","weight":2},{"id":"1569565633","weight":2},{"id":"1569566661","weight":3},{"id":"1569565279","weight":2},{"id":"1569566115","weight":3},{"id":"1569565185","weight":2},{"id":"1569566773","weight":13},{"id":"1569566223","weight":31},{"id":"1569566553","weight":2},{"id":"1569564973","weight":7},{"id":"1569565469","weight":6},{"id":"1569565029","weight":3},{"id":"1569566505","weight":4},{"id":"1569567033","weight":2},{"id":"1569565527","weight":2},{"id":"1569566853","weight":6},{"id":"1569566159","weight":3},{"id":"1569566695","weight":2},{"id":"1569566051","weight":2},{"id":"1569561123","weight":2},{"id":"1569567235","weight":2},{"id":"1569566317","weight":6},{"id":"1569560349","weight":2},{"id":"1569565741","weight":2},{"id":"1569566275","weight":2},{"id":"1569566481","weight":4},{"id":"1569565545","weight":4},{"id":"1569566857","weight":2},{"id":"1569566245","weight":2},{"id":"1569560503","weight":2},{"id":"1569562551","weight":2},{"id":"1569566901","weight":2},{"id":"1569551347","weight":2},{"id":"1569561623","weight":2},{"id":"1569566631","weight":2},{"id":"1569566177","weight":2},{"id":"1569565493","weight":6},{"id":"1569564411","weight":2},{"id":"1569566805","weight":12},{"id":"1569559199","weight":4},{"id":"1569565665","weight":2},{"id":"1569566831","weight":2},{"id":"1569566983","weight":3},{"id":"1569566479","weight":7},{"id":"1569566431","weight":2},{"id":"1569565765","weight":2},{"id":"1569566711","weight":3},{"id":"1569565241","weight":3},{"id":"1569566927","weight":6},{"id":"1569565661","weight":7},{"id":"1569566887","weight":3},{"id":"1569564919","weight":2},{"id":"1569566737","weight":4},{"id":"1569566917","weight":5},{"id":"1569566035","weight":2},{"id":"1569565353","weight":11},{"id":"1569564305","weight":2},{"id":"1569565421","weight":2},{"id":"1569566547","weight":7},{"id":"1569565177","weight":4},{"id":"1569566595","weight":3},{"id":"1569565349","weight":4},{"id":"1569566137","weight":2},{"id":"1569566529","weight":4},{"id":"1569566715","weight":6},{"id":"1569565237","weight":5},{"id":"1569566639","weight":3},{"id":"1569566819","weight":6},{"id":"1569565041","weight":2},{"id":"1569565541","weight":8},{"id":"1569566771","weight":2},{"id":"1569562277","weight":3},{"id":"1569564437","weight":2},{"id":"1569566533","weight":5},{"id":"1569564861","weight":3},{"id":"1569566487","weight":2},{"id":"1569565529","weight":5},{"id":"1569566397","weight":7},{"id":"1569566301","weight":2},{"id":"1569565233","weight":2},{"id":"1569566001","weight":6},{"id":"1569567483","weight":3},{"id":"1569564923","weight":2},{"id":"1569564281","weight":2},{"id":"1569565039","weight":7},{"id":"1569565769","weight":8},{"id":"1569566601","weight":2},{"id":"1569565805","weight":2},{"id":"1569559919","weight":2},{"id":"1569565861","weight":12},{"id":"1569566147","weight":4},{"id":"1569565561","weight":3},{"id":"1569566847","weight":2},{"id":"1569565997","weight":15},{"id":"1569565035","weight":18},{"id":"1569559597","weight":2},{"id":"1569564961","weight":7},{"id":"1569567013","weight":3},{"id":"1569565337","weight":4},{"id":"1569565737","weight":2},{"id":"1569560459","weight":2},{"id":"1569565853","weight":4},{"id":"1569550425","weight":4},{"id":"1569564123","weight":12},{"id":"1569565889","weight":2},{"id":"1569566635","weight":2},{"id":"1569565565","weight":2},{"id":"1569561397","weight":5},{"id":"1569566797","weight":3},{"id":"1569566413","weight":2},{"id":"1569565707","weight":6},{"id":"1569566375","weight":2},{"id":"1569565143","weight":2},{"id":"1569565583","weight":2},{"id":"1569561579","weight":3},{"id":"1569565139","weight":4},{"id":"1569565579","weight":4},{"id":"1569566067","weight":2},{"id":"1569566825","weight":2},{"id":"1569566241","weight":3},{"id":"1569566113","weight":3},{"id":"1569566443","weight":2},{"id":"1569566727","weight":6},{"id":"1569565315","weight":6},{"id":"1569560581","weight":5}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S13.T5.5","endtime":"16:00","authors":"Pablo M. Olmos, Fernando Pérez-Cruz, Luis Salamanca, Juan José Murillo-Fuentes","date":"1341502800000","papertitle":"Finite-length analysis of the TEP decoder for LDPC ensembles over the BEC","starttime":"15:40","session":"S13.T5: Analysis of LDPC Codes","room":"Kresge Little Theatre (035)","paperid":"1569565093"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"13","spectral28":"6","spectral32":"29","spectral14":"6","spectral20":"6","spectral9":"1","spectral25":"6","spectral42":"6","spectral3":"1","spectral47":"39","spectral17":"0","louvain":"567","spectral36":"5","spectral39":"2","spectral10":"6","spectral15":"6","spectral33":"28","spectral5":"2","spectral21":"6","spectral44":"25","spectral26":"14","spectral40":"29","spectral8":"2","spectral11":"3","spectral4":"3","spectral37":"6","spectral48":"29","spectral22":"3","spectral23":"0","spectral12":"5","spectral50":"48","spectral19":"7","spectral34":"7","spectral45":"6","spectral7":"6","spectral49":"17","spectral38":"3","spectral24":"5","spectral13":"4","spectral31":"4","spectral29":"19","spectral35":"6","spectral30":"6","spectral41":"29","spectral27":"16","spectral18":"0","spectral46":"41","spectral2":"0","spectral16":"1"}}

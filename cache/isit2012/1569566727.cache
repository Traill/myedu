{"id":"1569566727","paper":{"title":{"text":"Polar Codes: Robustness of the Successive Cancellation Decoder with Respect to Quantization"},"authors":[{"name":"S. Hamed Hassani"},{"name":"R¨udiger Urbanke"}],"abstr":{"text":"Abstract\u2014Polar codes provably achieve the capacity of a wide array of channels under successive decoding. This assumes inﬁnite precision arithmetic. Given the successive nature of the decoding algorithm, one might worry about the sensitivity of the performance to the precision of the computation.\nWe show that even very coarsely quantized decoding algo- rithms lead to excellent performance. More concretely, we show that under successive decoding with an alphabet of cardinality only three, the decoder still has a threshold and this threshold is a sizable fraction of capacity. More generally, we show that if we are willing to transmit at a rate δ below capacity, then we need only c log(1/δ) bits of precision, where c is a universal constant."},"body":{"text":"Since the invention of polar codes by Arikan, [1], a large body of work has been done to investigate the pros and cons of polar codes in different practical scenarios (for a partial list see [2]-[9]).\nWe address one further aspect of polar codes using succes- sive decoding. We ask whether such a coding scheme is robust. More precisely, the standard analysis of polar codes under suc- cessive decoding assumes inﬁnite precision arithmetic. Given the successive nature of the decoder, one might worry how well such a scheme performs under a ﬁnite precision decoder. A priori it is not clear whether such a coding scheme still shows any threshold behavior and, even if it does, how the threshold scales in the number of bits of the decoder.\nWe show that in fact polar coding is extremely robust with respect to the quantization of the decoder. In Figure 1, we show the achievable rate using a simple successive decoder with only three messages, called the decoder with erasures, when transmission takes place over several important channel families. As one can see from this ﬁgure, in particular for channels with high capacity, the fraction of the capacity that is achieved by this simple decoder is close to 1, i.e., even this extremely simple decoder almost achieves capacity. We further show that, more generally, if we want to achieve a rate which is δ below capacity by δ > 0, then we need at most c log(1/δ) bits of precision (all the logarithms in this paper are in base 2).\nThe signiﬁcance of our observations goes beyond the pure computational complexity which is required. Typically, the main bottleneck in the implementation of large high speed coding systems is memory. Therefore, if one can ﬁnd de- coders which work with only a few bits per message then\nthis can make the difference whether a coding scheme is implementable or not.\nLet W : X → Y be a binary memoryless symmetric (BMS) channel, with input alphabet X = {0, 1}, output alphabet Y, and the transition probabilities {W (y | x) : x ∈ X , y ∈ Y}. Also, let I(W ) denote the capacity of W .\nLet G 2 = [ 1 0 1 1 ]. The generator matrix of polar codes is deﬁned through the Kronecker powers of G 2 , denoted by G N = G ⊗n 2 . Throughout the paper, the variables N and n are related as N = 2 n . Let us review very brieﬂy how the generator matrix of polar codes is constructed. Consider the N × N matrix G N and let us label the rows of the matrix G N from top to bottom by 0, 1, · · · , N − 1. Now assume that we desire to transmit binary data over the channel W at rate R < I(W ) with block-length N . One way to accomplish this is to choose a subset I ⊆ {0, · · · , N − 1} of size N R and to construct a vector U N −1 0 \t = (U 0 , · · · , U N −1 ) in a way that it contains our N R bits of data at positions in I and contains, at positions not in I, some ﬁxed value (for example 0) which is known to both the encoder and decoder. We then send the codeword X N −1 0 \t = U N −1 0 G N through the channel W . We refer to the set I as the set of chosen indices or information\nindices and the set I c is called the set of frozen indices. We explain in Section II-A how the good indices are chosen. At the decoder, the bits u 0 , · · · , u N −1 are decoded one by one. That is, the bit u i is decoded after u 0 , · · · u i−1 . If i is a frozen index, its value is known to the decoder. If not, the decoder estimates the value of u i by using the output y N −1 0 \t and the estimates of u 0 , · · · , u i−1 .\nLet R ∗ = R ∪ {±∞} and consider a function Q(x) : R ∗ → R ∗ that is anti-symmetric (i.e., Q(x) = −Q(−x)). We deﬁne the Q-quantized SC decoder as a version of the SC decoder in which the function Q is applied to the output of any computation that the SC decoder does. We denote such a decoder by SCD Q .\nTypically, the purpose of the function Q is to model the case where we only have ﬁnite precision in our computations perhaps due to limited available memory or due to other hardware limitations. Hence, the computations are correct within a certain level of accuracy which the function Q models. Thus, let us assume that the range of Q is a ﬁnite set Q with cardinality | Q | . As a result, all the messages passed through the decoder SCD Q belong to the set Q.\nIn this paper we consider a simple choice of the function Q that is speciﬁed by two parameters: The distance between levels ∆, and truncation threshold M . Given a speciﬁc choice of M and ∆, we deﬁne Q as follows:\n \nTheorem 1 (Main Statement): Consider transmission over a BMS channel W of capacity I(W ) using polar codes and a SCD Q with message alphabet Q. Let C(W, Q) denote the maximum rate at which reliable transmission is possible for this setup.\n(i) Let |Q| = 3. Then there exists a computable decreas- ing sequence {U n } n∈N (see (19)) and a computable increasing sequence {L n } n∈N (see (20)), so that L n ≤ C(W, Q) ≤ U n and\nIn other words, U n is an upper bound and L n is a lower bound on the maximum achievable rate C(W, Q) and for increasing n these two bounds converge to C(W, Q).\n(ii) To achieve an additive gap δ > 0 to capacity I(W ), it sufﬁces to choose log |Q| = c log(1/δ).\nDiscussion: In Figure 1 the value of C(W, Q), |Q| = 3, is plotted as a function of I(W ) for different channel families (for more details see Section II-D2). A universal lower bound for the maximum achievable rate is also given in Figure 1. This suggests that even for small values of |Q| polar codes are very robust to quantization. In particular for channels with capacity\nclose to 1, very little is lost by quantizing. The methods used here are extendable to other quantized decoders.\nThe rest of the paper is devoted to proving the ﬁrst part of Theorem 1. Due to space limitation, we have omitted the proof of the second part of theorem 1 as well as the proofs of the lemmas stated in the sequel and we refer the reader to [10] for more details.\nA. Equivalent tree channel model and analysis of the proba- bility of error for the original SC decoder\nSince we are dealing with a linear code, a symmetric chan- nel and symmetric decoders throughout this paper, without loss of generality we conﬁne ourselves to the all-zero codeword (i.e., we assume that all the u i \u2019s are equal to 0). In order to better visualize the decoding process, the following deﬁnition is handy.\nDeﬁnition 2 (Tree Channels of Height n): For each i ∈ {0, 1, · · · , N − 1}, we introduce the notion of the i-th tree channel of height n which is denoted by T (i). Let b 1 . . . b n be the n-bit binary expansion of i. E.g., we have for n = 3, 0 = 000, 1 = 001, . . . , 7 = 111. With a slight abuse of notation we use i and b 1 · · · b n interchangeably. Note that for our purpose it is slightly more convenient to denote the least (most) signiﬁcant bit as b n (b 1 ). Each tree channel consists of n + 1 levels, namely 0, . . . , n. It is a complete binary tree. The root is at level n. At level j we have 2 n−j nodes. For 1 ≤ j ≤ n, if b j = 0 then all nodes on level j are check nodes; if b j = 1 then all nodes on level j are variable nodes. Finally, we give a label for each node in the tree T (i): For each level j, we label the 2 n−j nodes at this level respectively from left to right by (j, 0), (j, 1), · · · , (j, 2 n−j − 1).\nAll nodes at level 0 correspond to independent observations of the output of the channel W , assuming that the input is 0.\nAn example for T (3) (that is n = 3, b = 011 and i = 3) is shown in Fig. 2.\nGiven the channel output vector y N −1 0 \t and assuming that the values of the bits prior to u i are given, i.e., u 0 = 0, · · · , u i−1 = 0, we now compute the probabilities p(y N −1 0 , u i−1 0 | u i = 0) and p(y N −1 0 , u i−1 0 | u i = 1) via a simple message passing procedure on the equivalent tree\nchannel T (i). We attach to each node in T (i) with label (j, k) a message 1 m j,k and we update the messages as we go up towards the root node. We start with initializing the messages at the leaf nodes of T (i). For this purpose, it is convenient to represent the channel in the log-likelihood domain; i.e., for the node with label (0, k) at the bottom of the tree which corresponds to an independent realization of W , we plug in the log-likelihood ratio (llr) log( W (y k | 0) W (y\n) as the initial message m 0,k . That is,\nW (y k | 1) ). \t (2) Next, the SC decoder recursively computes the messages\n(llr\u2019s) at each level via the following operations: If the nodes at level j are variable nodes (i.e., b j = 1), we have\nand if the nodes at level j are check nodes (i.e., b j = 0), the message that is passed up is\nm j,k = 2 tanh −1 (tanh( m j−1,2k 2\n) tanh( m j−1,2k+1 2\nIn this way, it can be shown that ([1]) the message that we obtain at the root node is precisely the value\np(y N −1 0 , u i−1 0 | u i = 0) p(y N −1 0 , u i−1 0 | u i = 1)\nNow, given (y N −1 0 , u i−1 0 ), the value of u i is estimated as follows. If m n,0 > 0 we let u i = 0. If m n,0 < 0 we let u i = 1. Finally, if m n,0 = 0 we choose the value of u i to be either 0 or 1 with probability 1 2 . Thus, denoting E i as the event that we make an error on the i-th bit within the above setting, we obtain\n2 Pr(m n,0 = 0). \t (6) Given the description of m n,0 in terms of a tree channel, it\nis now clear that we can use density evolution [2] to compute the probability density function of m n,0 . In this regard, at each level j, the random variables m j,k are i.i.d. for k ∈ {0, 1, · · · , 2 n−j − 1}. The distribution of the leaf messages m 0,k is the distribution of the variable log( W (Y | 0) W (Y | 1) ), where Y ∼ W (y | 0). One can recursively compute the distribution of m j,k in terms of the distribution of m j−1,2k , m j−1,2k+1 and the type of the nodes at level j (variable or check) by using the relations (3), (4) with the fact that the random variables m j−1,2k and m j−1,2k+1 are i.i.d.\nLet us now analyze the density evolution procedure for the quantized decoder. For each label (j, k) in T (i), let ˆ m j,k represent the messages at this label. The messages ˆ m j,k take their values in the discrete set Q (range of the function Q). It is now easy to see that for the decoder SCD Q the messages\nevolve via the following relations. At the leaf nodes of the tree we plug in the message ˆ m 0,k = Q(log( W (y k | 0) W (y\n)), and the update equation for ˆ m (j,k) is\n(8) if the node (j, k) is a check node. One can use the density evolution procedure to recursively obtain the densities of the messages ˆ m j,k .\nFinally, let ˆ E i denote the event that we make an error in decoding the i-th bit, with a further assumption that we have correctly decoded the previous bits u 0 , · · · , u i−1 . In a similar way as in the analysis of the original SC decoder, we get\nHence, one way to choose the information bits for the algo- rithm SCD Q is to choose the bits u i according to the least values of Pr( ˆ E i ).\nAn important point to note here is that with the decoder SCD Q , the distribution of the messages in the trees T (i) is different than the corresponding ones that result from the original SC decoder. Hence, the choice of the information indices is also speciﬁed by the choice of the function Q as well as the channel W .\nNote here that, since all of the densities takes their value in the ﬁnite alphabet Q, the construction of such polar codes can be efﬁciently done in time O( | Q | 2 N log N ). We refer the reader to [1] for more details.\nSince our aim is to show that polar codes under successive decoding are robust against quantization, let us investigate an extreme case. The perhaps simplest message-passing type decoder one can envision is the Gallager algorithm. It works with single-bit messages. Does this simple decoder have a non- zero threshold? Unfortunately it does not, and this is easy to see. We start with the equivalent tree-channel model. Consider an arbitrary tree-channel T (i). Since messages are only a single bit, the \u201cstate\u201d of the decoder at level j of T (i) can be described by a single non-negative number, namely the probability that the message at level j is incorrect. It is an easy exercise to show that at a level with check nodes the state becomes worse and at a level with variable nodes the state stays unchanged and hence no progress in the decoding is achieved, irrespective of the given tree. In other words, this decoder has a threshold of zero. The problem is the processing at the variable nodes since no progress is achieved there. But since we only have two possible incoming messages there is not much degree of freedom in the processing rules.\nMotivated by the previous example, let us now add one message to the alphabet of the Gallager decoder, i.e., we also add the possibility of having erasures. In this case Q(x) becomes the sign function 2 , i.e.,\n \n∞, x > 0, 0, x = 0,\nAs a result, all messages passed by the algorithm SCD Q take on only three possible values: {−∞, 0, ∞}. In this regard, the decoding procedure takes a very simple form. The algorithm starts by quantizing the channel output to one of the three values in the set Q = {−∞, 0, ∞}. At a check node we take the product of the signs of the incoming messages and at a variable node we have the natural addition rule (0 ← ∞ + −∞, 0 ← 0 + 0 and ∞ ← ∞ + ∞, ∞ ← ∞ + 0 and −∞ ← −∞ + −∞, −∞ ← −∞ + 0 ). Note that on the binary erasure channel, this algorithm is equivalent to the original SC decoder.\nOur objective is now to compute the maximum reliable rate that the decoder SCD Q can achieve for a BMS channel W . We denote this quantity by C(W, Q). The analysis is done in three steps:\n1) The density evolution procedure: To analyze the perfor- mance of this algorithm, ﬁrst note that since all our messages take their values in the set Q, then all the random variables that we consider have the following form\n \n∞, \t w.p. p, 0, \t w.p. e,\nHere, the numbers p, e, m are probability values and p + e + m = 1. Let us now see how the density evolves through the tree-channels. For this purpose, one should trace the output distribution of (7) and (8) when the input messages are two i.i.d. copies of a r.v. D with pdf as in (11).\nLemma 3: Given two i.i.d. versions of a r.v. D with distri- bution as in (11), the output of a variable node operation (7), denoted by D + , has the following form\n \n∞, \t w.p. p 2 + 2pe, 0, \t w.p. e 2 + 2pm, −∞, w.p. m 2 + 2em.\n \n∞, \t w.p. p 2 + m 2 , 0, w.p. 1 − (1 − e) 2 ,\nIn order to compute the distribution of the messages ˆ m n,0 at a given level n, we use the method of [1] and deﬁne the polarization process D n as follows. Consider the random variable L(Y ) = log( W (Y | 0) W (Y | 1) ), where Y ∼ W (y | 0). The\nstochastic process D n starts from the r.v. D 0 = Q(L(Y )) deﬁned as\n \n∞, \t w.p. p = Pr(L(Y ) > 0), 0, \t w.p. e = Pr(L(Y ) = 0), −∞, w.p. m = Pr(L(Y ) < 0),\nD − n , w.p. 1 2 , \t (15) where the plus and minus operations are given in (12), (13).\n2) Analysis of the process D n : Note that the output of process D n is itself a random variable of the form given in (11). Hence, we can equivalently represent the process D n with a triple (m n , e n , p n ), where the coupled processes m n , e n and p n are evolved using the relations (12) and (13) and we always have m n + e n + p n = 1. Following along the same lines as the analysis of the original SC decoder in [1], we ﬁrst claim that as n grows large, the process D n will become polarized, i.e., the output of the process D n will almost surely be a completely noiseless or a completely erasure channel.\nLemma 4: The random sequence {D n = (p n , e n , m n ), n ≥ 0} converges almost surely to a random variable D ∞ such that D ∞ takes its value in the set {(1, 0, 0), (0, 1, 0)}.\nWe now aim to compute the value of C(W, Q) = Pr(D ∞ = (1, 0, 0)), i.e., the highest rate that we can achieve with the 1-Bit Decoder with Erasures. In this regard, a convenient approach is to ﬁnd a function f : D → R such that f ((0, 1, 0)) = 0 and f (1, 0, 0) = 1 and for any D ∈ D\nWith such a function f , the process {f (D n )} n≥0 is a martin- gale and consequently we have Pr(D ∞ = (1, 0, 0)) = f (D 0 ). Therefore, by computing the deterministic quantity f (D 0 ) we obtain the value of C(W, Q). However, ﬁnding a closed form for such a function seems to be a difﬁcult task 3 . Instead, the idea is to look for alternative functions, denoted by g : D → R, such that the process g(D n ) is a super-martingale (sub- martingale) and hence we can get a sequence of upper (lower) bounds on the value of Pr(D ∞ = (1, 0, 0)) as follows. Assume we have a function g : D → R such that g((0, 1, 0)) = 0 and g(1, 0, 0) = 1 and for any D ∈ D,\n1 2\nThen, the process {g(D n )} n≥0 is a super-martingale and for n ≥ 0 we have\nThe quantity E[g(D n )] decreases by n and by using Lemma 4 we have\nIn a similar way, on can search for a function h : D → R such that for h with the same properties as g except that the inequality (16) holds in opposite direction and in a similar way this leads us to computable lower bounds on C(W, Q). It remain to ﬁnd some suitable candidates for g and h. Let us ﬁrst note that a density D as in (11) can be equivalently represented as a simple BMS channel given in Fig. 3. This equivalence\nstems from the fact that for such a channel, conditioned on the event that the symbol +1 has been sent, the distribution of the output is precisely D. With a slight abuse of notation, we also denote the corresponding BMS channel by D. In particular, it is an easy exercise to show that the capacity (I(D)), the Bhattacharyya parameter (Z(D)) and the error probability (E(D)) of the density D are given as\nZ(D) = 2 √ mp + e, E(D) = 1 − p − e 2\nwhere h 2 (·) denotes the binary entropy function. Since the function Q is a not an injective function, we have\n≤ I(D). This implies that the process I n = I(D n ) is a bounded supermartingale. Furthermore, since I(D = (1, 0, 0)) = 1 and I(D = (0, 1, 0)) = 0, we deduce from Lemma 4 that I n converges a.s. to a 0 − 1 valued r.v. I ∞ and hence\nfor n ∈ N. In a similar way, one can obtain a sequence of lower bounds for C(W, Q).\nLemma 5: Deﬁne the function F (D) as F (D) = p−4 √ pm for D ∈ D. We have F (D = (1, 0, 0)) = 1, F (D = (0, 1, 0)) = 0 and F (D + )+F (D − ) 2 \t ≥ F (D).\nHence, the process F n = F (D n ) is a submartingale and for n ∈ N we have\nGiven a BMS channel W , one can numerically compute C(W, Q) with arbitrary accuracy using the sequences L n and U n (see Figure 1). Also, for a channel W with capacity I(W ) and error probability E(W ), we have\nExample 6: Let the channel W be a BSC channel with cross over probability = 0.11 (hence I(W ) ≈ 0.5). Using (22) we obtain\nTherefore, we get L 0 = F (D 0 ) = −0.361 and U 0 = I(D 0 ) = 0.5. We can also compute L 1 = F (D + 0 )+F (D − 0 ) 2 \t = −0.191,\nContinuing this way, one can ﬁnd L 10 = 0.264, U 10 = 0.474 and L 20 = 0.398, U 20 = 0.465 and so on. \t ♦\n3) Scaling behavior and error exponent: In the last step, we need to show that for rates below C(W, Q) the block-error probability decays to 0 for large block-lengths.\nHence, for transmission rate R < C(W, Q) and block-length N = 2 n , the probability of error of SCD Q , denoted by P e,Q (N, R) satisﬁes P e,Q (N, R) = o(2 −N β ) for β < log 3 2 2 .\nThe authors wish to thank anonymous reviewers for their valuable comments on an earlier version of this manuscript. The work of Hamed Hassani was supported by Swiss National Science Foundation Grant no 200021-121903."},"refs":[{"authors":[{"name":"E. Arıkan"}],"title":{"text":"Channel polarization: A method for constructing capacity- achieving codes for symmetric binary-input memoryless channels"}},{"authors":[{"name":"R. Mori"},{"name":"T. Tanaka"}],"title":{"text":"Performance and construction of polar codes on symmetric binary-input memoryless channels"}},{"authors":[{"name":"I. Tal"},{"name":"A. Vardy"}],"title":{"text":"How to construct polar codes"}},{"authors":[{"name":"C. Leroux"},{"name":"I. Tal"},{"name":"A. Vardy"},{"name":"W. J. Gross"}],"title":{"text":"Hardware architectures for successive cancellation decoding of polar codes"}},{"authors":[{"name":"R. Pedarsani"},{"name":"S. H. Hassani"},{"name":"I. Tal"},{"name":"E. Telatar"}],"title":{"text":"On the construction of polar codes"}},{"authors":[{"name":"I. Tal"},{"name":"A. Vardy"}],"title":{"text":"List decoding of polar codes"}},{"authors":[{"name":"S. B. Korada"},{"name":"A. Montanari"},{"name":"E. Telatar"},{"name":"R. Urbanke"}],"title":{"text":"An empirical scaling law for polar codes"}},{"authors":[{"name":"S. H. Hassani"},{"name":"K. Alishahi"},{"name":"R. Urbanke"}],"title":{"text":"On the scaling of polar codes: II. The behavior of un-polarized channels"}},{"authors":[{"name":"S. H. Hassani"},{"name":"S. B. Korada"},{"name":"R. Urbanke"}],"title":{"text":"The compound capacity of polar codes"}},{"authors":[{"name":"S. H. Hassani"},{"name":"R. Urbanke"}],"title":{"text":"Polar Codes: Robustness of the Succes- sive Cancellation Decoder with Respect to Quantization"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566727.pdf"},"links":[{"id":"1569566567","weight":6},{"id":"1569564843","weight":10},{"id":"1569566381","weight":3},{"id":"1569566527","weight":6},{"id":"1569566485","weight":16},{"id":"1569565383","weight":7},{"id":"1569565883","weight":33},{"id":"1569564889","weight":6},{"id":"1569565223","weight":3},{"id":"1569566725","weight":15},{"id":"1569565663","weight":5},{"id":"1569565377","weight":6},{"id":"1569566385","weight":12},{"id":"1569567049","weight":2},{"id":"1569564635","weight":9},{"id":"1569565867","weight":7},{"id":"1569566799","weight":5},{"id":"1569565067","weight":8},{"id":"1569559665","weight":7},{"id":"1569561021","weight":5},{"id":"1569564669","weight":9},{"id":"1569565691","weight":7},{"id":"1569566815","weight":2},{"id":"1569566875","weight":7},{"id":"1569564605","weight":6},{"id":"1569559617","weight":5},{"id":"1569566981","weight":4},{"id":"1569566433","weight":4},{"id":"1569566321","weight":7},{"id":"1569566605","weight":15},{"id":"1569565489","weight":6},{"id":"1569566683","weight":11},{"id":"1569566855","weight":10},{"id":"1569560629","weight":5},{"id":"1569566869","weight":7},{"id":"1569565097","weight":8},{"id":"1569566227","weight":9},{"id":"1569566091","weight":9},{"id":"1569559259","weight":10},{"id":"1569566697","weight":8},{"id":"1569566597","weight":12},{"id":"1569565551","weight":17},{"id":"1569565711","weight":9},{"id":"1569566761","weight":8},{"id":"1569566943","weight":14},{"id":"1569565091","weight":17},{"id":"1569566591","weight":10},{"id":"1569556029","weight":3},{"id":"1569566571","weight":16},{"id":"1569552245","weight":11},{"id":"1569565607","weight":4},{"id":"1569559889","weight":2},{"id":"1569565495","weight":4},{"id":"1569559967","weight":7},{"id":"1569567045","weight":15},{"id":"1569565227","weight":3},{"id":"1569564481","weight":12},{"id":"1569560833","weight":11},{"id":"1569566415","weight":16},{"id":"1569564805","weight":12},{"id":"1569567005","weight":13},{"id":"1569566469","weight":6},{"id":"1569566081","weight":23},{"id":"1569565613","weight":2},{"id":"1569565355","weight":12},{"id":"1569564469","weight":4},{"id":"1569565931","weight":13},{"id":"1569566373","weight":6},{"id":"1569566647","weight":5},{"id":"1569551535","weight":18},{"id":"1569566765","weight":15},{"id":"1569564897","weight":4},{"id":"1569565775","weight":7},{"id":"1569565547","weight":7},{"id":"1569566871","weight":13},{"id":"1569566653","weight":2},{"id":"1569565461","weight":9},{"id":"1569564245","weight":5},{"id":"1569564731","weight":9},{"id":"1569565171","weight":8},{"id":"1569566207","weight":9},{"id":"1569564227","weight":10},{"id":"1569558325","weight":8},{"id":"1569565837","weight":4},{"id":"1569566671","weight":10},{"id":"1569566303","weight":16},{"id":"1569566119","weight":3},{"id":"1569564233","weight":9},{"id":"1569566459","weight":10},{"id":"1569567535","weight":5},{"id":"1569563411","weight":11},{"id":"1569560427","weight":6},{"id":"1569564401","weight":5},{"id":"1569564849","weight":8},{"id":"1569559541","weight":8},{"id":"1569565317","weight":7},{"id":"1569566363","weight":9},{"id":"1569566319","weight":4},{"id":"1569565123","weight":5},{"id":"1569566941","weight":10},{"id":"1569566033","weight":9},{"id":"1569566739","weight":5},{"id":"1569555811","weight":6},{"id":"1569558459","weight":5},{"id":"1569565609","weight":8},{"id":"1569565291","weight":12},{"id":"1569564203","weight":18},{"id":"1569566821","weight":10},{"id":"1569556713","weight":11},{"id":"1569562685","weight":8},{"id":"1569566751","weight":4},{"id":"1569566467","weight":9},{"id":"1569565771","weight":6},{"id":"1569566157","weight":6},{"id":"1569560613","weight":4},{"id":"1569566903","weight":7},{"id":"1569566999","weight":6},{"id":"1569565859","weight":7},{"id":"1569564249","weight":5},{"id":"1569565809","weight":10},{"id":"1569566843","weight":6},{"id":"1569566579","weight":3},{"id":"1569558483","weight":7},{"id":"1569566563","weight":14},{"id":"1569566089","weight":7},{"id":"1569566173","weight":5},{"id":"1569559221","weight":5},{"id":"1569556091","weight":5},{"id":"1569565347","weight":11},{"id":"1569566925","weight":7},{"id":"1569564387","weight":6},{"id":"1569565455","weight":9},{"id":"1569566497","weight":24},{"id":"1569566795","weight":5},{"id":"1569566963","weight":12},{"id":"1569561679","weight":6},{"id":"1569566709","weight":14},{"id":"1569564989","weight":8},{"id":"1569566787","weight":3},{"id":"1569566717","weight":5},{"id":"1569560721","weight":3},{"id":"1569566015","weight":15},{"id":"1569566523","weight":4},{"id":"1569565897","weight":6},{"id":"1569551763","weight":11},{"id":"1569565953","weight":13},{"id":"1569566895","weight":12},{"id":"1569566889","weight":5},{"id":"1569565709","weight":3},{"id":"1569566749","weight":7},{"id":"1569566269","weight":11},{"id":"1569564189","weight":15},{"id":"1569564195","weight":7},{"id":"1569561513","weight":12},{"id":"1569566985","weight":8},{"id":"1569564613","weight":10},{"id":"1569565369","weight":4},{"id":"1569567009","weight":9},{"id":"1569566865","weight":6},{"id":"1569565321","weight":9},{"id":"1569558785","weight":5},{"id":"1569564647","weight":4},{"id":"1569566095","weight":8},{"id":"1569566193","weight":9},{"id":"1569564271","weight":5},{"id":"1569564337","weight":2},{"id":"1569565907","weight":8},{"id":"1569566343","weight":5},{"id":"1569564311","weight":8},{"id":"1569565803","weight":6},{"id":"1569565785","weight":10},{"id":"1569566239","weight":9},{"id":"1569566167","weight":3},{"id":"1569566679","weight":13},{"id":"1569565989","weight":11},{"id":"1569566575","weight":17},{"id":"1569563981","weight":15},{"id":"1569561085","weight":8},{"id":"1569566419","weight":3},{"id":"1569566617","weight":9},{"id":"1569559565","weight":15},{"id":"1569566905","weight":17},{"id":"1569566733","weight":4},{"id":"1569566753","weight":3},{"id":"1569566311","weight":6},{"id":"1569563307","weight":41},{"id":"1569566063","weight":12},{"id":"1569558681","weight":9},{"id":"1569555999","weight":8},{"id":"1569566759","weight":10},{"id":"1569565589","weight":4},{"id":"1569559195","weight":4},{"id":"1569566149","weight":10},{"id":"1569559995","weight":3},{"id":"1569566657","weight":14},{"id":"1569558859","weight":10},{"id":"1569565199","weight":15},{"id":"1569565213","weight":6},{"id":"1569565365","weight":7},{"id":"1569566643","weight":7},{"id":"1569566511","weight":10},{"id":"1569566719","weight":8},{"id":"1569566991","weight":2},{"id":"1569565841","weight":7},{"id":"1569566369","weight":7},{"id":"1569566531","weight":11},{"id":"1569567665","weight":18},{"id":"1569561143","weight":12},{"id":"1569566581","weight":39},{"id":"1569565833","weight":15},{"id":"1569566489","weight":6},{"id":"1569564611","weight":8},{"id":"1569565535","weight":9},{"id":"1569562867","weight":20},{"id":"1569566395","weight":24},{"id":"1569565667","weight":6},{"id":"1569561795","weight":5},{"id":"1569566845","weight":5},{"id":"1569566325","weight":21},{"id":"1569566423","weight":7},{"id":"1569565257","weight":2},{"id":"1569564795","weight":11},{"id":"1569567015","weight":11},{"id":"1569559805","weight":23},{"id":"1569566437","weight":12},{"id":"1569566811","weight":7},{"id":"1569566851","weight":5},{"id":"1569558901","weight":5},{"id":"1569565735","weight":10},{"id":"1569553909","weight":6},{"id":"1569559111","weight":32},{"id":"1569566687","weight":6},{"id":"1569562285","weight":2},{"id":"1569564881","weight":3},{"id":"1569566939","weight":7},{"id":"1569553537","weight":14},{"id":"1569565427","weight":10},{"id":"1569566403","weight":8},{"id":"1569565839","weight":4},{"id":"1569565915","weight":6},{"id":"1569552251","weight":9},{"id":"1569566139","weight":5},{"id":"1569553519","weight":7},{"id":"1569567051","weight":9},{"id":"1569566885","weight":8},{"id":"1569564441","weight":12},{"id":"1569566231","weight":6},{"id":"1569564209","weight":4},{"id":"1569554689","weight":2},{"id":"1569566513","weight":8},{"id":"1569566425","weight":10},{"id":"1569554881","weight":10},{"id":"1569554971","weight":10},{"id":"1569565501","weight":12},{"id":"1569566899","weight":5},{"id":"1569566445","weight":5},{"id":"1569566209","weight":8},{"id":"1569562821","weight":4},{"id":"1569566649","weight":5},{"id":"1569566791","weight":5},{"id":"1569565559","weight":6},{"id":"1569566371","weight":4},{"id":"1569565655","weight":17},{"id":"1569566909","weight":7},{"id":"1569566127","weight":7},{"id":"1569565151","weight":9},{"id":"1569558985","weight":11},{"id":"1569563763","weight":14},{"id":"1569565087","weight":2},{"id":"1569566473","weight":19},{"id":"1569564857","weight":14},{"id":"1569564333","weight":3},{"id":"1569566913","weight":15},{"id":"1569566809","weight":21},{"id":"1569566629","weight":8},{"id":"1569566257","weight":11},{"id":"1569565033","weight":24},{"id":"1569566447","weight":10},{"id":"1569566357","weight":5},{"id":"1569565817","weight":7},{"id":"1569565847","weight":13},{"id":"1569564353","weight":11},{"id":"1569563897","weight":8},{"id":"1569557083","weight":4},{"id":"1569565887","weight":14},{"id":"1569565929","weight":5},{"id":"1569566141","weight":9},{"id":"1569553591","weight":3},{"id":"1569566721","weight":2},{"id":"1569565055","weight":3},{"id":"1569564677","weight":4},{"id":"1569563231","weight":9},{"id":"1569565633","weight":8},{"id":"1569566661","weight":5},{"id":"1569565279","weight":5},{"id":"1569555879","weight":17},{"id":"1569565521","weight":2},{"id":"1569566115","weight":8},{"id":"1569565219","weight":7},{"id":"1569558509","weight":8},{"id":"1569554759","weight":19},{"id":"1569564851","weight":2},{"id":"1569565595","weight":8},{"id":"1569565185","weight":12},{"id":"1569556671","weight":3},{"id":"1569566773","weight":10},{"id":"1569566037","weight":5},{"id":"1569564985","weight":4},{"id":"1569565095","weight":3},{"id":"1569566223","weight":13},{"id":"1569558401","weight":8},{"id":"1569566553","weight":14},{"id":"1569564973","weight":5},{"id":"1569564969","weight":17},{"id":"1569566593","weight":4},{"id":"1569566043","weight":3},{"id":"1569565029","weight":21},{"id":"1569565357","weight":4},{"id":"1569561245","weight":8},{"id":"1569566505","weight":26},{"id":"1569565393","weight":6},{"id":"1569565933","weight":10},{"id":"1569562207","weight":19},{"id":"1569565705","weight":6},{"id":"1569566191","weight":7},{"id":"1569567033","weight":19},{"id":"1569565527","weight":15},{"id":"1569566853","weight":6},{"id":"1569566603","weight":6},{"id":"1569567029","weight":3},{"id":"1569565363","weight":5},{"id":"1569566159","weight":8},{"id":"1569566695","weight":8},{"id":"1569566051","weight":15},{"id":"1569561379","weight":8},{"id":"1569565909","weight":4},{"id":"1569561123","weight":12},{"id":"1569555787","weight":2},{"id":"1569565467","weight":4},{"id":"1569566655","weight":6},{"id":"1569566673","weight":11},{"id":"1569567235","weight":6},{"id":"1569565441","weight":3},{"id":"1569565739","weight":4},{"id":"1569565311","weight":6},{"id":"1569566233","weight":10},{"id":"1569566667","weight":4},{"id":"1569566297","weight":5},{"id":"1569566893","weight":12},{"id":"1569566317","weight":11},{"id":"1569564097","weight":2},{"id":"1569560997","weight":11},{"id":"1569563845","weight":10},{"id":"1569566407","weight":9},{"id":"1569560349","weight":10},{"id":"1569566501","weight":15},{"id":"1569565741","weight":13},{"id":"1569566275","weight":11},{"id":"1569566481","weight":20},{"id":"1569565545","weight":9},{"id":"1569566857","weight":9},{"id":"1569565961","weight":6},{"id":"1569566387","weight":4},{"id":"1569566245","weight":23},{"id":"1569560503","weight":10},{"id":"1569565463","weight":11},{"id":"1569564339","weight":3},{"id":"1569566219","weight":8},{"id":"1569565439","weight":8},{"id":"1569566229","weight":12},{"id":"1569566949","weight":3},{"id":"1569566133","weight":4},{"id":"1569562551","weight":7},{"id":"1569566155","weight":2},{"id":"1569563395","weight":7},{"id":"1569566901","weight":5},{"id":"1569551347","weight":10},{"id":"1569565415","weight":13},{"id":"1569555367","weight":5},{"id":"1569561623","weight":5},{"id":"1569566383","weight":3},{"id":"1569564485","weight":13},{"id":"1569565155","weight":3},{"id":"1569566631","weight":10},{"id":"1569565571","weight":8},{"id":"1569565885","weight":8},{"id":"1569566177","weight":8},{"id":"1569565493","weight":10},{"id":"1569557633","weight":7},{"id":"1569564411","weight":6},{"id":"1569566805","weight":13},{"id":"1569559199","weight":5},{"id":"1569566929","weight":3},{"id":"1569566293","weight":25},{"id":"1569565665","weight":6},{"id":"1569566831","weight":7},{"id":"1569565549","weight":8},{"id":"1569565523","weight":8},{"id":"1569565611","weight":10},{"id":"1569557715","weight":7},{"id":"1569564175","weight":5},{"id":"1569566983","weight":15},{"id":"1569566779","weight":5},{"id":"1569566097","weight":11},{"id":"1569566479","weight":16},{"id":"1569556361","weight":3},{"id":"1569566431","weight":4},{"id":"1569565397","weight":6},{"id":"1569566873","weight":7},{"id":"1569565765","weight":27},{"id":"1569565925","weight":10},{"id":"1569565435","weight":6},{"id":"1569557275","weight":11},{"id":"1569565263","weight":5},{"id":"1569566129","weight":4},{"id":"1569566261","weight":2},{"id":"1569565215","weight":19},{"id":"1569565093","weight":6},{"id":"1569565385","weight":7},{"id":"1569565575","weight":6},{"id":"1569565919","weight":17},{"id":"1569565181","weight":7},{"id":"1569566711","weight":25},{"id":"1569565241","weight":5},{"id":"1569566927","weight":19},{"id":"1569565661","weight":11},{"id":"1569565865","weight":12},{"id":"1569566887","weight":10},{"id":"1569565273","weight":8},{"id":"1569565319","weight":2},{"id":"1569566267","weight":6},{"id":"1569564131","weight":11},{"id":"1569552037","weight":4},{"id":"1569564919","weight":12},{"id":"1569565511","weight":12},{"id":"1569566737","weight":46},{"id":"1569566429","weight":5},{"id":"1569561221","weight":6},{"id":"1569564595","weight":4},{"id":"1569566917","weight":19},{"id":"1569566035","weight":10},{"id":"1569566253","weight":3},{"id":"1569565353","weight":15},{"id":"1569564683","weight":12},{"id":"1569564305","weight":41},{"id":"1569564283","weight":6},{"id":"1569564291","weight":5},{"id":"1569566691","weight":9},{"id":"1569565421","weight":13},{"id":"1569566547","weight":14},{"id":"1569566651","weight":8},{"id":"1569565177","weight":6},{"id":"1569566823","weight":7},{"id":"1569566595","weight":2},{"id":"1569566677","weight":5},{"id":"1569565349","weight":11},{"id":"1569552025","weight":11},{"id":"1569566137","weight":18},{"id":"1569565013","weight":5},{"id":"1569565829","weight":6},{"id":"1569566237","weight":2},{"id":"1569566283","weight":6},{"id":"1569565645","weight":3},{"id":"1569566529","weight":8},{"id":"1569565375","weight":6},{"id":"1569566715","weight":5},{"id":"1569565237","weight":21},{"id":"1569566639","weight":4},{"id":"1569566819","weight":10},{"id":"1569565041","weight":4},{"id":"1569564703","weight":7},{"id":"1569566713","weight":6},{"id":"1569565541","weight":4},{"id":"1569565597","weight":3},{"id":"1569566813","weight":10},{"id":"1569565293","weight":3},{"id":"1569566771","weight":8},{"id":"1569564649","weight":5},{"id":"1569564201","weight":5},{"id":"1569562277","weight":7},{"id":"1569566641","weight":6},{"id":"1569565425","weight":5},{"id":"1569559035","weight":2},{"id":"1569564247","weight":8},{"id":"1569564437","weight":20},{"id":"1569566533","weight":13},{"id":"1569563975","weight":3},{"id":"1569551905","weight":6},{"id":"1569564861","weight":12},{"id":"1569565457","weight":5},{"id":"1569564787","weight":6},{"id":"1569566487","weight":13},{"id":"1569565529","weight":19},{"id":"1569556759","weight":15},{"id":"1569566619","weight":7},{"id":"1569565271","weight":8},{"id":"1569561185","weight":10},{"id":"1569566075","weight":5},{"id":"1569566397","weight":12},{"id":"1569566301","weight":8},{"id":"1569558779","weight":13},{"id":"1569565669","weight":3},{"id":"1569565233","weight":5},{"id":"1569563721","weight":5},{"id":"1569566001","weight":3},{"id":"1569565593","weight":9},{"id":"1569560235","weight":7},{"id":"1569566817","weight":7},{"id":"1569564157","weight":3},{"id":"1569565729","weight":3},{"id":"1569566389","weight":5},{"id":"1569566435","weight":4},{"id":"1569567483","weight":8},{"id":"1569566911","weight":8},{"id":"1569564923","weight":11},{"id":"1569565367","weight":5},{"id":"1569566299","weight":17},{"id":"1569564281","weight":6},{"id":"1569565039","weight":3},{"id":"1569564769","weight":11},{"id":"1569565769","weight":11},{"id":"1569566171","weight":4},{"id":"1569566601","weight":7},{"id":"1569565805","weight":12},{"id":"1569561713","weight":4},{"id":"1569566933","weight":6},{"id":"1569563919","weight":13},{"id":"1569566577","weight":12},{"id":"1569557851","weight":11},{"id":"1569565389","weight":6},{"id":"1569559919","weight":9},{"id":"1569565861","weight":7},{"id":"1569566147","weight":13},{"id":"1569565537","weight":14},{"id":"1569559523","weight":3},{"id":"1569566057","weight":4},{"id":"1569562367","weight":8},{"id":"1569560785","weight":11},{"id":"1569565561","weight":11},{"id":"1569565631","weight":5},{"id":"1569560213","weight":4},{"id":"1569566457","weight":2},{"id":"1569555891","weight":5},{"id":"1569566847","weight":3},{"id":"1569565997","weight":15},{"id":"1569563425","weight":12},{"id":"1569565035","weight":23},{"id":"1569559597","weight":5},{"id":"1569564961","weight":13},{"id":"1569559251","weight":8},{"id":"1569565089","weight":2},{"id":"1569567013","weight":7},{"id":"1569566583","weight":8},{"id":"1569561861","weight":10},{"id":"1569565337","weight":7},{"id":"1569564253","weight":3},{"id":"1569565737","weight":8},{"id":"1569560459","weight":9},{"id":"1569564463","weight":10},{"id":"1569565853","weight":20},{"id":"1569550425","weight":17},{"id":"1569566273","weight":6},{"id":"1569564123","weight":19},{"id":"1569566341","weight":5},{"id":"1569565889","weight":10},{"id":"1569566635","weight":7},{"id":"1569566611","weight":8},{"id":"1569551539","weight":7},{"id":"1569564505","weight":6},{"id":"1569565165","weight":8},{"id":"1569565565","weight":12},{"id":"1569565635","weight":10},{"id":"1569561397","weight":5},{"id":"1569565731","weight":9},{"id":"1569556327","weight":3},{"id":"1569566797","weight":18},{"id":"1569566125","weight":2},{"id":"1569566413","weight":9},{"id":"1569565707","weight":11},{"id":"1569565113","weight":6},{"id":"1569566375","weight":11},{"id":"1569565143","weight":32},{"id":"1569564257","weight":10},{"id":"1569565583","weight":13},{"id":"1569566555","weight":8},{"id":"1569564931","weight":5},{"id":"1569565373","weight":11},{"id":"1569564141","weight":3},{"id":"1569566973","weight":8},{"id":"1569561579","weight":13},{"id":"1569566449","weight":5},{"id":"1569566987","weight":7},{"id":"1569565031","weight":7},{"id":"1569564755","weight":5},{"id":"1569551541","weight":12},{"id":"1569565619","weight":3},{"id":"1569566839","weight":8},{"id":"1569551751","weight":11},{"id":"1569558697","weight":10},{"id":"1569565139","weight":14},{"id":"1569565895","weight":3},{"id":"1569566663","weight":11},{"id":"1569564419","weight":6},{"id":"1569565579","weight":6},{"id":"1569566067","weight":11},{"id":"1569566825","weight":19},{"id":"1569566615","weight":6},{"id":"1569566241","weight":11},{"id":"1569564807","weight":5},{"id":"1569566609","weight":3},{"id":"1569563007","weight":14},{"id":"1569566113","weight":16},{"id":"1569566443","weight":8},{"id":"1569565315","weight":8},{"id":"1569565515","weight":2},{"id":"1569566417","weight":6},{"id":"1569560581","weight":10},{"id":"1569559233","weight":8}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S11.T5.2","endtime":"10:30","authors":"S. Hamed Hassani, Ruediger L Urbanke","date":"1341483000000","papertitle":"Polar Codes: Robustness of the Successive Cancellation Decoder with Respect to Quantization","starttime":"10:10","session":"S11.T5: Polar Codes:  Theory and Practice","room":"Kresge Little Theatre (035)","paperid":"1569566727"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"27","spectral28":"18","spectral32":"9","spectral14":"13","spectral20":"14","spectral9":"1","spectral25":"19","spectral42":"33","spectral3":"1","spectral47":"2","spectral17":"2","louvain":"405","spectral36":"19","spectral39":"10","spectral10":"6","spectral15":"8","spectral33":"1","spectral5":"4","spectral21":"10","spectral44":"13","spectral26":"2","spectral40":"35","spectral8":"2","spectral11":"1","spectral4":"3","spectral37":"4","spectral48":"19","spectral22":"4","spectral23":"19","spectral12":"5","spectral50":"45","spectral19":"13","spectral34":"17","spectral45":"10","spectral7":"6","spectral49":"41","spectral38":"0","spectral24":"22","spectral13":"1","spectral31":"9","spectral29":"16","spectral35":"5","spectral30":"25","spectral41":"35","spectral27":"24","spectral18":"5","spectral46":"31","spectral2":"0","spectral16":"5"}}

{"id":"1569566683","paper":{"title":{"text":"An Algebraic Framework for Concatenated Linear Block Codes in Side Information Based Problems"},"authors":[{"name":"Felipe Cinelli Barbosa ∗"},{"name":"J¨org Kliewer \u2020"},{"name":"Max H. M. Costa ∗"}],"abstr":{"text":"Abstract\u2014This work provides an algebraic framework for source coding with decoder side information and its dual prob- lem, channel coding with encoder side information, showing that nested concatenated codes can achieve the corresponding rate-distortion and capacity-noise bounds. We show that code concatenation preserves the nested properties of codes and that only one of the concatenated codes needs to be nested, which opens up a wide range of possible new code combinations for these side information based problems. In particular, the practically important binary version of these problems can be addressed by concatenating binary inner and non-binary outer linear codes. By observing that list decoding with folded Reed- Solomon codes is asymptotically optimal for encoding IID q-ary sources and that in concatenation with inner binary codes it can asymptotically achieve the rate-distortion bound for a Bernoulli symmetric source, we illustrate our ﬁndings with a new algebraic construction which comprises concatenated nested cyclic codes and binary linear block codes."},"body":{"text":"Two traditional problems in the ﬁeld of communications are the Wyner-Ziv coding problem [1] and its dual version, the Gel\u2019fand-Pinsker problem [2], [3]. The ﬁrst is an instance of distributed source coding: one source is encoded by taking ad- vantage of the fact that the decoder receives another correlated source as side information. In contrast, the Gel\u2019fand-Pinsker problem is a channel coding problem in which a channel encoder embeds messages by using available channel state information as side information [3]. We will refer to these problems also as source coding with decoder side information (SCSI) for the Wyner-Ziv case, and as channel coding with encoder side information (CCSI) for the Gel\u2019fand-Pinsker problem in the following, respectively.\nThe duality of these problems has been studied in [4] for the Gaussian case, where the authors also analyze how this relationship can be exploited to design dual coset codes. While nested lattice based coset coding schemes for these problems have been proposed for continuous-input (Gaussian) channels [5], in the following we focus on the binary version of these problems, as this is beneﬁcial in many applications which cope with binary data and communication channels, as for example in digital watermarking for the case of CCSI and in distributed video coding for SCSI.\nIn [6] superposition coding was proposed for the binary CCSI case for which random codes and maximum-likelihood (ML) decoding is able to achieve capacity. Differently from superposition coding, nested codes have been used for the bi- nary SCSI case, and a technique based on nested parity check codes has been proposed in [7] which asymptotically achieves the rate-distortion bound for a Bernoulli symmetric source. Recently, in [8] the authors present compound LDPC/LDGM constructions for both problems which asymptotically achieve capacity for the CCSI problem and the rate distortion bound for the SCSI problem with bounded graphical complexity under ML decoding. They show that these compound codes essentially have a joint source-channel coding interpretation. Further, polar codes have been shown to be asymptotically optimal for both problems with bounded decoding complexity [9]. However, their performance for practical block lengths is worse than for other codes of the same length [10]. Finally, other coding schemes for both SCSI and CCSI based on com- mon modulation and coding schemes, as trellis coded quanti- zation/modulation and turbo codes have been presented (see, e.g., [6], [11], [12]).\nThe novel contribution of this paper is an algebraic frame- work which extends the above results for the binary SCSI and CCSI cases to concatenated nested linear block codes. In par- ticular, we show that by concatenating two linear block codes new binary constructions can be obtained which preserve the nested structure either of the outer or of the inner code. This opens up a wide range of possible new code combinations and indicates that code concatenation can alleviate the search for both practical and optimal constructions. We analyze code concatenations for q m -ary outer codes and q-ary inner codes as a binary inner code can be simply obtained by q = 2.\nRecent work by Guruswami and Rudra [13] gives an explicit construction of folded RS (FRS) codes that can achieve list decoding capacity. We show this result implies that if RS codes are used as source codes, the rate-distortion bound is achieved for IID q-ary sources. Together with the fact that concatenated binary codes using outer FRS codes can achieve list decoding capacity for concatenated codes [13], it motivates the use of nested RS codes as outer codes in combination with list decoding for both SCSI and CCSI problems. Finally, based on our ﬁndings we exemplarily present an algebraic concatenated nested coding scheme that asymptotically achieves the rate- distortion and capacity-rate bounds with low encoding and\nThese codes were ﬁrst proposed in [14] under the name of partitioned cyclic codes and can be generally deﬁned as follows.\nDeﬁnition 1 (Nested Linear Block Code). A nested linear block code C is deﬁned such that (i) C ⊂ F N 2 , (ii) C = C 1 + C 2 , (iii) C 1 ∩ C 2 = {0}, where C 1 and C 2 are subcodes.\nIt has been shown in [5], [6], [8] that nested codes are able to achieve the rate-distortion bound for the SCSI problem and symmetric Bernoulli sources and the capacity-noise bound for the CCSI problem and binary symmetric channels (BSCs) as communication channels, respectively. In the following, we revise these results and the use of nested linear block codes in these problems, where we focus on the binary case.\nFor this problem, we consider a BSC with noise vector Z ∼ Bern(p) (BSC(p)) and interference S, representing the channel state, which is uniformly distributed over F N 2 and known a priori at the encoder. The channel output is given by\nwhere E is the transmitted codeword under the input constraint 1\nFor encoding, we assume that without loss of generality subcode C 1 carries the information which is transmitted in K 1 dimensions of the N -dimensional vector space F N 2 . If K = dim( C) according to property (ii) in Deﬁnition 1 we have that K 2 = dim( C 2 ) where K = K 1 + K 2 . Note that a nested parity-check code is simply a dual code of the nested generator code C G (N, K, R) = C 1 (N −K 2 , K 1 , R)+ C 2 (N, K 2 , R+K 1 )\nFor a given information vector encoded in C 1 , there are 2 K 2 possible vectors in C 2 . The encoder now has the task to ﬁnd a vector c 2 in C 2 such that\nS = c 1 + c 2 + E, \t (3) with c 1 ∈ C 1 , such that E satisﬁes the constraint in (2). Otherwise, an encoder error is declared. From (1) we obtain the received vector as\nY = c 1 + c 2 + Z. \t (4) Lemma 1 ([8]). The error probability in recovering c 1 + c 2 from Y approaches zero with increasing N under the con- straint (2) for the transmitted codeword E if the maximal message rate is given as\nK 1 /N = h(W ) − h(p) − ϵ. \t (5) Note that (5) approaches the rates h(W ) − h(p) of\nthe capacity-noise bound R GP (W, p) = u.c.e. {h(W ) − h(p), (0, 0) } where \u201cu.c.e.\u201d denotes the upper convex enve- lope. All other rates on the curve R GP (W, p) can be obtained by time sharing with the point (0, 0).\nThis problem addresses the compression of a symmetric source W ∼ Bern( 1 2 ) by exploiting the knowledge of another correlated source Y as side information at the decoder. The correlation between sources can be represented as W = Y ⊕S where S ∼ Bern(p) is a \u201cseparation\u201d vector corresponding to errors on a virtual BSC(p) modeling the correlation. For the estimate of the source sequence ˆ W we require a constraint on the maximal distortion D, given as\n1 N\nThe encoder receives a sequence of N bits from source W , represented by W. It can be interpreted as\nwhere c ∈ C. We also require 1 N w H (E) ≤ D due to (6), such that the stored version of W is given as ˆ W = c, otherwise an encoder error is declared. We again assume that information is conveyed in K 1 dimensions of the N -dimensional vector space F N 2 , corresponding to code C 1 . Thus, the resulting compression rate is K 1 /N .\nAt the decoder, the encoded information of length K 1 can be recovered as a codeword in C 1 of length N . Because the decoder has access to side information Y it can recover c 2 according to\nThe decoder can then reconstruct ˆ W by considering that c = c 1 + c 2 .\nLemma 2 ([8]). The overall compression rate of the scheme under the distortion constraint in (6) is given as\nfor any ϵ > 0, where p ∗ D = p(1 − D) + D(1 − p) represents binary convolution.\nThe rate K 1 /N in (9) approaches the rate h(p ∗ D) − h(D) of the rate-distortion bound R W Z (D, p) = l.c.e. {h(p ∗ D) − h(D), (p, 0) }, where \u201cl.c.e.\u201d denotes the lower convex enve- lope. All other rates on the curve R W Z (D, p) can be obtained by time sharing with the point (p, 0).\nThe results presented in Section II indicate that nested linear block codes can asymptotically achieve the limits for both SCSI and CCSI problems but does not address how practical capacity-approaching codes for these cases can be obtained. However, the asymptotically capacity-achieving results for compound LDGM/LDPC codes in [8] suggests that code concatenation may result in practical and efﬁcient codes for these applications.\nIn this section we provide an new algebraic framework for nested concatenated codes for which the constructions in [8]\ncan be seen as special cases. In particular, we formally prove that code concatenation preserves the nested code structure, where the inner code serves as translator to a q-ary ﬁeld in such way that the outer code operates in the corresponding q m - ary extension ﬁeld. This especially also covers the practically important binary case for q = 2.\nDeﬁnition 2. Let ϕ : F n Q → F nm q , with Q = q m , be a bijective linear map deﬁned as ϕ(v) = u, where v ∈ F n Q and u ∈ F nm q . This means that a sequence of length n in F Q can be expressed as a q-ary sequence of length nm. If m = 1 we have u = v and there is no mapping.\nDeﬁnition 3. Let u = (u 1 , ..., u l ) , u i ∈ F nm/l q \t , i = 1, ..., l, where 1 ≤ l ≤ n and l is a divisor of mn. Further, let C Ψ (N/l, nm/l, d Ψ ) be a q-ary linear block code. Then, ψ : F nm/l q \t → C Ψ is a bijective linear map such that ψ(u i ) = u i G Ψ , where G Ψ is a generator matrix for C Ψ .\nThis deﬁnition means that the sequence u is partitioned into l groups of nm/l q-ary symbols that are each encoded by C Ψ . Note that this partition corresponds to an (nm/l)-folded code over F nm/l q \t . If l = n, then the groups have length m, and are the q-ary representation of a Q-ary symbol. If l = 1, the entire q-ary sequence u is encoded as a single input message by C Ψ .\nDeﬁnition 4. We deﬁne the extended one-to-one linear map ψ ∗ : F nm q \t → F N q as ψ ∗ (u) \t (ψ(u 1 ), . . . , ψ(u l )) = (u 1 G Ψ , . . . , u l G Ψ ).\nLemma 3. Let v be a codeword of the nested linear block code C(n, k, d) over F Q with Q = q m and C = C 1 + C 2 . The concatenation between C and C Ψ (N/l, nm/l, d Ψ ) yields an equivalent code C eq (N, K, D) over F q according to C eq (N, K, D) = {ψ ∗ (ϕ(v)) } v ∈C where K = km and D ≥ d Ψ d.\nThe proof follows in a straightforward way from sequential concatenation [15]. Note that ϕ(v) is a q-ary codeword of C q (nm, km, d q ), which is the q-ary version of C in the underlying ﬁeld F q .\nThe following proposition represents the main result of this section and states that the nested property as stated in Deﬁni- tion 1 is preserved if the outer code is a nested q-ary linear block code and the inner code is a Q-ary linear block code.\nProposition 1. The concatenation between C and C Ψ produces codewords of an equivalent linear code C eq (N, K) over F q , such that\nProof: 1) According to Lemma 3 we have C eq = {ψ ∗ (ϕ(v)) } v ∈C . Since C = C 1 + C 2 , then C eq = {ψ ∗ (ϕ(v 1 + v 2 )) } v 1 ∈C 1 ;v 2 ∈C 2 . But as ψ ∗ and ϕ are a linear maps and both C 1 and C 2 are also subspaces over the ground ﬁeld F q , as F n Q is equivalent to F nm q , the additivity property of linear mappings yields {ψ ∗ (ϕ(v 1 + v 2 )) } v 1 ∈C 1 ;v 2 ∈C 2 = {ψ ∗ (ϕ(v 1 )) } v 1 ∈C 1\nψ(u) = 0 }, where C q (nm, km) is the equivalent code C in the underlying ﬁeld F q . As ψ ∗ is one-to-one, ker(ψ ∗ ) = {0}, i.e., u = 0. Equivalently, ker(ϕ) = {0}, which means that v = 0. But since C 1 ∩ C 2 = {0}, then v = 0 if and only if v 1 = v 2 = 0. In other words, ψ ∗ (ϕ( C 1 ∩ C 2 = {0})) = {ψ ∗ (ϕ(v 1 )) } v 1 ∈C 1 ∩ {ψ ∗ (ϕ(v 2 )) } v 2 ∈C 2 = {0}.\nBy using a similar approach, it follows from Proposition 1 that its converse also holds, i.e., that the nested property is preserved if the inner code is a nested q-ary linear block code and the outer code is a Q-ary linear block code.\nProposition 2. The concatenation between a linear code C(n, k) over F Q and a linear code C Ψ over F q , C Ψ = C Ψ1 + C Ψ2 and C Ψ1 ∩ C Ψ2 = {0}, produces codewords of an equivalent linear code C eq (N, K) over F q , such that\nwhere ψ ∗ 1 : F nm q → F N q and ψ ∗ 2 : F nm q → F N q are linear maps such that ψ ∗ j (u 1 , . . . , u n ) = (ψ j (u 1 ), . . . , ψ j (u n )), with u i ∈ F nm/l q \t , i = 1, . . . , n, and ψ j : F nm/l q \t → C Ψj , j = 1, 2.\nPropositions 1 and 2 show that properties (i) and (ii) in Deﬁnition 1 still hold after code concatenation, no matter whether the nested code is an inner or outer code. The only requirement is that both subcodes are concatenated with the same outer code, in order to preserve property (ii). We deﬁne the subcodes in the resulting q-ary nested structure of C eq as C eq1 = {ψ ∗ (ϕ(v 1 )) } v 1 ∈C 1 and C eq2 = {ψ ∗ (ϕ(v 2 )) } v 2 ∈C 2 which now instead can be employed in both the SCSI and the CCSI cases.\nWhen employing nested codes to the SCSI problem as in Section II, C eq2 is required to be a good channel code to correct the error formed by the source encoding distortion and the observation error. At the same time, C eq must be a D-distortion source code to output a codeword as close as possible to the information sequence produced by the source with a distortion constraint D. In the case of CCSI, C eq2 takes on the role of a good W -distortion source code whereas C eq is the channel code.\nWhile channel coding can be performed by means of good decoding algorithms, performing source coding with error correcting codes makes it necessary to have complete algorithms that can return the nearest codewords. Motivated by recent results on list decoding of RS codes we will now study the suitability of these codes for source encoding.\nIn [13], Guruswami and Rudra describe an explicit family of codes with a list decoding algorithm that can asymptotically achieve the information-theoretic limit of list decodability, with encoding and decoding performed in polynomial time. The proposed codes are folded RS codes, which can be seen as standard RS codes viewed as codes over a larger alphabet.\nDeﬁnition 5 (ν-Folded Reed-Solomon Code (FRS)). Let α ∈ F q be a primitive element of F q . Let n \u2032 ≤ q − 1 be a multiple\nof ν and 1 ≤ k < n. An FRS code C (ν) (n \u2032 , k) over alphabet F ν q is a folded version of the RS code C(n, k) over F q and is deﬁned as\nwhere n \u2032 = n/ν. In other words, a FRS code is an RS code where ν consecutive symbols each are grouped together.\nThe GR algorithm for FRS codes of rate R allows to list decode in polynomial time up to a fraction of (1 − R − ε) worst-case errors. The folding operation does not change the rate of the RS code (R = k/n = k/n \u2032 ν), thus e \u2032 ν/n = 1 − k/n − ε, so e = e \u2032 ν is the number of correctable errors for the corresponding unfolded RS code [13].\nProposition 3. If the GR list decoding algorithm is used in conjunction with RS codes for source encoding of IID q- ary sources, the probability of encoding errors asymptotically vanishes.\nProof: Starting from an observation that the normalized covering radius t( C)/n of a linear code C(n, k) [16] is t( C)/n ≤ 1 − k/n, which is met with equality by RS codes, we see that e = t( C)−ε, where ε > 0, C(n, k) is the unfolded RS code and t( C) is its covering radius. Because a fraction of errors over F ν q is equivalent to a fraction of errors over F q , the GR algorithm for FRS codes asymptotically corrects a number of errors over F q that is equal to the covering radius of the corresponding unfolded RS code.\nNote that list decoding may not output a single codeword but a list of possible codewords. This does not pose a problem since the source encoder can always pick the one which is closest to the source sequence in Hamming distance.\nUsing concatenated codes for both the CCSI and the SCSI problems, there are two different ways of implementing the source encoding step of ﬁnding a vector c 2 ∈ C eq2 and c ∈ C eq , respectively. The ﬁrst way is to perform separate source encoding for each of the concatenated codes. While RS outer codes in conjunction with the GR algorithm can optimally perform source encoding in F n q , the performance of this strategy also depends on the inner code. Another way is to perform source encoding over the concatenated binary code. In fact, list decoding capacity for binary codes can be asymp- totically achieved if FRS codes are concatenated with random binary linear block codes (BLBC) [13]. This means that every Hamming sphere of radius h −1 (1 − R − ε) has polynomially many codewords. Thus, it is possible to asymptotically achieve the rate-distortion bound for a Bernoulli symmetric source.\nIn the following we provide a general setup which univer- sally addresses the scenario of outer algebraic RS or BCH codes and arbitrary inner BLBCs.\nThe coding scheme for the outer code is based on an algebraic construction of nested cyclic codes. These codes form an ideal in the polynomial ring F q [x]/(x n − 1), where F q [x] is the set of polynomials in x with coefﬁcients from the\nﬁnite ﬁeld F q , where q = 2 m . The polynomial x n − 1 can be factorized as\nwhere r = n − (k 1 + k 2 ). The notation \u201ca(x) ( ·) \u201d is used to indicate the degree of polynomial \u201ca(x)\u201d, and henceforth the argument \u201c(x)\u201d will be omitted in order to simplify notation. Note that for m = 1 we obtain BCH codes, otherwise RS codes are employed.\nThe polynomial g (r) corresponds to a generator polynomial of the code C(n, k 1 + k 2 ), and (gf ) (r+k 1 ) is a generator poly- nomial for C 2 (n, k 2 ). The codewords in C can be expressed as a sum of codewords as follows:\nAt the outer encoder, information i (k 1 −1) 1 \t is encoded using g (r) of code C(n, k 1 + k 2 ), producing v (n −1) 1 \t (zero padded to achieve length n) of the shortened cyclic code C 1 (n − k 2 , k 1 ). In order to allow incorporating binary side information, the sequence v 1 ∈ C 1 is mapped to its binary representation u 1 , which is then partitioned into l groups of nm/l bits that are each encoded by a BLBC code C Ψ (N/l, nm/l). Thus, the resulting codewords c 1 = ψ ∗ (ϕ(v 1 )) have length N and are codewords in C eq1 (N − K 2 , K 1 ).\nEncoding steps: I) (Outer encoding): Encode information i (k 1 −1) 1 \t using the generator g (r) for C(n, k 1 +k 2 ), thus produc- ing a codeword v (n −k 2 −1) 1 \t of C 1 (n − k 2 , k 1 ) padded with k 2 zeros; II) (Code concatenation): Encode l groups of nm/l bits of codeword v 1 (received from the outer encoder) by using the inner code C Ψ , resulting in c 1 ; III) Compute S − c 1 ; IV) Find c 2 ∈ C eq2 according to (3) such that (2) holds; V) Transmit E.\nNote that the encoding complexity is essentially given by step IV, because all other operations are linear. For FRS codes a folding/unfolding step has to be performed before ﬁnding v 2 ∈ C 2 (n, k 2 ) as follows.\nFolding/unfolding step: (i) Code folding σ : F nm 2 → F n/ν 2 mν , σ(u) = u \u2032 , (ii) Code unfolding σ ∗ : F n/ν 2 mν →F n 2 m , σ ∗ (v \u2032 2 ) = v 2 .\nProposition 4. Consider a symmetric Bernoulli source. Source encoding via list decoding of RS/BLBC code C eq2 can asymp- totically achieve a vanishing probability of encoding error. Thus, given a concatenated RS/BLBC channel code C eq which asymptotically achieves capacity on the BSC(p), the resulting joint source-channel coding scheme for the CCSI case achieves the capacity-noise bound R GP (W, p).\nProof: From the rate distortion bound for a symmetric Bernoulli sequence, the rate for the W -distortion source code C eq2 is given as K 2 /N ≥ 1−h(W ). Because list decoding can asymptotically correct an error fraction of h −1 (1 − R 2 − ε), we see that R 2 = 1 − h(W ) − ε asymptotically achieves the rate-distortion bound and therefore results in an encoding error probability which asymptotically tends to zero. Therefore, if the RS/BLBC code C eq achieves capacity on the BSC(p), we\nhave R = 1 − h(p) − ε which results in R 1 = h(W ) − h(p). This is equivalent to the capacity-noise bound R GP (W, p).\nThe channel coding performance of the proposed scheme is essentially the one for the chosen concatenated RS/BLBC code C eq2 . Here we can exploit the fact that some constructions (e.g., RS/LDPC) are capacity approaching, for which effective decoding algorithms exist.\nAfter transmission of E, the decoder receives Y in (1) and the error vector Z is corrected in the same fashion as in any standard concatenated scheme (by using the corresponding decoding algorithms for each code), resulting in an error-free codeword (12). Then, the embedded information i 1 is extracted by a modulo operation and a polynomial division according to\nDecoding steps: I) Receive Y, recover v ∈ C; II) Compute i (k 1 −1) 1 \t as in (13).\nThe encoder receives a sequence of N bits from a Bernoulli symmetric source W , represented by W, which is equivalent to a codeword ˆ W = c in C eq (N, K) plus a \u201cquantization\u201d error E (7). An encoder error is declared if a codeword ˆ W = c cannot be found.\nEncoding steps: I) Receive W, recover v ∈ C; II) Com- pute: i (k 1 −1) 1 \t as in (13).\nAnalogous to the CCSI case, for FRS codes an extra folding/unfolding step must be performed before ﬁnding v ∈ C(n, k), with the difference that now the folded codeword is v \u2032 ∈ C (ν) (n \u2032 , k), so σ ∗ (v \u2032 ) = v. We have the following statement which is analogous to Proposition 4.\nProposition 5. Consider a symmetric Bernoulli source. Source encoding via list decoding of RS/BLBC code C eq can asymp- totically achieve a vanishing probability of encoding error. Thus, given a concatenated RS/BLBC channel code C eq2 which asymptotically achieves capacity on the BSC(p ∗ D), the resulting joint source-channel coding scheme for the SCSI case achieves the rate-distortion bound R GP (W, p).\nThe encoder extracts a polynomial i (k 1 −1) 1 \t of length k 1 (K 1 bits) from v (n −1) (12), so the compression rate is K 1 /N . The encoding steps in this case are essentially the same as the decoding steps of CCSI, but instead of channel decoding we employ source encoding algorithms which dominate the encoding complexity (see encoder step I).\nFor decoding, the steps are analogous to the encoding steps of the CCSI case, with the difference that S becomes Y, and instead of sending the error pattern after ﬁnding c 2 ∈ C eq2 , the information word corresponding to the actual codeword\nˆ W = c 1 + c 2 is stored. Here, channel decoding is employed which dominates the complexity as all other operations are linear.\nWithin the proposed algebraic framework we proved that code concatenation preserves the nested structure of joint\nsource-channel codes. Therefore, the optimal asymptotic per- formance for both binary SCSI and CCSI problems can be universally achieved by concatenation with a linear block code, provided that one of the constituent codes has the necessary nested property. In particular, while in [8] ML decoding is assumed, through a novel RS/BLBC construction with low encoding and decoding complexity we show that list decoding provides the optimal source encoding performance asymp- totically for both problems. At the same time, for channel error correction any capacity-approaching algorithm can be independently used.\nIt is still a challenge to exploit the full potential of con- catenation with practical list decoding algorithms, but separate source and channel encoding is a feasible approach as practical encoding and decoding algorithms exist for each code. Future work will focus on studying other concatenated schemes employing QC-LDPC, polar, and BCH codes as outer codes, which seems to be a promising avenue since these codes have been successfully employed for source coding [9], [15], [17]."},"refs":[{"authors":[{"name":"A. D. Wyner"},{"name":"J. Ziv"}],"title":{"text":"The rate-distortion function for source encoding with side information at the encoder"}},{"authors":[{"name":"S. I. Gel\u2019fand"},{"name":"M. S. Pinsker"}],"title":{"text":"Coding for channel with random parameters"}},{"authors":[{"name":"M. H. M. Costa"}],"title":{"text":"Writing on dirty paper"}},{"authors":[{"name":"S. Pradhan"},{"name":"J. Chou"},{"name":"K. Ramchandran"}],"title":{"text":"Duality between source coding and channel coding and its extension to the side information case"}},{"authors":[{"name":"R. Zamir"},{"name":"S. Shamai"},{"name":"U. Erez"}],"title":{"text":"Nested linear/lattice codes for structured multiterminal binning"}},{"authors":[{"name":"A. Bennatan"},{"name":"D. Burshtein"},{"name":"G. Caire"},{"name":"S. Shamai"}],"title":{"text":"Superposition coding for side-information channels"}},{"authors":[{"name":"S. Shamai"},{"name":"S. Verd´u"},{"name":"R. Zamir"}],"title":{"text":"Systematic lossy source/channel coding"}},{"authors":[{"name":"M. J. Wainwright"},{"name":"E. Martinian"}],"title":{"text":"Low-density codes that are optimal for binning and coding with side information"}},{"authors":[{"name":"S. Korada"},{"name":"R. Urbanke"}],"title":{"text":"Polar codes are optimal for lossy source coding"}},{"authors":[{"name":"N. Hussami"},{"name":"R. Urbanke"},{"name":"S. Korada"}],"title":{"text":"Performance of polar codes for channel and source coding"}},{"authors":[{"name":"A. Liveris"},{"name":"Z. Xiong"},{"name":"C. Georghiades"}],"title":{"text":"Nested convolutional/turbo codes for the binary Wyner-Ziv problem"}},{"authors":[{"name":"Y. Sun"},{"name":"M. Uppal"},{"name":"A. D. Liveris"},{"name":"S. Cheng"},{"name":"V. Stankovic"},{"name":"Z. Xiong"}],"title":{"text":"Nested turbo codes for the Costa problem"}},{"authors":[{"name":"V. Guruswami"},{"name":"A. Rudra"}],"title":{"text":"Explicit codes achieving list decoding capacity: Error-correction with optimal redundancy"}},{"authors":[{"name":"C. Heegard"}],"title":{"text":"Partitioned linear block codes for computer memory with \u201dstuck-at\u201d defects"}},{"authors":[{"name":"R. J. McEliec"}],"title":{"text":"The theory of information and coding"}},{"authors":[{"name":"S. L. G. Cohe"},{"name":"I. Honkal"},{"name":"A. Lobstei"}],"title":{"text":"Covering Codes"}},{"authors":[{"name":"Y. Matsunaga"},{"name":"H. Yamamoto"}],"title":{"text":"A coding theorem for lossy data compression by LDPC codes"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569566683.pdf"},"links":[{"id":"1569566567","weight":4},{"id":"1569564843","weight":14},{"id":"1569566381","weight":4},{"id":"1569566527","weight":4},{"id":"1569566485","weight":7},{"id":"1569565383","weight":2},{"id":"1569565883","weight":9},{"id":"1569564889","weight":6},{"id":"1569565223","weight":3},{"id":"1569566725","weight":9},{"id":"1569565663","weight":3},{"id":"1569565377","weight":11},{"id":"1569566385","weight":7},{"id":"1569567049","weight":11},{"id":"1569564635","weight":11},{"id":"1569565867","weight":4},{"id":"1569566799","weight":4},{"id":"1569565067","weight":11},{"id":"1569559665","weight":6},{"id":"1569561021","weight":3},{"id":"1569564669","weight":2},{"id":"1569565691","weight":3},{"id":"1569566815","weight":2},{"id":"1569566875","weight":6},{"id":"1569564605","weight":3},{"id":"1569559617","weight":4},{"id":"1569566981","weight":2},{"id":"1569566433","weight":2},{"id":"1569566321","weight":7},{"id":"1569566605","weight":3},{"id":"1569565489","weight":2},{"id":"1569566855","weight":3},{"id":"1569560629","weight":5},{"id":"1569566869","weight":4},{"id":"1569565097","weight":4},{"id":"1569566227","weight":2},{"id":"1569566091","weight":5},{"id":"1569559259","weight":9},{"id":"1569566697","weight":8},{"id":"1569566597","weight":10},{"id":"1569565551","weight":5},{"id":"1569565711","weight":5},{"id":"1569566761","weight":3},{"id":"1569566943","weight":26},{"id":"1569565091","weight":8},{"id":"1569566591","weight":5},{"id":"1569556029","weight":2},{"id":"1569566571","weight":9},{"id":"1569552245","weight":14},{"id":"1569565607","weight":4},{"id":"1569565495","weight":2},{"id":"1569559967","weight":12},{"id":"1569567045","weight":5},{"id":"1569565227","weight":3},{"id":"1569564481","weight":13},{"id":"1569560833","weight":13},{"id":"1569566415","weight":13},{"id":"1569564805","weight":10},{"id":"1569567005","weight":4},{"id":"1569566469","weight":7},{"id":"1569566081","weight":9},{"id":"1569565355","weight":6},{"id":"1569564469","weight":3},{"id":"1569565931","weight":6},{"id":"1569566373","weight":2},{"id":"1569566647","weight":4},{"id":"1569551535","weight":14},{"id":"1569566765","weight":6},{"id":"1569564897","weight":5},{"id":"1569565775","weight":12},{"id":"1569565547","weight":3},{"id":"1569566871","weight":9},{"id":"1569566653","weight":2},{"id":"1569565461","weight":17},{"id":"1569564245","weight":3},{"id":"1569564731","weight":5},{"id":"1569566207","weight":7},{"id":"1569564227","weight":18},{"id":"1569558325","weight":6},{"id":"1569565837","weight":3},{"id":"1569566671","weight":13},{"id":"1569566303","weight":4},{"id":"1569564233","weight":9},{"id":"1569566459","weight":2},{"id":"1569567535","weight":3},{"id":"1569563411","weight":16},{"id":"1569560427","weight":31},{"id":"1569564401","weight":2},{"id":"1569564849","weight":10},{"id":"1569559541","weight":4},{"id":"1569565317","weight":2},{"id":"1569566363","weight":4},{"id":"1569566319","weight":3},{"id":"1569565123","weight":2},{"id":"1569566941","weight":3},{"id":"1569566033","weight":5},{"id":"1569566739","weight":3},{"id":"1569555811","weight":3},{"id":"1569558459","weight":3},{"id":"1569565609","weight":6},{"id":"1569565291","weight":9},{"id":"1569564203","weight":7},{"id":"1569566821","weight":6},{"id":"1569556713","weight":17},{"id":"1569562685","weight":6},{"id":"1569566751","weight":2},{"id":"1569566467","weight":3},{"id":"1569565771","weight":3},{"id":"1569566157","weight":5},{"id":"1569566903","weight":4},{"id":"1569566999","weight":3},{"id":"1569565859","weight":5},{"id":"1569565809","weight":2},{"id":"1569566843","weight":4},{"id":"1569566579","weight":3},{"id":"1569558483","weight":5},{"id":"1569566563","weight":9},{"id":"1569566089","weight":3},{"id":"1569566173","weight":2},{"id":"1569559221","weight":4},{"id":"1569565347","weight":5},{"id":"1569566925","weight":9},{"id":"1569564387","weight":5},{"id":"1569565455","weight":6},{"id":"1569566497","weight":4},{"id":"1569566795","weight":3},{"id":"1569566963","weight":9},{"id":"1569561679","weight":5},{"id":"1569566709","weight":10},{"id":"1569564989","weight":4},{"id":"1569566787","weight":3},{"id":"1569566717","weight":4},{"id":"1569560721","weight":3},{"id":"1569566015","weight":3},{"id":"1569566523","weight":4},{"id":"1569565897","weight":3},{"id":"1569551763","weight":6},{"id":"1569565953","weight":4},{"id":"1569566895","weight":5},{"id":"1569566889","weight":2},{"id":"1569565709","weight":3},{"id":"1569566749","weight":7},{"id":"1569566269","weight":12},{"id":"1569564189","weight":8},{"id":"1569564195","weight":7},{"id":"1569561513","weight":5},{"id":"1569566985","weight":4},{"id":"1569564613","weight":5},{"id":"1569567009","weight":4},{"id":"1569566865","weight":5},{"id":"1569565321","weight":3},{"id":"1569558785","weight":4},{"id":"1569564647","weight":2},{"id":"1569566095","weight":9},{"id":"1569566193","weight":4},{"id":"1569564271","weight":2},{"id":"1569565265","weight":3},{"id":"1569565907","weight":4},{"id":"1569566343","weight":4},{"id":"1569564311","weight":5},{"id":"1569565803","weight":4},{"id":"1569565785","weight":4},{"id":"1569566239","weight":4},{"id":"1569566167","weight":4},{"id":"1569566679","weight":8},{"id":"1569565989","weight":3},{"id":"1569566575","weight":10},{"id":"1569563981","weight":13},{"id":"1569561085","weight":2},{"id":"1569566419","weight":2},{"id":"1569566617","weight":3},{"id":"1569559565","weight":10},{"id":"1569566905","weight":9},{"id":"1569566753","weight":3},{"id":"1569563307","weight":11},{"id":"1569566063","weight":6},{"id":"1569558681","weight":3},{"id":"1569555999","weight":3},{"id":"1569566759","weight":5},{"id":"1569565589","weight":2},{"id":"1569559195","weight":2},{"id":"1569566149","weight":7},{"id":"1569566217","weight":4},{"id":"1569566657","weight":7},{"id":"1569558859","weight":10},{"id":"1569565199","weight":2},{"id":"1569565213","weight":4},{"id":"1569566643","weight":5},{"id":"1569566511","weight":6},{"id":"1569566719","weight":6},{"id":"1569566991","weight":3},{"id":"1569565841","weight":3},{"id":"1569566369","weight":8},{"id":"1569566531","weight":4},{"id":"1569567665","weight":11},{"id":"1569561143","weight":9},{"id":"1569566581","weight":9},{"id":"1569565833","weight":7},{"id":"1569566489","weight":3},{"id":"1569564611","weight":5},{"id":"1569565535","weight":3},{"id":"1569562867","weight":6},{"id":"1569566395","weight":9},{"id":"1569565667","weight":4},{"id":"1569561795","weight":3},{"id":"1569566325","weight":6},{"id":"1569566423","weight":5},{"id":"1569565257","weight":3},{"id":"1569564795","weight":3},{"id":"1569567015","weight":6},{"id":"1569559805","weight":6},{"id":"1569566437","weight":19},{"id":"1569566811","weight":3},{"id":"1569566851","weight":14},{"id":"1569558901","weight":3},{"id":"1569565735","weight":11},{"id":"1569553909","weight":11},{"id":"1569559111","weight":7},{"id":"1569566687","weight":3},{"id":"1569562285","weight":2},{"id":"1569564881","weight":5},{"id":"1569566939","weight":2},{"id":"1569553537","weight":14},{"id":"1569565427","weight":6},{"id":"1569566403","weight":5},{"id":"1569565839","weight":4},{"id":"1569565915","weight":4},{"id":"1569552251","weight":8},{"id":"1569566139","weight":3},{"id":"1569553519","weight":6},{"id":"1569567051","weight":4},{"id":"1569566885","weight":8},{"id":"1569564441","weight":2},{"id":"1569566231","weight":5},{"id":"1569564209","weight":2},{"id":"1569566513","weight":2},{"id":"1569566425","weight":9},{"id":"1569554881","weight":5},{"id":"1569554971","weight":7},{"id":"1569565501","weight":5},{"id":"1569566899","weight":3},{"id":"1569566445","weight":7},{"id":"1569566209","weight":6},{"id":"1569562821","weight":3},{"id":"1569566791","weight":5},{"id":"1569565559","weight":5},{"id":"1569566371","weight":2},{"id":"1569565655","weight":12},{"id":"1569566909","weight":6},{"id":"1569566127","weight":5},{"id":"1569558985","weight":4},{"id":"1569563763","weight":13},{"id":"1569565087","weight":2},{"id":"1569566473","weight":10},{"id":"1569564857","weight":6},{"id":"1569564333","weight":2},{"id":"1569566913","weight":9},{"id":"1569566809","weight":5},{"id":"1569566629","weight":5},{"id":"1569566257","weight":3},{"id":"1569565033","weight":14},{"id":"1569566447","weight":6},{"id":"1569566357","weight":2},{"id":"1569565817","weight":20},{"id":"1569565847","weight":14},{"id":"1569564353","weight":4},{"id":"1569563897","weight":3},{"id":"1569557083","weight":3},{"id":"1569565887","weight":11},{"id":"1569565929","weight":6},{"id":"1569566141","weight":9},{"id":"1569565055","weight":2},{"id":"1569564677","weight":2},{"id":"1569563231","weight":5},{"id":"1569565633","weight":12},{"id":"1569566661","weight":2},{"id":"1569565279","weight":6},{"id":"1569555879","weight":7},{"id":"1569565521","weight":2},{"id":"1569566115","weight":2},{"id":"1569565219","weight":9},{"id":"1569558509","weight":5},{"id":"1569554759","weight":5},{"id":"1569565595","weight":7},{"id":"1569565185","weight":5},{"id":"1569566773","weight":3},{"id":"1569566037","weight":2},{"id":"1569564985","weight":4},{"id":"1569565095","weight":2},{"id":"1569566223","weight":4},{"id":"1569558401","weight":8},{"id":"1569566553","weight":5},{"id":"1569564973","weight":6},{"id":"1569565469","weight":3},{"id":"1569564969","weight":7},{"id":"1569566593","weight":2},{"id":"1569566043","weight":2},{"id":"1569565029","weight":8},{"id":"1569565357","weight":13},{"id":"1569561245","weight":3},{"id":"1569566505","weight":2},{"id":"1569565393","weight":5},{"id":"1569565933","weight":13},{"id":"1569562207","weight":9},{"id":"1569565705","weight":7},{"id":"1569566191","weight":7},{"id":"1569567033","weight":9},{"id":"1569565527","weight":5},{"id":"1569566603","weight":9},{"id":"1569567029","weight":3},{"id":"1569565363","weight":2},{"id":"1569566159","weight":7},{"id":"1569566695","weight":5},{"id":"1569566051","weight":6},{"id":"1569561379","weight":6},{"id":"1569565909","weight":2},{"id":"1569561123","weight":9},{"id":"1569566655","weight":7},{"id":"1569566673","weight":8},{"id":"1569567235","weight":7},{"id":"1569565441","weight":3},{"id":"1569565739","weight":3},{"id":"1569565311","weight":5},{"id":"1569566233","weight":6},{"id":"1569566667","weight":5},{"id":"1569566297","weight":4},{"id":"1569566893","weight":9},{"id":"1569566317","weight":2},{"id":"1569560997","weight":7},{"id":"1569563845","weight":7},{"id":"1569566407","weight":4},{"id":"1569560349","weight":4},{"id":"1569566501","weight":8},{"id":"1569565741","weight":9},{"id":"1569566275","weight":20},{"id":"1569566481","weight":5},{"id":"1569565545","weight":3},{"id":"1569566857","weight":3},{"id":"1569565961","weight":4},{"id":"1569566387","weight":3},{"id":"1569566245","weight":6},{"id":"1569560503","weight":6},{"id":"1569565463","weight":5},{"id":"1569564339","weight":3},{"id":"1569566219","weight":4},{"id":"1569565439","weight":12},{"id":"1569566229","weight":6},{"id":"1569566133","weight":2},{"id":"1569562551","weight":8},{"id":"1569563395","weight":9},{"id":"1569566901","weight":5},{"id":"1569551347","weight":4},{"id":"1569565415","weight":4},{"id":"1569555367","weight":6},{"id":"1569561623","weight":2},{"id":"1569566383","weight":2},{"id":"1569564485","weight":11},{"id":"1569565155","weight":3},{"id":"1569566631","weight":15},{"id":"1569565571","weight":15},{"id":"1569565885","weight":4},{"id":"1569566177","weight":9},{"id":"1569565493","weight":6},{"id":"1569557633","weight":6},{"id":"1569564411","weight":4},{"id":"1569566805","weight":8},{"id":"1569559199","weight":2},{"id":"1569566929","weight":2},{"id":"1569566293","weight":8},{"id":"1569565665","weight":3},{"id":"1569566831","weight":5},{"id":"1569565549","weight":4},{"id":"1569565523","weight":7},{"id":"1569565611","weight":8},{"id":"1569557715","weight":7},{"id":"1569564175","weight":5},{"id":"1569566983","weight":8},{"id":"1569566779","weight":2},{"id":"1569566097","weight":7},{"id":"1569566479","weight":5},{"id":"1569556361","weight":8},{"id":"1569566431","weight":4},{"id":"1569565397","weight":4},{"id":"1569566873","weight":5},{"id":"1569565765","weight":13},{"id":"1569565925","weight":9},{"id":"1569565435","weight":4},{"id":"1569557275","weight":5},{"id":"1569565263","weight":6},{"id":"1569566129","weight":4},{"id":"1569565215","weight":6},{"id":"1569565093","weight":2},{"id":"1569565385","weight":7},{"id":"1569565575","weight":3},{"id":"1569565919","weight":10},{"id":"1569565181","weight":3},{"id":"1569566711","weight":11},{"id":"1569565241","weight":5},{"id":"1569566927","weight":5},{"id":"1569565661","weight":12},{"id":"1569565865","weight":9},{"id":"1569566887","weight":7},{"id":"1569565273","weight":4},{"id":"1569566267","weight":3},{"id":"1569564131","weight":6},{"id":"1569552037","weight":3},{"id":"1569564919","weight":6},{"id":"1569565511","weight":4},{"id":"1569566737","weight":8},{"id":"1569566429","weight":3},{"id":"1569561221","weight":3},{"id":"1569566917","weight":4},{"id":"1569566035","weight":6},{"id":"1569566253","weight":2},{"id":"1569565353","weight":3},{"id":"1569564683","weight":6},{"id":"1569564305","weight":13},{"id":"1569564283","weight":7},{"id":"1569564291","weight":3},{"id":"1569566691","weight":6},{"id":"1569565421","weight":5},{"id":"1569566547","weight":6},{"id":"1569566651","weight":5},{"id":"1569565177","weight":3},{"id":"1569566823","weight":7},{"id":"1569566595","weight":2},{"id":"1569566677","weight":4},{"id":"1569565349","weight":3},{"id":"1569552025","weight":3},{"id":"1569566137","weight":14},{"id":"1569565013","weight":4},{"id":"1569565829","weight":4},{"id":"1569566283","weight":3},{"id":"1569565645","weight":4},{"id":"1569566529","weight":7},{"id":"1569565375","weight":15},{"id":"1569566715","weight":5},{"id":"1569565237","weight":5},{"id":"1569566819","weight":2},{"id":"1569565041","weight":4},{"id":"1569564703","weight":3},{"id":"1569566713","weight":2},{"id":"1569565541","weight":4},{"id":"1569565597","weight":2},{"id":"1569566813","weight":6},{"id":"1569565293","weight":3},{"id":"1569566771","weight":14},{"id":"1569564649","weight":2},{"id":"1569564201","weight":4},{"id":"1569562277","weight":5},{"id":"1569566641","weight":9},{"id":"1569565425","weight":6},{"id":"1569559035","weight":2},{"id":"1569564247","weight":5},{"id":"1569564437","weight":8},{"id":"1569566533","weight":3},{"id":"1569563975","weight":2},{"id":"1569551905","weight":5},{"id":"1569564861","weight":6},{"id":"1569565457","weight":4},{"id":"1569564787","weight":3},{"id":"1569566487","weight":11},{"id":"1569565529","weight":7},{"id":"1569556759","weight":9},{"id":"1569566619","weight":11},{"id":"1569565271","weight":2},{"id":"1569561185","weight":9},{"id":"1569566075","weight":6},{"id":"1569566397","weight":6},{"id":"1569558779","weight":13},{"id":"1569565669","weight":3},{"id":"1569565233","weight":4},{"id":"1569563721","weight":4},{"id":"1569566001","weight":2},{"id":"1569565593","weight":5},{"id":"1569560235","weight":3},{"id":"1569566817","weight":9},{"id":"1569564157","weight":2},{"id":"1569565729","weight":3},{"id":"1569566389","weight":3},{"id":"1569566435","weight":3},{"id":"1569567483","weight":3},{"id":"1569566911","weight":3},{"id":"1569564923","weight":11},{"id":"1569565367","weight":4},{"id":"1569566299","weight":17},{"id":"1569564281","weight":5},{"id":"1569565039","weight":5},{"id":"1569564769","weight":5},{"id":"1569565769","weight":6},{"id":"1569566171","weight":2},{"id":"1569566601","weight":3},{"id":"1569565805","weight":12},{"id":"1569561713","weight":2},{"id":"1569566933","weight":3},{"id":"1569563919","weight":15},{"id":"1569566577","weight":8},{"id":"1569557851","weight":12},{"id":"1569565389","weight":2},{"id":"1569559919","weight":5},{"id":"1569565861","weight":5},{"id":"1569566147","weight":14},{"id":"1569565537","weight":9},{"id":"1569559523","weight":2},{"id":"1569566057","weight":4},{"id":"1569562367","weight":4},{"id":"1569560785","weight":9},{"id":"1569565561","weight":5},{"id":"1569565631","weight":4},{"id":"1569560213","weight":7},{"id":"1569555891","weight":6},{"id":"1569566847","weight":2},{"id":"1569565997","weight":5},{"id":"1569563425","weight":4},{"id":"1569565035","weight":13},{"id":"1569559597","weight":7},{"id":"1569564961","weight":5},{"id":"1569559251","weight":6},{"id":"1569567013","weight":4},{"id":"1569566583","weight":3},{"id":"1569561861","weight":5},{"id":"1569565337","weight":3},{"id":"1569564253","weight":2},{"id":"1569565737","weight":5},{"id":"1569560459","weight":7},{"id":"1569564463","weight":4},{"id":"1569565853","weight":12},{"id":"1569550425","weight":12},{"id":"1569566273","weight":10},{"id":"1569564123","weight":10},{"id":"1569566341","weight":2},{"id":"1569565889","weight":9},{"id":"1569566635","weight":3},{"id":"1569566611","weight":4},{"id":"1569551539","weight":5},{"id":"1569564505","weight":10},{"id":"1569565165","weight":5},{"id":"1569565565","weight":11},{"id":"1569565635","weight":5},{"id":"1569561397","weight":5},{"id":"1569565731","weight":8},{"id":"1569566797","weight":20},{"id":"1569566413","weight":7},{"id":"1569565707","weight":17},{"id":"1569565113","weight":9},{"id":"1569566375","weight":5},{"id":"1569565143","weight":4},{"id":"1569564257","weight":17},{"id":"1569565583","weight":5},{"id":"1569566555","weight":4},{"id":"1569564931","weight":8},{"id":"1569565373","weight":3},{"id":"1569564141","weight":2},{"id":"1569566973","weight":6},{"id":"1569561579","weight":8},{"id":"1569566449","weight":2},{"id":"1569566987","weight":3},{"id":"1569565031","weight":7},{"id":"1569564755","weight":4},{"id":"1569564509","weight":7},{"id":"1569551541","weight":9},{"id":"1569565619","weight":2},{"id":"1569566839","weight":3},{"id":"1569551751","weight":5},{"id":"1569558697","weight":3},{"id":"1569565139","weight":7},{"id":"1569565895","weight":3},{"id":"1569566663","weight":6},{"id":"1569564419","weight":3},{"id":"1569565579","weight":2},{"id":"1569566067","weight":6},{"id":"1569566825","weight":9},{"id":"1569566615","weight":4},{"id":"1569566241","weight":3},{"id":"1569564807","weight":2},{"id":"1569563007","weight":4},{"id":"1569566113","weight":9},{"id":"1569566443","weight":7},{"id":"1569565715","weight":4},{"id":"1569566727","weight":11},{"id":"1569565315","weight":3},{"id":"1569565515","weight":2},{"id":"1569566417","weight":3},{"id":"1569560581","weight":7},{"id":"1569559233","weight":9}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S9.T5.3","endtime":"10:50","authors":"Felipe Cinelli Barbosa, Joerg Kliewer, Max H. M. Costa","date":"1341397800000","papertitle":"An Algebraic Framework for Concatenated Linear Block Codes in Side Information Based Problems","starttime":"10:30","session":"S9.T5: Linear Codes and UEP Codes","room":"Kresge Little Theatre (035)","paperid":"1569566683"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"28","spectral28":"7","spectral32":"28","spectral14":"5","spectral20":"12","spectral9":"8","spectral25":"16","spectral42":"36","spectral3":"1","spectral47":"32","spectral17":"7","louvain":"350","spectral36":"31","spectral39":"3","spectral10":"2","spectral15":"4","spectral33":"13","spectral5":"4","spectral21":"17","spectral44":"23","spectral26":"0","spectral40":"31","spectral8":"2","spectral11":"2","spectral4":"2","spectral37":"7","spectral48":"9","spectral22":"1","spectral23":"17","spectral12":"5","spectral50":"9","spectral19":"16","spectral34":"28","spectral45":"3","spectral7":"4","spectral49":"44","spectral38":"12","spectral24":"23","spectral13":"0","spectral31":"25","spectral29":"27","spectral35":"3","spectral30":"1","spectral41":"16","spectral27":"10","spectral18":"3","spectral46":"27","spectral2":"0","spectral16":"7"}}

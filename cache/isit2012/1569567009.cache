{"id":"1569567009","paper":{"title":{"text":"Multi-Level Error-Resilient Neural Networks"},"authors":[{"name":"Amir Hesam Salavati"},{"name":"Amin Karbasi"}],"abstr":{"text":"Abstract\u2014The problem of neural network association is to retrieve a previously memorized pattern from its noisy version using a network of neurons. An ideal neural network should include three components simultaneously: a learning algorithm, a large pattern retrieval capacity and resilience against noise. Prior works in this area usually improve one or two aspects at the cost of the third.\nOur work takes a step forward in closing this gap. More speciﬁcally, we show that by forcing natural constraints on the set of learning patterns, we can drastically improve the retrieval capacity of our neural network. Moreover, we devise a learning algorithm whose role is to learn those patterns satisfying the above mentioned constraints. Finally we show that our neural network can cope with a fair amount of noise."},"body":{"text":"Neural networks are famous for their ability to learn and reliably perform a required task. An important example is the case of (associative) memory where we are asked to memorize (learn) a set of given patterns. Later, corrupted versions of the memorized patterns will be shown to us and we have to return the correct memorized patterns. In essence, this problem is very similar to the one faced in communication systems where the goal is to reliably transmit and efﬁciently decode a set of patterns (so called codewords) over a noisy channel.\nAs one would naturally expect, reliability is certainly a very important issue both in the neural associative memories and in communication systems. Indeed, the last three decades witnessed many reliable artiﬁcial associative neural networks. See for instance [5], [14], [6], [9], [13], [4].\nHowever, despite common techniques and methods de- ployed in both ﬁelds (e.g., graphical models, iterative algo- rithms, etc), there has been a quantitative difference in terms of another important criterion: the efﬁciency. In communication systems, by using modern coding techniques it has become clear that the number of reliably transmitted codewords over a noisy channel can be made exponential in n, the length of the codewords. However, using current neural networks of size n to memorize a set of randomly chosen patterns, the maximum number of patterns that can be reliably memorized scales linearly in n [8], [14].\nIn search for the reasons beyond the inefﬁciency of the storage capacity of neural networks, we found out that a large body of past work (e.g., [5], [14], [6], [9]) followed a common assumption that a neural network should be able to memorize any subset of patterns drawn randomly from the set of all possible vectors of length n. Although this assumption gives the network a sense of generality, it reduces its storage capacity to a great extent.\nAn interesting question which arises in this context is whether one can increase the storage capacity of neural networks beyond the current linear scaling and achieve results similar to coding theory. To this end, Kumar et al. [7] suggested a new formulation of the problem where only a suitable set of patterns was considered for storing. This way they could show that the performance of neural networks in terms of storage capacity increases signiﬁcantly. Following the same philosophy, we will focus on memorizing a random subset of patterns of length n such that the dimension of the training set is k < n. In other words, we are interested in memorizing a set of patterns that have a certain degree of structure and redundancy. We exploit this structure both to increase the number of patterns that can be memorized (from linear to exponential) and to increase the number of errors that can be corrected when the network is faced with corrupted inputs.\nThe success of [7] is mainly due to forming a bipartite network/graph (as opposed to a complete graph) whose role is to enforce the suitable constraints on the patterns, very similar to the role played by Tanner graphs in coding. More speciﬁcally, one layer is used to feed the patterns to the network (so called variable nodes in coding) and the other takes into account the inherent structure of the input patterns (so called check nodes in coding). A natural way to enforce structures on inputs is to assume that the connectivity matrix of the bipartite graph is orthogonal to all of the input patterns. However, the authors in [7] heavily rely on the fact that the bipartite graph is fully known and given, and satisﬁes some sparsity and expansion properties. The expansion assumption is made to ensure that the resulting set of patterns are resilient against fair amount of noise. Unfortunately, no algorithm for ﬁnding such a bipartite graph was proposed.\nOur main contribution in this paper is to relax the above as- sumptions while achieving better error correction performance. More speciﬁcally, we ﬁrst propose an iterative algorithm that can ﬁnd a sparse bipartite graph that satisﬁes the desired set of constraints. We also provide an upper bound on the block error rate of the method that deploys this learning strategy. We then proceed to devise a multi-layer network whose performance in terms of error tolerance improves signiﬁcantly upon [7] and no longer needs to be an expander.\nIn contrast to the mainstream work in neural associative memories, we focus on non-binary neurons, i.e., neurons that can assume a ﬁnite set of integer values S = {0, 1, . . . , S − 1}\nfor their states (where S > 2). A natural way to interpret the multi-level states is to think of the short-term (normalized) ﬁring rate of a neuron as its output. Neurons can only perform simple operations. In particular, we restrict the operations at each neuron to a linear summation over the inputs, and a possibly non-linear thresholding operation. In particular, a neuron x updates its state based on the states of its neighbors {s i } n i=1 as follows:\n1) It computes the weighted sum h = n i=1 w i s i , where w i denotes the weight of the input link from s i .\n2) It updates its state as x = f (h), where f : R → S is a possibly non-linear function from the ﬁeld of real numbers R to S.\nNeural associative memory aims to memorize C patterns of length n by determining the weighted connectivity matrix of the neural network (learning phase) such that the given patterns are stable states of the network. Furthermore, the network should be able to tolerate a fair amount of noise so that it can return the correct memorized pattern in response to a corrupted query (recall phase). Among the networks with these two abilities, the one with largest C is the most desirable.\nWe ﬁrst focus on learning the connectivity matrix of a neural graph which memorizes a set of patterns having some inherent redundancy. More speciﬁcally, we assume to have C vectors of length n with non-negative integer entries, where these patterns form a subspace of dimension k < n. We would like to memorize these patterns by ﬁnding a set of non-zero vectors w 1 , . . . , w m ∈ R n that are orthogonal to the set of given patterns. Furthermore, we are interested in rather sparse vectors. Putting the training patterns in a matrix X C×n and focusing on one such vector w, we can formulate the problem as:\nw 0 ≤ q and w 2 2 ≥ \t (1b) where q ∈ N determines the degree of sparsity and ∈ R + prevents the all-zero solution. A solution to the above problem yields a sparse bipartite graph which corresponds to the basis vectors of the null space speciﬁed by the patterns in the training set. It can therefore be described by Figure 1 with a connectivity matrix W ∈ R m×n such that X W T = 0.\nIn the recall phase, the neural network is fed with noisy in- puts. A possibly noisy version of an input pattern is initialized as the states of the pattern neurons x 1 , x 2 , . . . , x n . Here, we assume that the noise is integer valued and additive (modulu S). In formula, we have y = W (x µ + z) = W z where z is the noise added to pattern x µ . Hence, we are looking for an algorithm that can use this information to provably eliminate the effect of noise and return the correct pattern.\nRemark 1. A solution in the learning/recall phase is accept- able only if it can be found by simple operations at neurons.\nBefore presenting our solution, we brieﬂy overview the relation between the previous works and the one presented in this paper.\n... ...\nDesigning artiﬁcial associative memories has been an active topic of research for the past three decades. Inspired by the Hebbian learning rule, Hopﬁeld in his seminal work [5] introduced the Hopﬁeld network: an auto-associative neural mechanism of size n with binary state neurons in which patterns are assumed to be binary vectors of length n. The capacity of a Hopﬁeld network under vanishing block error probability was later shown to be O(n/ log(n)) in [8].\nDue to the low capacity of Hopﬁeld networks, extension of associative memories to non-binary neural models has also been explored in the past. For instance, in [6] the authors investigated a multi-state complex-valued neural associative memories for which the estimated capacity is C < 0.15n. Under the same model but using a different learning method, Muezzinoglu et al. [9] showed that the capacity can be increased to C = n. However the complexity of the weight computation mechanism is prohibitive.\nA line of recent work has made considerable efforts to exploit the inherent structure of the patterns in order to increase both capacity and error correction capabilities. Such methods either make use of higher order correlations of patterns or focus merely on those patterns that have some sort of redundancy. As a result, they differ from previous methods for which every possible random set of patterns was considered. Pioneering this prospect, Berrou and Gripon [4] achieved considerable improvements in the pattern retrieval capacity of Hopﬁeld networks, by utilizing Walsh-Hadamard sequences. Using low correlation sequences has also been considered in [13], which results in increasing the storage capacity of Hopﬁeld networks to n without requiring any separate decoding stage.\nIn contrast to the pairwise correlation of the Hopﬁeld model [5], Peretto et al. [11] deployed higher order neural models: the state of the neurons not only depends on the state of their neighbors, but also on the correlation among them. Under this model, they showed that the storage capacity of a higher-order Hopﬁeld network can be improved to C = O(n p−2 ), where p is the degree of correlation considered. The main drawback of this model was again the huge computational complexity required in the learning phase. To address this difﬁculty while being able to capture higher-order correlations, a bipartite\ngraph inspired from iterative coding theory was introduced in [7]. Under the assumptions that the bipartite graph is known, sparse, and expander, the proposed algorithm increased the pattern retrieval capacity to C = O(a n ), for some a > 1. The main drawbacks in the proposed approach is the lack of a learning algorithm as well as the assumption that the weight matrix should be an expander. The sparsity criterion on the other hand, as it was noted by the authors, is necessary in the recall phase and biologically more meaningful.\nIn this paper, we focus on solving the above two problems in [7]. We start by proposing an iterative learning algorithm that identiﬁes a sparse weight matrix W . The weight matrix W should satisfy a set of linear constraints X W T = 0. We then propose a novel network architecture which eliminates the need for the expansion criteria while achieving better performance than the error correction algorithm proposed in [7].\nTo learn a sparse neural graph, we follow ideas borrowed from iterative neural learning [15], [10] and compressive sensing [2], [3]. Constructing a factor-graph model for neural associative memory has been also addressed in [1] where a message-passing algorithm is proposed to memorize any set of random patterns. However, in this paper we focus on memorizing patterns belonging to subspaces with sparsity in mind as well. The difference would again be apparent in the pattern retrieval capacity (linear vs. exponential in network size).\nWe are interested in an iterative algorithm that is simple enough to be implemented by a network of neurons. Therefore, we ﬁrst relax (1) as follows:\nIn the above problem, we have approximated the constraint w 0 ≤ q with g(w) ≤ q since . 0 is not a well-behaved\nfunction. The function g(w) is chosen such that it favors sparsity. For instance one can pick g(w) to be . 1 , which leads to 1 -norm minimizations. In this paper, we consider the function\nwhere σ is chosen appropriately. By calculating the derivative of the objective function and primal-dual optimization tech- niques we obtain the following iterative algorithm for (2) (the details are tedious and left to our technical report [12]):\nInput: pattern matrix X , stopping point p. Output: w\n. Update λ t+1 = λ t + γ( − w 2 2 ) . t ← t + 1.\nwhere t denotes the iteration number, X is the transpose of matrix X , δ and α t are small step sizes and [·] + denotes max(·, 0).\nFor our choice of g(w), the i th entry of the function f (w) = g(w), denoted by f i (w) reduces to 2σw i (1 − tanh(σw 2 i ) 2 ).\nFor very small values of w i , f i (w) w i and for large values of w i , f i (w) 0. Therefore, by looking at (3b) we see that the last term is pushing small values in w(t + 1) towards zero while leaving the larger values intact. Therefore, we remove the last term completely and enforce small entries to zero in each update which in turn enforces sparsity. The ﬁnal iterative learning procedure is shown in Algorithm 1.\nHere, θ t is a positive threshold at iteration t and η(.) θ t is the point-wise soft-thresholding function given below:\nRemark 2. the above choice of soft-theresholding function is very similar to the one selected by Donoho et al. in [3] in order to recover a sparse signal from a set of measurements. The authors prove that their choice of soft-threshold function results in optimal sparsity-undersampling trade-off.\nThe next theorem derives the necessary conditions on α t , λ t and θ t such that Algorithm 1 converges to a sparse solution.\nTheorem 1. If θ t → 0 as t → ∞ and if λ t < a min /(a max − a min ), then there is a proper choice of α t in every iteration t that ensures constant decrease in the objective function\nX .w(t) max . Here a min = min µ x µ 2 / X 2 and a max = max µ x µ 2 / X 2 . For λ t = 0, i.e. w(t) 2 ≥ , picking 0 < α t < 1 ensures gradual convergence.\nSketch of the proof: Let E(t) = y(t) max . We would like to show that E(t + 1) < E(t) for all iterations t. We can write w(t + 1) = w (t) − χ(w (t); θ t ) where w (t) = (1 + 2λ t )w(t) − 2α t X y X\nX \t we will obtain E(t + 1) ≤ D t max E(t) + θ t where D(t) = (1 + 2λ t )I C×C − 2α t X X T X 2\n. Hence we need θ t → 0 as t → ∞ and ensuring D t max < 1. The latter condition is satisﬁed if λ t ≤ a min /(a max − a min ). For the detailed proof, we refer the interested readers to our technical report [12].\nIt must be noted that the above algorithm gives one possible solution to the learning problem (2), as there are multiple local\n2: \t Forward iteration: Calculate the weighted input sum h i = n j=1 W ij x j , for each neuron y i and set:\n \n4: \t Update the state of each pattern neuron j according to x j = x j + sgn(g j ) only if |g j | > ϕ.\nminimums for this problem corresponding to different null- bases of the subspace deﬁned by the patterns in the training set. Any of these vectors are acceptable for the proposed algorithm.\nIn order to have error correction capabilities we propose a new network structure (see Figure 2). To make the description clear and simple we only concentrate on a two-level neural network. However, the generalization of this idea is trivial and left to the reader.\nThe idea behind this new architecture is that we divide the input pattern of size n into L sub-patterns of length n/L. Now we feed each sub-pattern to a neural network which enforces m constraints 1 on the sub-pattern in order to correct the input errors. Such model might be specially useful in cases where the input is modular, similar to the case of memorizing different words of a sentence and enforcing global grammatical constraints on the sentence as a whole, or the case where local sub-patterns have few dominant principle components.\nThe local networks in the ﬁrst level and the global network in the second level use Algorithm 2, which is a variant of the \u201dbit-ﬂipping\u201d method proposed in [7], to correct the errors. Note that if the states of the pattern neurons x i correspond to a pattern from X (i.e., the noise-free case), then for all i = 1, . . . , m we have y i = 0. The quantity g j can be interpreted\nas feedback to pattern neuron x j from the constraint neurons. Hence, the sign of g j provides an indication of the sign of the noise that affects x j , and |g j | indicates the conﬁdence level in the decision regarding the sign of the noise.\nTheorem 2. Let ¯ d and d min be the average and minimum degree of pattern neurons, respectively. Then, Algorithm 2 can correct a single error in the input pattern with probability at least 1 − ¯ d m\nFor the proof, we refer the interested readers to our technical report [12].\nGiven that each local network is able to correct one pattern with high probability, L such networks can correct L input errors if they are separated such that only one error appears in the input of each local network. Otherwise, there would be a probability that the network could not handle the errors. In that case, we feed the overall pattern of length n to the second layer with the connectivity matrix W g , which enforces m g global constraints. And since the probability of correcting two erroneous nodes increases with the input size, we expect to have a better error correction probability in the second layer. Therefore, using this simple scheme we expect to gain a lot in correcting errors in the patterns. In the next section, we provide simulation results which conﬁrm our expectations and show that the block error rate can be improved by a factor of 100 in some cases.\nRemark 3. The number of constraints for the second layer af- fects the gain one obtains in the error performance. Intuitively, if the number of global constraints is large, we are enforcing more constraints so we expect a better error performance. We can think of determining the number even adaptively, i.e. if the error performance that we are getting is unacceptable, we can look deeper in patterns to identify their internal structure by searching for more constraints. This would be a subject of our future research.\nThe following theorem shows that the proposed neural architecture is capable of memorizing an exponential number of patterns in n.\nTheorem 3. Let X be the C × n matrix, formed by C vectors of length n with non-negative integer entries between 0 and S − 1. Furthermore, let k g = rn for some 0 < r < 1. Then, there exists a data set X with C = a rn , a > 1, and rank(X ) = k g < n, such that they can be memorized by the proposed multi-level neural network shown in ﬁgure 2.\nThe proof of the theorem can be found in the technical report [12].\nWe have simulated the proposed learning algorithm in the multi-level architecture to investigate the block error rate of the suggested approach and the gain we obtain in error rates by adding a second level. We constructed 4 local networks, each with n/4 pattern and m constraint nodes.\nWe generated a sample data set of C = 10000 patterns of length n where each block of n/4 belonged to a subspace of dimension k < n/4. Note that C can be an exponential number in n. However, we selected C = 10000 as an example to show the performance of the algorithm because even for small values of k, and exponential number in k will become too large to handle numerically. The result of the learning algorithm is four different local connectivity matrices W 1 , . . . , W 4 as well as a global weight matrix W g . The number of local constraints was m = n/4 − k and the number of global constraints was m g = n − k g , where k g is dimension of the subspace for overall pattern.\nTable VI-A shows the average number of iterations executed before convergence is reached for different local and global constraints. It also gives the average sparsity ratio for the columns of weight matrices. The sparsity ratio is deﬁned as ρ = κ/n, where κ is the number of non-zero elements.\nFor the recall phase, in each trial we pick a pattern randomly from the training set, corrupt a given number of its symbols with ±1 noise and use the suggested algorithm to correct the errors. As mentioned earlier, the errors are corrected ﬁrst at the local and the at the global level. When ﬁnished, we compare the output of the ﬁrst and the second level with the original (uncorrupted) pattern x. An error is declared if the output does not match at each stage.\nFigure 3 illustrates the pattern error rates n = 400 with two different values of k g = 100 and k g = 200. The results are also compared to that of the bit-ﬂipping algorithm in [7] to show the improved performance of the proposed algorithm. As one can see, having a larger number of constraints at the global level, i.e. having a smaller k g , will result in better pattern error rates at the end of the second stage.\nTable VI-B shows the gain we obtain by adding an addi- tional second level to the network architecture. The gain is calculated as the ratio between the pattern error rate at the output of the ﬁrst and the second level.\nThe authors would like to thank Prof. Amin Shokrollahi for helpful comments and discussions. This work was supported by Grant 228021-ECCSciEng of the European Research Coun- cil."},"refs":[{"authors":[{"name":"A. Braunstei"},{"name":"R. Zecchin"}],"title":{"text":"Learning by message-passing in networks of discrete synapses , Phys"}},{"authors":[{"name":"E. Cand"},{"name":"T. Ta"}],"title":{"text":"Near optimal signal recovery from random projections: Universal encoding strategies?"}},{"authors":[{"name":"D. L. Donoh"},{"name":"A. Malek"},{"name":"A. Montanar"}],"title":{"text":"Message passing algorithms for compressed sensing , Proc"}},{"authors":[{"name":"V. Gripo"},{"name":"C. Berro"}],"title":{"text":"Sparse neural networks with large learning diversity , IEEE Trans"}},{"authors":[{"name":"J. J. Hopﬁel"}],"title":{"text":"Neural networks and physical systems with emergent collective computational abilities , Proc"}},{"authors":[{"name":"S. Jankowsk"},{"name":"A. Lozowsk"}],"title":{"text":"J"}},{"authors":[{"name":"R. Kuma"},{"name":"H. Salavat"},{"name":"A. Shokrollah"}],"title":{"text":"K"}},{"authors":[{"name":"R. McEliec"},{"name":"E. Posne"},{"name":"E. Rodemic"},{"name":"S. Venkates"}],"title":{"text":"The capacity of the Hopﬁeld associative memory , IEEE Trans"}},{"authors":[{"name":"M. K. Muezzinogl"},{"name":"C. Guzeli"},{"name":"J. M. Zurad"}],"title":{"text":"A new design method for the complex-valued multistate Hopﬁeld associative memory , IEEE Trans"}},{"authors":[{"name":"E. Oj"},{"name":"T. Kohone"}],"title":{"text":"The subspace learning algorithm as a formalism for pattern recognition and neural networks , Neural Networks, Vol"}},{"authors":[{"name":"P. Perett"},{"name":"J. J. Nie"}],"title":{"text":"Long term memory storage capacity of multicon- nected neural networks , Biological Cybernetics, Vol"}},{"authors":[{"name":"A. H. Salavat"},{"name":"A. Karbas"}],"title":{"text":"Multi-Level Error-Resilient Neural Networks with Learning, arXiv:1202"}},{"authors":[{"name":"A. H. Salavat"},{"name":"K. R. Kuma"},{"name":"W. Gerstne"},{"name":"A. Shokrollah"}],"title":{"text":"Neural Pre-coding Increases the Pattern Retrieval Capacity of Hopﬁeld and Bidirectional Associative Memories , IEEE Intl"}},{"authors":[{"name":"S. S. Venkates"},{"name":"D. Psalti"}],"title":{"text":"Linear and logarithmic capacities in associative neural networks , IEEE Trans"}},{"authors":[{"name":"L. X"},{"name":"A. Krzyza"},{"name":"E. Oj"},{"name":"J. Neur"}],"title":{"text":"Neural nets for dual subspace pattern recognition method, Int"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569567009.pdf"},"links":[{"id":"1569566567","weight":3},{"id":"1569564843","weight":3},{"id":"1569566527","weight":5},{"id":"1569566485","weight":4},{"id":"1569565383","weight":3},{"id":"1569565883","weight":6},{"id":"1569564889","weight":4},{"id":"1569565223","weight":2},{"id":"1569566725","weight":2},{"id":"1569565663","weight":3},{"id":"1569565377","weight":3},{"id":"1569566385","weight":6},{"id":"1569564635","weight":3},{"id":"1569565867","weight":5},{"id":"1569566799","weight":8},{"id":"1569565067","weight":3},{"id":"1569559665","weight":3},{"id":"1569561021","weight":6},{"id":"1569564669","weight":6},{"id":"1569565691","weight":4},{"id":"1569566815","weight":4},{"id":"1569566875","weight":5},{"id":"1569564605","weight":5},{"id":"1569559617","weight":3},{"id":"1569566981","weight":3},{"id":"1569566321","weight":7},{"id":"1569566605","weight":4},{"id":"1569565489","weight":2},{"id":"1569566683","weight":4},{"id":"1569566855","weight":5},{"id":"1569560629","weight":3},{"id":"1569566869","weight":7},{"id":"1569565097","weight":4},{"id":"1569566227","weight":2},{"id":"1569566091","weight":5},{"id":"1569559259","weight":7},{"id":"1569566697","weight":4},{"id":"1569566597","weight":4},{"id":"1569565551","weight":4},{"id":"1569565711","weight":15},{"id":"1569566761","weight":3},{"id":"1569566943","weight":3},{"id":"1569565091","weight":7},{"id":"1569566591","weight":9},{"id":"1569566571","weight":5},{"id":"1569552245","weight":3},{"id":"1569565607","weight":4},{"id":"1569565495","weight":3},{"id":"1569559967","weight":2},{"id":"1569567045","weight":2},{"id":"1569565227","weight":9},{"id":"1569564481","weight":4},{"id":"1569560833","weight":5},{"id":"1569566415","weight":7},{"id":"1569564805","weight":10},{"id":"1569567005","weight":6},{"id":"1569566469","weight":2},{"id":"1569566081","weight":8},{"id":"1569565613","weight":2},{"id":"1569565355","weight":4},{"id":"1569564469","weight":4},{"id":"1569565931","weight":4},{"id":"1569566373","weight":3},{"id":"1569566647","weight":3},{"id":"1569551535","weight":5},{"id":"1569566765","weight":4},{"id":"1569564897","weight":3},{"id":"1569565775","weight":4},{"id":"1569566871","weight":9},{"id":"1569566653","weight":2},{"id":"1569565461","weight":6},{"id":"1569564731","weight":4},{"id":"1569565171","weight":5},{"id":"1569566207","weight":7},{"id":"1569564227","weight":2},{"id":"1569558325","weight":6},{"id":"1569565837","weight":6},{"id":"1569566671","weight":5},{"id":"1569566303","weight":4},{"id":"1569564233","weight":3},{"id":"1569566459","weight":5},{"id":"1569567535","weight":2},{"id":"1569563411","weight":4},{"id":"1569560427","weight":2},{"id":"1569564401","weight":3},{"id":"1569564849","weight":4},{"id":"1569559541","weight":5},{"id":"1569565317","weight":2},{"id":"1569566363","weight":2},{"id":"1569566319","weight":2},{"id":"1569565123","weight":2},{"id":"1569566941","weight":4},{"id":"1569566033","weight":3},{"id":"1569566739","weight":3},{"id":"1569555811","weight":4},{"id":"1569558459","weight":5},{"id":"1569565609","weight":3},{"id":"1569565291","weight":7},{"id":"1569564203","weight":6},{"id":"1569566821","weight":4},{"id":"1569556713","weight":2},{"id":"1569562685","weight":3},{"id":"1569566751","weight":2},{"id":"1569566467","weight":3},{"id":"1569565771","weight":2},{"id":"1569566157","weight":3},{"id":"1569560613","weight":2},{"id":"1569566903","weight":4},{"id":"1569566999","weight":2},{"id":"1569565859","weight":4},{"id":"1569564249","weight":3},{"id":"1569565809","weight":6},{"id":"1569566843","weight":4},{"id":"1569566579","weight":2},{"id":"1569558483","weight":3},{"id":"1569566563","weight":5},{"id":"1569566089","weight":2},{"id":"1569559221","weight":3},{"id":"1569556091","weight":4},{"id":"1569565347","weight":6},{"id":"1569566925","weight":6},{"id":"1569564387","weight":5},{"id":"1569565455","weight":4},{"id":"1569566497","weight":10},{"id":"1569566795","weight":4},{"id":"1569566963","weight":3},{"id":"1569561679","weight":11},{"id":"1569566709","weight":3},{"id":"1569564989","weight":4},{"id":"1569566787","weight":2},{"id":"1569566717","weight":3},{"id":"1569560721","weight":3},{"id":"1569566015","weight":6},{"id":"1569565897","weight":8},{"id":"1569551763","weight":3},{"id":"1569565953","weight":3},{"id":"1569566895","weight":5},{"id":"1569566889","weight":3},{"id":"1569565709","weight":2},{"id":"1569566749","weight":3},{"id":"1569566269","weight":6},{"id":"1569564189","weight":5},{"id":"1569564195","weight":4},{"id":"1569561513","weight":5},{"id":"1569566985","weight":4},{"id":"1569564613","weight":3},{"id":"1569565369","weight":3},{"id":"1569566865","weight":3},{"id":"1569565321","weight":8},{"id":"1569558785","weight":2},{"id":"1569564647","weight":3},{"id":"1569566095","weight":2},{"id":"1569566193","weight":6},{"id":"1569564271","weight":4},{"id":"1569564337","weight":3},{"id":"1569565907","weight":3},{"id":"1569566343","weight":4},{"id":"1569564311","weight":3},{"id":"1569565803","weight":4},{"id":"1569565785","weight":5},{"id":"1569566239","weight":3},{"id":"1569566167","weight":4},{"id":"1569566679","weight":9},{"id":"1569565989","weight":4},{"id":"1569566575","weight":8},{"id":"1569563981","weight":3},{"id":"1569561085","weight":3},{"id":"1569566419","weight":2},{"id":"1569566617","weight":3},{"id":"1569559565","weight":5},{"id":"1569566905","weight":4},{"id":"1569566753","weight":2},{"id":"1569566311","weight":4},{"id":"1569563307","weight":6},{"id":"1569566063","weight":4},{"id":"1569558681","weight":3},{"id":"1569566759","weight":5},{"id":"1569565589","weight":2},{"id":"1569559195","weight":4},{"id":"1569566149","weight":7},{"id":"1569559995","weight":2},{"id":"1569566657","weight":7},{"id":"1569558859","weight":10},{"id":"1569565199","weight":5},{"id":"1569565213","weight":3},{"id":"1569565365","weight":4},{"id":"1569566643","weight":2},{"id":"1569566511","weight":10},{"id":"1569566719","weight":2},{"id":"1569566991","weight":6},{"id":"1569565841","weight":3},{"id":"1569566975","weight":3},{"id":"1569566369","weight":4},{"id":"1569566531","weight":11},{"id":"1569567665","weight":5},{"id":"1569561143","weight":3},{"id":"1569566581","weight":2},{"id":"1569565833","weight":2},{"id":"1569566489","weight":3},{"id":"1569564611","weight":5},{"id":"1569565535","weight":4},{"id":"1569562867","weight":7},{"id":"1569566395","weight":5},{"id":"1569565667","weight":3},{"id":"1569566845","weight":3},{"id":"1569566325","weight":9},{"id":"1569566423","weight":4},{"id":"1569565257","weight":3},{"id":"1569564795","weight":5},{"id":"1569567015","weight":4},{"id":"1569559805","weight":9},{"id":"1569566437","weight":3},{"id":"1569566811","weight":3},{"id":"1569566851","weight":2},{"id":"1569558901","weight":3},{"id":"1569565735","weight":5},{"id":"1569559111","weight":3},{"id":"1569566687","weight":3},{"id":"1569562285","weight":2},{"id":"1569564881","weight":2},{"id":"1569566939","weight":3},{"id":"1569553537","weight":4},{"id":"1569565427","weight":14},{"id":"1569566403","weight":3},{"id":"1569565839","weight":2},{"id":"1569565915","weight":3},{"id":"1569552251","weight":3},{"id":"1569566139","weight":3},{"id":"1569553519","weight":2},{"id":"1569567051","weight":3},{"id":"1569566885","weight":2},{"id":"1569564441","weight":7},{"id":"1569566231","weight":4},{"id":"1569564209","weight":2},{"id":"1569566513","weight":4},{"id":"1569566425","weight":4},{"id":"1569554881","weight":2},{"id":"1569554971","weight":6},{"id":"1569565501","weight":3},{"id":"1569566899","weight":3},{"id":"1569566445","weight":4},{"id":"1569566209","weight":3},{"id":"1569566649","weight":3},{"id":"1569566791","weight":3},{"id":"1569565559","weight":7},{"id":"1569566371","weight":4},{"id":"1569565655","weight":3},{"id":"1569566909","weight":3},{"id":"1569566127","weight":4},{"id":"1569565151","weight":2},{"id":"1569558985","weight":5},{"id":"1569563763","weight":7},{"id":"1569565087","weight":2},{"id":"1569566473","weight":9},{"id":"1569564857","weight":5},{"id":"1569564333","weight":7},{"id":"1569566913","weight":9},{"id":"1569566809","weight":6},{"id":"1569566629","weight":3},{"id":"1569566257","weight":4},{"id":"1569565033","weight":10},{"id":"1569566447","weight":4},{"id":"1569566357","weight":2},{"id":"1569565817","weight":2},{"id":"1569565847","weight":8},{"id":"1569564353","weight":5},{"id":"1569563897","weight":4},{"id":"1569557083","weight":4},{"id":"1569565887","weight":3},{"id":"1569565929","weight":2},{"id":"1569566141","weight":5},{"id":"1569553591","weight":2},{"id":"1569565055","weight":4},{"id":"1569563231","weight":2},{"id":"1569565633","weight":3},{"id":"1569566661","weight":3},{"id":"1569565279","weight":5},{"id":"1569555879","weight":4},{"id":"1569566115","weight":10},{"id":"1569565219","weight":3},{"id":"1569558509","weight":2},{"id":"1569554759","weight":4},{"id":"1569565595","weight":4},{"id":"1569565185","weight":5},{"id":"1569566773","weight":6},{"id":"1569564985","weight":2},{"id":"1569565095","weight":2},{"id":"1569566223","weight":3},{"id":"1569558401","weight":2},{"id":"1569566553","weight":4},{"id":"1569564969","weight":2},{"id":"1569565029","weight":5},{"id":"1569561245","weight":2},{"id":"1569566505","weight":5},{"id":"1569565393","weight":2},{"id":"1569565933","weight":6},{"id":"1569562207","weight":7},{"id":"1569565705","weight":3},{"id":"1569566191","weight":3},{"id":"1569567033","weight":6},{"id":"1569565527","weight":6},{"id":"1569566853","weight":5},{"id":"1569566603","weight":2},{"id":"1569567029","weight":4},{"id":"1569565363","weight":2},{"id":"1569566159","weight":4},{"id":"1569566695","weight":6},{"id":"1569566051","weight":4},{"id":"1569561379","weight":3},{"id":"1569565909","weight":2},{"id":"1569561123","weight":8},{"id":"1569565467","weight":3},{"id":"1569566655","weight":6},{"id":"1569566673","weight":3},{"id":"1569567235","weight":3},{"id":"1569565441","weight":2},{"id":"1569565739","weight":2},{"id":"1569565311","weight":3},{"id":"1569566233","weight":2},{"id":"1569566667","weight":6},{"id":"1569566297","weight":2},{"id":"1569566893","weight":4},{"id":"1569566317","weight":7},{"id":"1569564097","weight":4},{"id":"1569560997","weight":3},{"id":"1569563845","weight":4},{"id":"1569566407","weight":4},{"id":"1569560349","weight":3},{"id":"1569566501","weight":5},{"id":"1569565741","weight":5},{"id":"1569566275","weight":10},{"id":"1569566481","weight":9},{"id":"1569565545","weight":7},{"id":"1569566857","weight":6},{"id":"1569565961","weight":4},{"id":"1569566387","weight":4},{"id":"1569566245","weight":5},{"id":"1569560503","weight":7},{"id":"1569565463","weight":3},{"id":"1569564339","weight":2},{"id":"1569566219","weight":3},{"id":"1569565439","weight":2},{"id":"1569566229","weight":10},{"id":"1569566949","weight":2},{"id":"1569566133","weight":10},{"id":"1569562551","weight":2},{"id":"1569563395","weight":3},{"id":"1569566901","weight":2},{"id":"1569551347","weight":3},{"id":"1569565415","weight":5},{"id":"1569561623","weight":3},{"id":"1569566383","weight":3},{"id":"1569564485","weight":4},{"id":"1569565155","weight":2},{"id":"1569566631","weight":5},{"id":"1569565571","weight":3},{"id":"1569565885","weight":4},{"id":"1569566177","weight":6},{"id":"1569565493","weight":5},{"id":"1569557633","weight":4},{"id":"1569564411","weight":3},{"id":"1569566805","weight":4},{"id":"1569559199","weight":4},{"id":"1569566929","weight":2},{"id":"1569566293","weight":5},{"id":"1569565665","weight":7},{"id":"1569566831","weight":40},{"id":"1569565549","weight":3},{"id":"1569565523","weight":4},{"id":"1569565611","weight":3},{"id":"1569557715","weight":2},{"id":"1569564175","weight":4},{"id":"1569566983","weight":8},{"id":"1569566779","weight":4},{"id":"1569566097","weight":5},{"id":"1569566479","weight":7},{"id":"1569556361","weight":4},{"id":"1569566431","weight":2},{"id":"1569565397","weight":3},{"id":"1569566873","weight":6},{"id":"1569565765","weight":5},{"id":"1569565925","weight":2},{"id":"1569565435","weight":4},{"id":"1569557275","weight":4},{"id":"1569565263","weight":6},{"id":"1569565215","weight":3},{"id":"1569565093","weight":2},{"id":"1569565385","weight":6},{"id":"1569565575","weight":18},{"id":"1569565919","weight":4},{"id":"1569565181","weight":7},{"id":"1569566711","weight":8},{"id":"1569565241","weight":5},{"id":"1569566927","weight":5},{"id":"1569565661","weight":3},{"id":"1569565865","weight":4},{"id":"1569566887","weight":8},{"id":"1569565273","weight":3},{"id":"1569566267","weight":2},{"id":"1569564131","weight":4},{"id":"1569552037","weight":3},{"id":"1569564919","weight":8},{"id":"1569565511","weight":3},{"id":"1569566737","weight":8},{"id":"1569566429","weight":3},{"id":"1569561221","weight":2},{"id":"1569564595","weight":3},{"id":"1569566917","weight":9},{"id":"1569566035","weight":3},{"id":"1569565353","weight":10},{"id":"1569564683","weight":4},{"id":"1569564305","weight":4},{"id":"1569564283","weight":4},{"id":"1569564291","weight":3},{"id":"1569566691","weight":4},{"id":"1569565421","weight":3},{"id":"1569566547","weight":4},{"id":"1569566651","weight":3},{"id":"1569565177","weight":3},{"id":"1569566823","weight":4},{"id":"1569566595","weight":10},{"id":"1569566677","weight":3},{"id":"1569565349","weight":6},{"id":"1569552025","weight":2},{"id":"1569566137","weight":4},{"id":"1569566237","weight":2},{"id":"1569566283","weight":2},{"id":"1569566529","weight":14},{"id":"1569565375","weight":5},{"id":"1569566715","weight":6},{"id":"1569565237","weight":10},{"id":"1569566639","weight":5},{"id":"1569566755","weight":5},{"id":"1569566819","weight":4},{"id":"1569565041","weight":5},{"id":"1569564703","weight":5},{"id":"1569566713","weight":2},{"id":"1569565541","weight":3},{"id":"1569565597","weight":2},{"id":"1569566813","weight":4},{"id":"1569565293","weight":2},{"id":"1569566771","weight":3},{"id":"1569562277","weight":6},{"id":"1569566641","weight":2},{"id":"1569565425","weight":7},{"id":"1569566977","weight":2},{"id":"1569564247","weight":2},{"id":"1569564437","weight":12},{"id":"1569566533","weight":8},{"id":"1569563975","weight":2},{"id":"1569551905","weight":2},{"id":"1569564861","weight":6},{"id":"1569565457","weight":3},{"id":"1569564787","weight":13},{"id":"1569566487","weight":4},{"id":"1569565529","weight":10},{"id":"1569556759","weight":3},{"id":"1569566619","weight":3},{"id":"1569565271","weight":2},{"id":"1569561185","weight":3},{"id":"1569566075","weight":3},{"id":"1569566397","weight":6},{"id":"1569566301","weight":2},{"id":"1569558779","weight":2},{"id":"1569565669","weight":2},{"id":"1569565233","weight":4},{"id":"1569563721","weight":3},{"id":"1569566001","weight":3},{"id":"1569565593","weight":4},{"id":"1569560235","weight":3},{"id":"1569566817","weight":4},{"id":"1569564157","weight":3},{"id":"1569566389","weight":5},{"id":"1569566435","weight":2},{"id":"1569567483","weight":4},{"id":"1569566911","weight":3},{"id":"1569564923","weight":6},{"id":"1569565367","weight":3},{"id":"1569566299","weight":4},{"id":"1569564281","weight":3},{"id":"1569564769","weight":2},{"id":"1569565769","weight":5},{"id":"1569566171","weight":4},{"id":"1569566601","weight":2},{"id":"1569565805","weight":6},{"id":"1569561713","weight":3},{"id":"1569566933","weight":2},{"id":"1569563919","weight":3},{"id":"1569566577","weight":4},{"id":"1569557851","weight":3},{"id":"1569567691","weight":3},{"id":"1569565389","weight":3},{"id":"1569559919","weight":7},{"id":"1569565861","weight":5},{"id":"1569566147","weight":11},{"id":"1569565537","weight":3},{"id":"1569559523","weight":3},{"id":"1569566057","weight":3},{"id":"1569562367","weight":2},{"id":"1569560785","weight":5},{"id":"1569565561","weight":4},{"id":"1569565631","weight":5},{"id":"1569560213","weight":2},{"id":"1569566457","weight":2},{"id":"1569555891","weight":32},{"id":"1569566847","weight":2},{"id":"1569565997","weight":5},{"id":"1569563425","weight":6},{"id":"1569565035","weight":9},{"id":"1569559597","weight":4},{"id":"1569564961","weight":15},{"id":"1569559251","weight":4},{"id":"1569565089","weight":2},{"id":"1569567013","weight":7},{"id":"1569566583","weight":2},{"id":"1569561861","weight":4},{"id":"1569565337","weight":3},{"id":"1569565737","weight":6},{"id":"1569560459","weight":4},{"id":"1569564463","weight":3},{"id":"1569565853","weight":9},{"id":"1569550425","weight":3},{"id":"1569566273","weight":4},{"id":"1569564123","weight":11},{"id":"1569566341","weight":3},{"id":"1569565889","weight":3},{"id":"1569566635","weight":5},{"id":"1569566611","weight":6},{"id":"1569563725","weight":2},{"id":"1569551539","weight":7},{"id":"1569564505","weight":2},{"id":"1569565165","weight":3},{"id":"1569565565","weight":5},{"id":"1569565635","weight":3},{"id":"1569561397","weight":3},{"id":"1569565731","weight":3},{"id":"1569566797","weight":9},{"id":"1569566125","weight":3},{"id":"1569566413","weight":3},{"id":"1569565707","weight":6},{"id":"1569565113","weight":11},{"id":"1569566375","weight":4},{"id":"1569565143","weight":2},{"id":"1569564257","weight":3},{"id":"1569565583","weight":17},{"id":"1569566555","weight":2},{"id":"1569565373","weight":5},{"id":"1569566973","weight":7},{"id":"1569561579","weight":4},{"id":"1569566449","weight":3},{"id":"1569566987","weight":3},{"id":"1569565031","weight":3},{"id":"1569564755","weight":19},{"id":"1569551541","weight":3},{"id":"1569565619","weight":2},{"id":"1569566839","weight":5},{"id":"1569551751","weight":3},{"id":"1569558697","weight":2},{"id":"1569565139","weight":8},{"id":"1569566663","weight":5},{"id":"1569564419","weight":2},{"id":"1569565579","weight":4},{"id":"1569566067","weight":5},{"id":"1569566825","weight":6},{"id":"1569566241","weight":9},{"id":"1569564807","weight":5},{"id":"1569566609","weight":3},{"id":"1569563007","weight":4},{"id":"1569566113","weight":3},{"id":"1569566443","weight":8},{"id":"1569566727","weight":9},{"id":"1569565315","weight":4},{"id":"1569565515","weight":2},{"id":"1569566417","weight":2},{"id":"1569560581","weight":9},{"id":"1569559233","weight":3}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S6.T8.4","endtime":"12:50","authors":"Amin Karbasi, Amir Hesam Salavati","date":"1341318600000","papertitle":"Multi-Level Error-Resilient Neural Networks","starttime":"12:30","session":"S6.T8: Probability and Estimation","room":"Stratton (491)","paperid":"1569567009"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"28","spectral28":"5","spectral32":"22","spectral14":"13","spectral20":"14","spectral9":"6","spectral25":"19","spectral42":"5","spectral3":"1","spectral47":"8","spectral17":"3","louvain":"618","spectral36":"31","spectral39":"37","spectral10":"4","spectral15":"5","spectral33":"10","spectral5":"2","spectral21":"10","spectral44":"4","spectral26":"22","spectral40":"37","spectral8":"1","spectral11":"4","spectral4":"3","spectral37":"34","spectral48":"32","spectral22":"20","spectral23":"5","spectral12":"9","spectral50":"9","spectral19":"8","spectral34":"22","spectral45":"4","spectral7":"5","spectral49":"27","spectral38":"28","spectral24":"22","spectral13":"1","spectral31":"3","spectral29":"14","spectral35":"3","spectral30":"19","spectral41":"19","spectral27":"25","spectral18":"5","spectral46":"0","spectral2":"0","spectral16":"5"}}

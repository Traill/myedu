{"id":"1569558901","paper":{"title":{"text":"Snake-in-the-Box Codes for Rank Modulation"},"authors":[{"name":"Yonatan Yehezkeally"},{"name":"Moshe Schwartz"}],"abstr":{"text":"Abstract\u2014Motivated by the rank-modulation scheme with applications to ﬂash memory, we consider Gray codes capable of detecting a single error, also known as snake-in-the-box codes. We study two error metrics: Kendall\u2019s τ-metric, which applies to charge-constrained errors, and the ∞ -metric, which is useful in the case of limited-magnitude errors. In both cases we construct snake-in-the-box codes with rate asymptotically tending to 1.\nIndex Terms\u2014Snake-in-the-box codes, rank modulation, per- mutations, ﬂash memory"},"body":{"text":"Flash memory is a non-volatile storage medium which is electrically programmable and erasable. Its current wide use is motivated by its high storage density and relative low cost. Among the chief disadvantages of ﬂash memories is their inherent asymmetry between cell programming (injecting cells with charge) and cell erasure (removing charge from cells). While single cells can be programmed with relative ease, in the current architecture, the process of erasure can only be performed by completely depleting large blocks of cells of their charge. Moreover, the removal of charge from cells physically damages them over time.\nThis issue is exacerbated as a result of the ever-present demand for denser memory: smaller cells are more delicate, and are damaged faster during erasure. They also contain less charge and are therefore more prone to error. In addition, ﬂash memories, at present, use multilevel cells, where charge-levels are quantized to simulate a ﬁnite alphabet \u2013 the more levels, the less safety margins are left, and data integrity is compro- mised. Thus, over-programming (increasing a cell\u2019s charge- level above the designated mark) is a real problem, requiring a costly and damaging erasure cycle. Hence, in a programming cycle, charge-levels are usually made to gradually approach the desirable amount, making for lengthier programming cycles as well (see [3]).\nIn an effort to counter these effects, a different modulation scheme has recently been suggested for ﬂash memories \u2013 rank modulation [11]. This scheme calls for the representation of the data stored in a group of cells in the permutation suggested by their relative charge-levels. That is, if c 1 , c 2 , . . . , c n ∈ R represent the charge-levels of n ∈ N cells, then that group of cells is said to encode that permutation σ ∈ S n such that:\nThis scheme eliminates the need for discretization of charge- levels. In addition, rank modulation also improves the mem- ory\u2019s robustness against other noise types. Retention, the process of slow charge leakage from cells, tends to affect all cells with a similar trend [3]. Since rank modulation stores information in the differences between charge-levels rather than their absolute values, it offers more resilience against that type of noise. It is also worth noting that the advantages of rank modulation have been experimentally applied to phase- change memory with promising results (see [16]).\nThe Gray code [8] was ﬁrst introduced as a sequence of distinct binary vectors of ﬁxed length, where every adjacent pair differs in a single coordinate. It has since been gener- alized to sequences of states over other spaces, where each state is derived from the former by a transformation from a predetermined set of allowed transformations (see [17] for an excellent survey). Among these, [11] studied Gray odes over permutations, and presented such codes traversing the entire group of permutations. In this fashion, it was suggested that a set of n rank-modulation cells could implement a single logical multilevel cell with n! levels, where increasing the logical cell\u2019s level by 1 corresponds to a single transition in the code. This allows for a natural integration of rank modulation with other multilevel approaches such as rewriting schemes [4], [9], [10], [21]. This was done by restricting the allowed transformations to \u201cpush-to-the-top\u201d operations, namely only programming a group of cells by increasing the charge-level of a single cell above that of all other cells in the group. The use of such Gray codes allows for faster cell programming and eliminates overshoot problems (see [11]). In the context of ﬂash memory, \u201cpush-to-the-top\u201d operations have also been used in [6], [7]. We also note that generating permutations using \u201cpush-to-the-top\u201d operations is of independent interest, called \u201cnested cycling\u201d in [18] (see also references therein), motivated by a fast \u201cpush-to-the-top\u201d operation 1 (cycling) available on some computer architectures.\nOther recent works have explored error-correcting codes for rank modulation, where different types of errors are addressed by a careful choice of metric. In [2], [12], [15], Kendall\u2019s τ- metric was considered, since a small charge-constrained error\ntranslates into a small distance in the metric. In contrast, the ∞ -metric was used in [14], [19], as small distances in this\nIn this paper, we explore Gray codes for rank modulation which detect a single error, under Kendall\u2019s τ-metric (further results in the ∞ -metric are mentioned in the conclusion to this paper). Such codes are known as snake-in-the-box codes, and have been studied extensively for binary vectors with the Hamming metric and with single-bit ﬂips as allowable transitions (see [1] and references therein).\nThe paper is organized as follows: In Section II we present basic notation and deﬁnitions. In Section III we review prop- erties of Kendall\u2019s τ-metric, then present a recursive construc- tion of snake-in-the-box codes over the alternating groups of odd orders with rate asymptotically tending to 1. We conclude in Section IV with a description of further results given without proof, along with some ad-hoc results, and open questions. Some proofs for stated results are omitted due to the limited space; they can be found in the journal version of this work, to appear in [22].\nWe shall denote a permutation σ on n elements by σ = [ σ ( 1 ) , σ ( 2 ) , . . . , σ ( n )] . This form is called the vector notation for permutations. We let S n be the group of all permutations on [ n ] . For σ , τ ∈ S n , their composition, denoted στ, is the permutation for which στ ( i ) = σ ( τ ( i )) for all i ∈ [ n ] . It is well known that | S n | = n!.\nA cycle, denoted ( a 1 , a 2 , . . . , a k ) , is a permutation mapping a i → a i+1 for all i ∈ [ k − 1 ] , as well as a k → a 1 . We shall occasionally use cycle notation in which a permutation is described as a composition of cycles. We also recall that any permutation may be represented as a composition of cycles of size 2 (known as transpositions), and that the parity of the number of transpositions does not depend on the decomposition. Thus we have even and odd permutations. We let A n be the subgroup of all even permutations on [ n ] , called the alternating group of order n. Again, it is well known that\nDeﬁnition 1. Given a set S and a subset of transformations T ⊆ { f | f : S → S } , a Gray code over S, using transitions T, of size M, is a sequence C = ( c 0 , c 1 , . . . , c M−1 ) of M distinct elements of S, called codewords, such that for all j ∈ [ M − 1 ] there exists t ∈ T such that c j = t ( c j−1 ) .\nAlternatively, when the original permutation c 0 is known (or irrelevant), we use a slight abuse of notation in referring to the sequence of transformations ( t k 1 , . . . , t k M − 1 ) generating the code (i.e., c j = t k j ( c j−1 ) ) as the code itself.\nIn the above deﬁnition, when M = | S | the Gray code is called complete. If there exists t ∈ T such that t ( c M−1 ) = c 0 the Gray code is cyclic, M is called its period, and we shall, when listing the code by its sequence of transformations, include t k M = t at the end of the list. The rate of C, denoted\nIn the context of rank modulation for ﬂash memories, the set of transformations T comprises of \u201cpush-to-the-top\u201d operations, ﬁrst used in [11], and later also in [7], [20]. We denote by t i : S n → S n the \u201cpush-to-the-top\u201d operation on index i, i.e.,\nand throughout the paper we set T = { t 2 , t 3 , . . . , t n } . We also note that, in cycle notation,\nFor ease of presentation only, we also denote by t i the \u201cpush-to-the-bottom\u201d operation on index n + 1 − i, i.e.,\nLet d : S × S → N ∪ { 0 } be a distance function inducing a metric M over S. Given a transmitted codeword c ∈ C and its received version ˜c ∈ S, we say a single error occurred if d ( c, ˜c ) = 1. We are interested in Gray codes capable of detecting single errors, which we now deﬁne.\nDeﬁnition 2. Let M be a metric over S induced by a distance measure d. A snake-in-the-box code over M and S, using transitions T, is a Gray code C over S and using T, in which for every pair of distinct elements c, c ∈ C, c = c , one has d ( c, c ) 2.\nSince throughout this paper our ambient space is S n , and the transformations we use are the \u201cpush-to-the-top\u201d operations T, we shall abbreviate our notation and call a snake-in-the-box code of size M an ( n, M, M) -snake , or an M -snake . We will be considering two metrics in the next sections: Kendall\u2019s τ- metric, K , and the ∞ -metric, with their respective K -snakes and ∞ -snakes.\nKendall\u2019s τ-metric [13], denoted K , is induced by the bubble-sort distance which measures the minimal amount of adjacent transpositions required to transform one permutation into the other. For example, the distance between the permu- tations [ 2, 1, 4, 3 ] and [ 2, 4, 3, 1 ] is 2, as\nis a shortest sequence of adjacent transpositions between the two. More formally, for α , β ∈ S n , as noted in [12],\nThe metric K was ﬁrst introduced by Kendall [13] in the study of ranking in statistics. It was observed in [12] that a bounded distance in Kendall\u2019s τ-metric models errors caused\nby bounded changes in charge-levels of cells in the ﬂash memory. Error-correcting codes for this metric were studied in [2], [12], [15].\nWe let Kendall\u2019s τ adjacency graph of order n ∈ N be the graph G n = ( V n , E n ) whose vertices are permutations on n elements (i.e., V n = S n ), and { α , β } ∈ E n if and only if d K ( α , β ) = 1. It is well known that Kendall\u2019s τ-metric is graphic [5], i.e., for every α , β ∈ S n , d K ( α , β ) equals the length of the shortest path between the two in G n .\nWe begin the construction process by restricting ourselves to Gray codes using only \u201cpush-to-the-top\u201d operations on odd indices. The following lemma provides the motivation for this restriction.\nLemma 3. A Gray code over S n using only \u201cpush-to-the-top\u201d operations on odd indices is a K -snake.\nLemma 3 saves us the need to check whether a Gray code is in fact a K -snake, at the cost of restricting the set of allowed transitions (and the size of the resulting code, although Theorems 12,13, presented below, work to mitigate this concern). In particular, if n is even, the last element cannot be moved.\nBy starting with an even permutation, and using only \u201cpush- to-the-top\u201d operations on odd indices, we get a sequence of even permutations. Thus, throughout this part, the context of the alternating group A 2n+1 is assumed, where n ∈ N.\nThe construction we are about to present is recursive in na- ture. As a base for the recursion, we note that three consecutive \u201cpush-to-the-top\u201d operations on the 3rd index of permutations in A 3 constitute a complete cyclic ( 3, 3, K) -snake:\nWe shall extend C 3 to the next order as a running example alongside the general construction below.\nNow, assume that there exists a cyclic ( 2n − 1, M 2n−1 , K) - snake, C 2n−1 , and let t k 1 , t k 2 , . . . , t k M2n\nbe the sequence of transformations generating it, where k j is odd for all j ∈ [ M 2n−1 ] . We also assume that k 1 = 2n − 1 (this requirement, while perhaps appearing arbitrary, is actually quite easily satisﬁed. Indeed, every sufﬁciently large cyclic K -snake over S 2n−1 must, w.l.o.g., satisfy it. We shall make it a point to demonstrate that this holds for our construction).\nwhere the indices are taken modulo 2n − 1, and such that we indeed have σ (i) 0 ∈ A 2n+1 , i.e., σ (i) 0 is an even permutation (one simple way of achieving this is to choose them in ascending order).\nExample 4. We recall that C 3 is generated by the operations ( t 3 , t 3 , t 3 ) , which satisfy our requirement. As suggested above,\nwe order [ 5 ] \\ { 1, 3 } in ascending order, i.e., ( a 0 , a 1 , a 2 ) = ( 2, 4, 5 ) . We deﬁne the following permutations as starting points for our construction\nand readily verify that they are all even. \t 2 We now deﬁne for all i ∈ [ 2n − 1 ] and j ∈ [ M 2n−1 ] the\ni.e., we construct cycles corresponding to a mirror view of C 2n−1 on all but the two ﬁrst elements of σ (i) 0 (which, as we recall, are ( 1, a i ) ).\nExample 5. In our running example, we deﬁne the following permutations:\nand resume our construction. \t 2 We now note the following properties of our construction:\nLemma 6. Let i, k ∈ [ 2n − 1 ] and j, l ∈ [ M 2n−1 ] . The following are equivalent:\n1) The permutations σ (i) j(2n+1) and σ (k) l(2n+1) are cyclic shifts of each other.\nhence i = k. Moreover, since the two permutations\u2019 last n − 1 elements agree, and t k 1 , t k 2 , . . . , t k M2n\ninduce a Gray code, we necessarily have j = l.\nFinally, that the last statement implies the ﬁrst is trivial. Lemma 7. For all i ∈ [ 2n − 1 ] it holds that\ninduce a cyclic code, and the claim follows directly.\nTherefore we have constructed 2n − 1 cycles comprised of cyclically non-equivalent permutations (although, at this point they are not generated by \u201cpush-to-the-top\u201d operations).\nHence, if we deﬁne for all i ∈ [ 2n − 1 ] , 0 j < M 2n−1 , and 1 < m 2n, the permutations\nOur observation from one paragraph above means that at this point we have 2n − 1 disjoint cycles, which we conve- niently denote\nwhere the permutations in bold are those from Example 5. 2 Each of the cycles of size ( 2n + 1 ) M 2n−1 , is generated\nby \u201cpush-to-the-top\u201d operations, and contains all cyclic shifts of elements present in our previous version of that cycle. We merge these cycles into a single cycle in the following theorem. Theorem 9. Given a cyclic ( 2n − 1, M 2n−1 , K) -snake using only \u201cpush-to-the-top\u201d operations on odd indices such that its ﬁrst transformation is t 2n−1 , there exists a cyclic K -snake over S 2n+1 with the same properties, whose size is\nwhere, again, the indices are taken modulo 2n − 1. Thus for all i ∈ [ 2n − 2 ] we have\npermutations. A careful observation readily shows that C 2n+1 has t 2n+1 for its ﬁrst generating transformation.\nExample 10. Our running example ends with the full con- struction of a ( 5, 45, K) -snake, C 5 , from Theorem 9. The down arrows stand for an omitted sequence of t 5 transformations. The transition from column to column uses a single t 3 transforma- tion.\nWe now turn to consider the size and rate of the constructed codes, and show that their rate asymptotically tends to 1.\nTheorem 11. The size of K -snakes constructed in Theorem 9 behaves asymptotically as\nOne observes that the codes C n+1 utilize the transformation t 2n+1 overwhelmingly more than any other. This property allows one to calculate the transformation required to advance any given permutation in the code to its successor in O ( 1 ) amortized run time. In addition, the recursive nature of Theo- rem 9 lends itself to the ranking and unranking of permutations in the code (that is, the processes of attaching to a given permutation its position in the code, and vice versa) in O ( n 2 ) run time. Methods of achieving these tasks are presented and analyzed in [22]. Together, they facilitate the use of the codes C 2n+1 in the implementation of logic memory cells, by allowing one to increase the cell\u2019s \u2018level\u2019 as well as directly write data to it (and naturally, to read written data as well).\nIn this paper we explored rank-modulation snake-in-the-box codes under Kendall\u2019s τ-metric, and presented a construction yielding codes with rates asymptotically tending to 1. Some results w.r.t. bounds on the size of such codes were also proven in [22], which can be summarized by the following two theorems:\nTheorem 12. If C is an ( n, M, K) -snake then 1) M 1 2 | S n | .\n2) M = 1 2 | S n | if and only if for all { α , β } ∈ E n it holds that α ∈ C or β ∈ C.\nTheorem 13. If an ( n, M, K) -snake C contains a \u201cpush-to-the- top\u201d operation on an even index then\nHowever, it is not presently known whether these bounds are achievable, and therefore we are unable to determine how close the codes generated by our construction come to being optimal with respect to their sizes (rather than their asymptotic rates). A computer search for cyclic codes, performed on S 5 , yielded ( 5, M, K) -snakes of maximal size M = 57 (for comparison, the construction from Theorem 9 yields a ( 5, 45, K) -snake). While an abundance of such codes were found (well over 500 nonequivalent codes), they all were in fact codes over A 5 .\nIt shall be noted that a complete (but not cyclic) ( 5, 60, K) - snake over A 5 can also be constructed by amending the code presented in Example 10. However, we do not currently know whether ( 2n + 1, (2n+1)! 2 , K) -snakes over A 2n+1 exist for every length.\nThese results, along with the bounds we showed in Theo- rems 12,13 give rise to the following conjecture: For all n ∈ N a K -snake exists over A n whose size is no less than that of every K -snake over S n .\nIn addition, [22] explores rank-modulation snake-in-the-box codes using a different metric, the ∞ -metric, which is induced by the embedding of S n in Z n . More precisely, for α , β ∈ S n one deﬁnes\nWe use the ∞ -metric to model a different kind of noise- mechanism than that modeled by Kendall\u2019s τ-metric, namely spike noise. In this model, the rank of each memory cell is assumed to have been changed by a bounded amount (see [19]). Under this metric, the authors were able to present a construction which gives rise to the following theorem:\nTheorem 14. For all 4 n ∈ N there exists an ( n, M, ∞ ) - snake of size\nAnd it was again shown that these codes have rates asymp- totically tending to 1."},"refs":[{"authors":[{"name":"H. L. Abbot"},{"name":"M. Katchalski"}],"title":{"text":"On the construction of snake in the box codes"}},{"authors":[{"name":"A. Barg"},{"name":"A. Mazumdar"}],"title":{"text":"Codes in permutations and error correction for rank modulation"}},{"authors":[{"name":"J. Brewe"},{"name":"M. Gil"}],"title":{"text":"Nonvolatile Memory Technologies with Emphasis on Flash "}},{"authors":[{"name":"F. Chierichetti"},{"name":"H. Finucane"},{"name":"Z. Liu"},{"name":"M. Mitzenmacher"}],"title":{"text":"Designing ﬂoating codes for expected performance"}},{"authors":[{"name":"M. Deza"},{"name":"H. Huang"}],"title":{"text":"Metrics on permutations, a survey"}},{"authors":[{"name":"E. En Gad"},{"name":"A. Jiang"},{"name":"J. Bruck"}],"title":{"text":"Compressed encoding for rank modulation"}},{"authors":[{"name":"E. En Gad"},{"name":"M. Langberg"},{"name":"M. Schwartz"},{"name":"J. Bruck"}],"title":{"text":"Constant-weight Gray codes for local rank modulation"}},{"authors":[{"name":"F. Gray"}],"title":{"text":"Pulse code communication"}},{"authors":[{"name":"A. Jiang"},{"name":"V. Bohossian"},{"name":"J. Bruck"}],"title":{"text":"Rewriting codes for joint information storage in ﬂash memories"}},{"authors":[{"name":"A. Jiang"},{"name":"M. Langberg"},{"name":"M. Schwartz"},{"name":"J. Bruck"}],"title":{"text":"Universal rewriting in constrained memories"}},{"authors":[{"name":"A. Jiang"},{"name":"R. Mateescu"},{"name":"M. Schwartz"},{"name":"J. Bruck"}],"title":{"text":"Rank modulation for ﬂash memories"}},{"authors":[{"name":"A. Jiang"},{"name":"M. Schwartz"},{"name":"J. Bruck"}],"title":{"text":"Correcting charge-constrained errors in the rank-modulation scheme"}},{"authors":[{"name":"M. Kendal"},{"name":"J. D. Gibbon"}],"title":{"text":"Rank Correlation Methods"}},{"authors":[{"name":"T. Kløve"},{"name":"T.-T. Lin"},{"name":"S.-C. Tsai"},{"name":"W.-G. Tzeng"}],"title":{"text":"Permutation arrays under the Chebyshev distance"}},{"authors":[{"name":"A. Mazumdar"},{"name":"A. Barg"},{"name":"G. Z´emor"}],"title":{"text":"Constructions of rank modula- tion codes"}},{"authors":[{"name":"N. Papandreou"},{"name":"H. Pozidis"},{"name":"T. Mittelholzer"},{"name":"G. F. Close"},{"name":"M. Breitwisch"},{"name":"C. Lam"},{"name":"E. Eleftheriou"}],"title":{"text":"Drift-tolerant multilevel phase-change memory"}},{"authors":[{"name":"C. D. Savage"}],"title":{"text":"A survey of combinatorial Gray codes"}},{"authors":[{"name":"R. Sedgewick"}],"title":{"text":"Permutation generation methods"}},{"authors":[{"name":"I. Tamo"},{"name":"M. Schwartz"}],"title":{"text":"Correcting limited-magnitude errors in the rank-modulation scheme"}},{"authors":[{"name":"Z. Wang"},{"name":"J. Bruck"}],"title":{"text":"Partial rank modulation for ﬂash memories"}},{"authors":[{"name":"E. Yaakobi"},{"name":"A. Vardy"},{"name":"P. H. Siegel"},{"name":"J. K. Wolf"}],"title":{"text":"Multidimensional ﬂash codes"}},{"authors":[{"name":"Y. Yehezkeally"},{"name":"M. Schwartz"}],"title":{"text":"Snake-in-the-box codes for rank modulation"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569558901.pdf"},"links":[{"id":"1569566567","weight":2},{"id":"1569564843","weight":3},{"id":"1569566527","weight":2},{"id":"1569565383","weight":2},{"id":"1569565883","weight":3},{"id":"1569564889","weight":2},{"id":"1569565223","weight":2},{"id":"1569566725","weight":4},{"id":"1569566385","weight":3},{"id":"1569564635","weight":3},{"id":"1569565867","weight":3},{"id":"1569566799","weight":4},{"id":"1569559665","weight":5},{"id":"1569561021","weight":4},{"id":"1569566875","weight":2},{"id":"1569564605","weight":14},{"id":"1569566321","weight":2},{"id":"1569565489","weight":2},{"id":"1569566683","weight":3},{"id":"1569566855","weight":2},{"id":"1569566869","weight":2},{"id":"1569566091","weight":2},{"id":"1569566697","weight":2},{"id":"1569566597","weight":2},{"id":"1569565551","weight":2},{"id":"1569565711","weight":6},{"id":"1569566943","weight":3},{"id":"1569565091","weight":2},{"id":"1569566591","weight":2},{"id":"1569566571","weight":2},{"id":"1569552245","weight":2},{"id":"1569559889","weight":2},{"id":"1569565495","weight":3},{"id":"1569559967","weight":2},{"id":"1569567045","weight":3},{"id":"1569564481","weight":3},{"id":"1569560833","weight":3},{"id":"1569566415","weight":2},{"id":"1569564805","weight":4},{"id":"1569567005","weight":3},{"id":"1569566081","weight":2},{"id":"1569565355","weight":3},{"id":"1569564469","weight":2},{"id":"1569565931","weight":2},{"id":"1569566647","weight":2},{"id":"1569551535","weight":3},{"id":"1569566765","weight":2},{"id":"1569564897","weight":5},{"id":"1569565775","weight":6},{"id":"1569566871","weight":4},{"id":"1569565461","weight":3},{"id":"1569564731","weight":2},{"id":"1569565171","weight":2},{"id":"1569566207","weight":4},{"id":"1569564227","weight":2},{"id":"1569558325","weight":3},{"id":"1569565837","weight":3},{"id":"1569566671","weight":3},{"id":"1569566303","weight":2},{"id":"1569564233","weight":3},{"id":"1569566459","weight":3},{"id":"1569567535","weight":5},{"id":"1569563411","weight":2},{"id":"1569560427","weight":2},{"id":"1569564849","weight":4},{"id":"1569559541","weight":2},{"id":"1569565317","weight":11},{"id":"1569566363","weight":5},{"id":"1569566941","weight":2},{"id":"1569566739","weight":5},{"id":"1569555811","weight":5},{"id":"1569565609","weight":2},{"id":"1569565291","weight":3},{"id":"1569564203","weight":2},{"id":"1569566821","weight":9},{"id":"1569556713","weight":2},{"id":"1569562685","weight":4},{"id":"1569566467","weight":3},{"id":"1569566157","weight":2},{"id":"1569566903","weight":3},{"id":"1569566999","weight":7},{"id":"1569565859","weight":6},{"id":"1569564249","weight":14},{"id":"1569565809","weight":2},{"id":"1569566843","weight":2},{"id":"1569566579","weight":2},{"id":"1569558483","weight":3},{"id":"1569566563","weight":7},{"id":"1569566089","weight":2},{"id":"1569559221","weight":2},{"id":"1569556091","weight":5},{"id":"1569565347","weight":3},{"id":"1569566925","weight":5},{"id":"1569564387","weight":2},{"id":"1569565455","weight":2},{"id":"1569566497","weight":5},{"id":"1569566795","weight":4},{"id":"1569561679","weight":2},{"id":"1569564989","weight":2},{"id":"1569566787","weight":21},{"id":"1569565897","weight":7},{"id":"1569551763","weight":2},{"id":"1569566895","weight":3},{"id":"1569565709","weight":2},{"id":"1569566749","weight":3},{"id":"1569566269","weight":4},{"id":"1569564189","weight":2},{"id":"1569564195","weight":2},{"id":"1569566985","weight":2},{"id":"1569567009","weight":3},{"id":"1569566865","weight":2},{"id":"1569558785","weight":3},{"id":"1569566193","weight":2},{"id":"1569565907","weight":2},{"id":"1569566343","weight":3},{"id":"1569564311","weight":2},{"id":"1569565803","weight":3},{"id":"1569565785","weight":2},{"id":"1569566679","weight":5},{"id":"1569566575","weight":4},{"id":"1569563981","weight":2},{"id":"1569561085","weight":5},{"id":"1569566419","weight":2},{"id":"1569559565","weight":4},{"id":"1569566905","weight":3},{"id":"1569566733","weight":6},{"id":"1569563307","weight":5},{"id":"1569558681","weight":2},{"id":"1569566759","weight":2},{"id":"1569559195","weight":3},{"id":"1569566149","weight":2},{"id":"1569566217","weight":3},{"id":"1569566657","weight":4},{"id":"1569558859","weight":19},{"id":"1569565199","weight":2},{"id":"1569565365","weight":3},{"id":"1569566511","weight":2},{"id":"1569565841","weight":2},{"id":"1569566369","weight":9},{"id":"1569566531","weight":2},{"id":"1569567665","weight":4},{"id":"1569561143","weight":2},{"id":"1569566581","weight":6},{"id":"1569565833","weight":2},{"id":"1569564611","weight":2},{"id":"1569565535","weight":2},{"id":"1569562867","weight":2},{"id":"1569566395","weight":3},{"id":"1569565667","weight":2},{"id":"1569566845","weight":3},{"id":"1569566325","weight":2},{"id":"1569566423","weight":10},{"id":"1569564795","weight":2},{"id":"1569567015","weight":2},{"id":"1569559805","weight":2},{"id":"1569566437","weight":3},{"id":"1569559111","weight":4},{"id":"1569564881","weight":2},{"id":"1569566939","weight":3},{"id":"1569553537","weight":4},{"id":"1569565427","weight":2},{"id":"1569566403","weight":2},{"id":"1569565839","weight":2},{"id":"1569552251","weight":2},{"id":"1569566885","weight":5},{"id":"1569564441","weight":2},{"id":"1569564209","weight":3},{"id":"1569566513","weight":10},{"id":"1569566425","weight":2},{"id":"1569554971","weight":6},{"id":"1569565501","weight":2},{"id":"1569566445","weight":2},{"id":"1569566209","weight":2},{"id":"1569562821","weight":2},{"id":"1569566649","weight":3},{"id":"1569566791","weight":3},{"id":"1569565559","weight":3},{"id":"1569566371","weight":2},{"id":"1569565655","weight":2},{"id":"1569566909","weight":3},{"id":"1569566127","weight":2},{"id":"1569563763","weight":3},{"id":"1569566473","weight":4},{"id":"1569564857","weight":3},{"id":"1569564333","weight":3},{"id":"1569566913","weight":5},{"id":"1569566809","weight":2},{"id":"1569566629","weight":2},{"id":"1569566257","weight":4},{"id":"1569565033","weight":5},{"id":"1569566447","weight":2},{"id":"1569565817","weight":8},{"id":"1569565847","weight":6},{"id":"1569564353","weight":3},{"id":"1569563897","weight":2},{"id":"1569557083","weight":4},{"id":"1569565929","weight":3},{"id":"1569566141","weight":4},{"id":"1569553591","weight":3},{"id":"1569564677","weight":2},{"id":"1569563231","weight":2},{"id":"1569565633","weight":2},{"id":"1569565279","weight":2},{"id":"1569565521","weight":2},{"id":"1569566115","weight":2},{"id":"1569565219","weight":2},{"id":"1569558509","weight":2},{"id":"1569554759","weight":2},{"id":"1569565595","weight":5},{"id":"1569565185","weight":2},{"id":"1569564985","weight":2},{"id":"1569558401","weight":3},{"id":"1569564973","weight":2},{"id":"1569565469","weight":2},{"id":"1569564969","weight":2},{"id":"1569565029","weight":2},{"id":"1569566505","weight":2},{"id":"1569565393","weight":2},{"id":"1569565933","weight":3},{"id":"1569562207","weight":4},{"id":"1569565705","weight":3},{"id":"1569566191","weight":4},{"id":"1569567033","weight":4},{"id":"1569565527","weight":3},{"id":"1569566603","weight":4},{"id":"1569567029","weight":2},{"id":"1569565363","weight":2},{"id":"1569566159","weight":10},{"id":"1569566695","weight":2},{"id":"1569561379","weight":2},{"id":"1569561123","weight":8},{"id":"1569565467","weight":8},{"id":"1569566673","weight":6},{"id":"1569565311","weight":4},{"id":"1569566233","weight":2},{"id":"1569566893","weight":2},{"id":"1569566317","weight":3},{"id":"1569564097","weight":2},{"id":"1569560997","weight":2},{"id":"1569563845","weight":2},{"id":"1569566501","weight":2},{"id":"1569565741","weight":5},{"id":"1569566275","weight":3},{"id":"1569566481","weight":2},{"id":"1569565545","weight":2},{"id":"1569566857","weight":2},{"id":"1569565961","weight":2},{"id":"1569566245","weight":2},{"id":"1569560503","weight":2},{"id":"1569564339","weight":3},{"id":"1569565439","weight":3},{"id":"1569566229","weight":2},{"id":"1569566949","weight":6},{"id":"1569562551","weight":2},{"id":"1569566901","weight":2},{"id":"1569551347","weight":2},{"id":"1569565415","weight":2},{"id":"1569561623","weight":7},{"id":"1569566383","weight":2},{"id":"1569564485","weight":4},{"id":"1569565155","weight":3},{"id":"1569566631","weight":6},{"id":"1569565571","weight":2},{"id":"1569565885","weight":3},{"id":"1569566177","weight":3},{"id":"1569565493","weight":3},{"id":"1569557633","weight":4},{"id":"1569566805","weight":6},{"id":"1569559199","weight":7},{"id":"1569566293","weight":3},{"id":"1569565665","weight":3},{"id":"1569566831","weight":4},{"id":"1569565523","weight":8},{"id":"1569557715","weight":4},{"id":"1569564175","weight":3},{"id":"1569566983","weight":4},{"id":"1569566097","weight":2},{"id":"1569566479","weight":2},{"id":"1569556361","weight":5},{"id":"1569566431","weight":4},{"id":"1569565397","weight":2},{"id":"1569566873","weight":3},{"id":"1569565765","weight":4},{"id":"1569565925","weight":5},{"id":"1569565435","weight":5},{"id":"1569565263","weight":4},{"id":"1569565215","weight":2},{"id":"1569565385","weight":30},{"id":"1569565575","weight":3},{"id":"1569565919","weight":3},{"id":"1569565181","weight":2},{"id":"1569566711","weight":5},{"id":"1569565241","weight":3},{"id":"1569566927","weight":2},{"id":"1569565661","weight":2},{"id":"1569566887","weight":5},{"id":"1569565273","weight":6},{"id":"1569564131","weight":4},{"id":"1569552037","weight":4},{"id":"1569564919","weight":6},{"id":"1569566737","weight":3},{"id":"1569566429","weight":2},{"id":"1569564595","weight":33},{"id":"1569566917","weight":5},{"id":"1569566253","weight":2},{"id":"1569564683","weight":3},{"id":"1569564305","weight":3},{"id":"1569564283","weight":2},{"id":"1569564291","weight":9},{"id":"1569566691","weight":2},{"id":"1569565421","weight":4},{"id":"1569566547","weight":2},{"id":"1569566651","weight":2},{"id":"1569565177","weight":2},{"id":"1569566823","weight":2},{"id":"1569565349","weight":4},{"id":"1569566137","weight":4},{"id":"1569565013","weight":3},{"id":"1569565829","weight":2},{"id":"1569566529","weight":2},{"id":"1569565375","weight":2},{"id":"1569566715","weight":2},{"id":"1569565237","weight":2},{"id":"1569565041","weight":5},{"id":"1569564703","weight":2},{"id":"1569565541","weight":6},{"id":"1569566813","weight":2},{"id":"1569564649","weight":4},{"id":"1569564201","weight":2},{"id":"1569562277","weight":14},{"id":"1569565425","weight":3},{"id":"1569564437","weight":3},{"id":"1569563975","weight":2},{"id":"1569551905","weight":2},{"id":"1569564861","weight":3},{"id":"1569564787","weight":2},{"id":"1569566487","weight":5},{"id":"1569565529","weight":4},{"id":"1569556759","weight":3},{"id":"1569566619","weight":4},{"id":"1569561185","weight":2},{"id":"1569566075","weight":8},{"id":"1569566397","weight":2},{"id":"1569558779","weight":2},{"id":"1569565233","weight":8},{"id":"1569566817","weight":2},{"id":"1569564157","weight":5},{"id":"1569565729","weight":2},{"id":"1569567483","weight":3},{"id":"1569564923","weight":3},{"id":"1569565367","weight":2},{"id":"1569566299","weight":2},{"id":"1569564281","weight":2},{"id":"1569565039","weight":2},{"id":"1569565769","weight":8},{"id":"1569565805","weight":3},{"id":"1569561713","weight":13},{"id":"1569563919","weight":2},{"id":"1569566577","weight":2},{"id":"1569565389","weight":2},{"id":"1569559919","weight":2},{"id":"1569565861","weight":3},{"id":"1569566147","weight":4},{"id":"1569565537","weight":2},{"id":"1569559523","weight":2},{"id":"1569566057","weight":2},{"id":"1569562367","weight":2},{"id":"1569560785","weight":3},{"id":"1569565561","weight":3},{"id":"1569565631","weight":2},{"id":"1569560213","weight":7},{"id":"1569555891","weight":3},{"id":"1569565997","weight":3},{"id":"1569563425","weight":2},{"id":"1569565035","weight":3},{"id":"1569559597","weight":2},{"id":"1569564961","weight":2},{"id":"1569559251","weight":3},{"id":"1569567013","weight":2},{"id":"1569561861","weight":2},{"id":"1569565337","weight":2},{"id":"1569565737","weight":3},{"id":"1569560459","weight":3},{"id":"1569565853","weight":3},{"id":"1569550425","weight":2},{"id":"1569566273","weight":2},{"id":"1569564123","weight":2},{"id":"1569565889","weight":3},{"id":"1569566635","weight":2},{"id":"1569566611","weight":3},{"id":"1569551539","weight":2},{"id":"1569564505","weight":2},{"id":"1569565165","weight":6},{"id":"1569565565","weight":14},{"id":"1569565635","weight":3},{"id":"1569561397","weight":2},{"id":"1569565731","weight":3},{"id":"1569556327","weight":3},{"id":"1569566797","weight":7},{"id":"1569566413","weight":3},{"id":"1569565707","weight":3},{"id":"1569565113","weight":2},{"id":"1569566375","weight":2},{"id":"1569564257","weight":3},{"id":"1569565583","weight":4},{"id":"1569566555","weight":2},{"id":"1569565373","weight":32},{"id":"1569566973","weight":3},{"id":"1569561579","weight":2},{"id":"1569566449","weight":2},{"id":"1569565031","weight":2},{"id":"1569551541","weight":2},{"id":"1569566839","weight":5},{"id":"1569551751","weight":2},{"id":"1569565139","weight":3},{"id":"1569566663","weight":2},{"id":"1569565579","weight":2},{"id":"1569566067","weight":3},{"id":"1569566825","weight":3},{"id":"1569566241","weight":2},{"id":"1569564807","weight":2},{"id":"1569563007","weight":3},{"id":"1569566113","weight":4},{"id":"1569566443","weight":3},{"id":"1569566727","weight":5},{"id":"1569565315","weight":2},{"id":"1569565515","weight":2},{"id":"1569560581","weight":4},{"id":"1569559233","weight":2}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S17.T1.2","endtime":"15:40","authors":"Yonatan Yehezkeally, Moshe Schwartz","date":"1341588000000","papertitle":"Snake-in-the-Box Codes for Rank Modulation","starttime":"15:20","session":"S17.T1: Rank-Modulation Coding","room":"Kresge Rehearsal B (030)","paperid":"1569558901"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"4","spectral43":"41","spectral28":"10","spectral32":"10","spectral14":"9","spectral20":"1","spectral9":"4","spectral25":"22","spectral42":"27","spectral3":"1","spectral47":"24","spectral17":"5","louvain":"246","spectral36":"15","spectral39":"18","spectral10":"7","spectral15":"1","spectral33":"18","spectral5":"3","spectral21":"16","spectral44":"7","spectral26":"17","spectral40":"27","spectral8":"0","spectral11":"7","spectral4":"0","spectral37":"16","spectral48":"43","spectral22":"7","spectral23":"6","spectral12":"4","spectral50":"47","spectral19":"2","spectral34":"5","spectral45":"7","spectral7":"2","spectral49":"6","spectral38":"29","spectral24":"23","spectral13":"5","spectral31":"17","spectral29":"8","spectral35":"27","spectral30":"7","spectral41":"37","spectral27":"22","spectral18":"13","spectral46":"33","spectral2":"0","spectral16":"10"}}

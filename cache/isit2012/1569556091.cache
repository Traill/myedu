{"id":"1569556091","paper":{"title":{"text":"An Optimal Sampling Technique for Distinguishing Random S-boxes"},"authors":[{"name":"Paul Stankovski"},{"name":"Martin Hell"}],"abstr":{"text":"Abstract\u2014The nonrandom behavior of the outputs of a ran- dom S-box can be exploited when constructing distinguishers for cryptographic primitives. Different methods of constructing samples from the outputs have been used in the literature. However, it has been unclear exactly how these methods differ and which method is optimal. We analyze four different sampling techniques. We prove that two of these sampling techniques result in dependent samples. We further show one sampling technique that is optimal in terms of error probabilities in the resulting distinguisher. However, this sampling technique is quite impractical as it requires very large storage. We further show a fourth sampling technique that is much more practical, and we prove that it is equivalent to the optimal one. We also show an improved algorithm for calculating the associated probability distributions that are required for the attack."},"body":{"text":"Random S-boxes can appear in cryptanalysis when obser- vations, e.g., linear sums of keystream bits in stream ciphers, can be regarded as outputs of a large table. In this paper we study such random S-boxes. More speciﬁcally, we study how to perform an optimal distinguisher from the observations. A random S-box is an a-to-b-bit mapping which can be seen as a table containing n = 2 a random entries of b bits each. Our work is motivated by the analysis of the HC-128 stream cipher as performed in [2], [5], but the results are applicable to all random S-boxes. HC-128 is a stream cipher in the eSTREAM portfolio, and is thus considered to be one of the most promising stream ciphers today. Indeed, it is very fast in software and it has been shown to resist cryptanalytic attacks very well. There are no attacks (not relying on side- channel information) that are more efﬁcient than exhaustive key search. The distinguishing attack given in [2] is currently the most efﬁcient non-generic attack, and that attack is based on the attack given in [5]. The improvement comes from a more efﬁcient sampling technique, reducing the number of keystream bits required by the distinguisher.\nWe analyze different sampling techniques. We show that the sampling technique used in [5] signiﬁcantly underestimates the number of samples needed by the distinguisher as the samples are not independent. We further prove that it is not possible to take two independent biased samples at all, unless the S-box is reinitialized. The optimal sampling technique is thus to take one sample containing all information, i.e., to consider a vector\nof all outputs. The problem with this vector is that, for large vector sizes, its probability distribution is infeasible both to compute and to store. Due to this, a shortcut was used in [2], namely to consider only the weight of the vector. We show that this weight probability distribution is equivalent to the optimal probability distribution and, as a result, it is not possible to further improve the sampling used in [2]. Finally, we give a new algorithm for computing the vector weight distribution that improves the one given in [2]. Our new algorithm uses much less memory (optimal) and saves 80-85% in time.\nTwo outputs from an S-box of size n are equal with probability (at least) 1 n since the same entry may have been used twice. This simple observation can be used to construct a distinguisher for random S-boxes.\nAs noted above, it is known (see [5]) that the xor sum of a pair of output bits is biased, and this bias stems from the fact that the same S-box entry may have been probed for both outputs. More speciﬁcally, for i = j,\nPr(s i = s j ) = 1 2\n+ 1 n\n= 1 2\n(1 + 1 n\n) = 1 2\nand the bias in (1) can be used to construct a distinguisher. The main problem we study in this paper is exactly how to construct this distinguisher when the number of S-box obser- vations is more than two. That is, how should a cryptanalyst use the observations to construct an optimal distinguisher?\nThe empirical probability distribution as deﬁned by the sampling is denoted P ∗ . The corresponding (theoretical) prob- ability distribution of the S-box is denoted P 1 while its uniform distribution is denoted P 2 . The optimal hypothesis test is given by the Neyman-Pearson lemma, see e.g., [1].\nLemma 1 (Neyman-Pearson): Let X 1 , X 2 , . . . , X t be iid random variables according to P ∗ . Consider the decision prob- lem corresponding to the hypotheses P ∗ = P 1 vs. P ∗ = P 2 .\nLet α t = P t 1 (A c t (Q)) and β t = P t 2 (A t (Q)) be the error probabilities corresponding to the decision region A t . Let B t be any other decision region with associated error probabilities α ∗ and β ∗ . If α ∗ ≤ α, then β ∗ ≥ β.\nIf we want the error probabilities to be equal we set Q = 1. In other words, we decide P ∗ = P 1 if\nP 1 (x 1 , . . . , x t ) P 2 (x 1 , . . . , x t )\nlog P 1 (x i ) P 2 (x i )\nand P ∗ = P 2 otherwise. The equivalence in (2) is valid when the samples x 1 , . . . , x t are independent.\nIn our case, the samples x i will be constructed from the observations s j . Note that the Neyman-Pearson lemma, which gives the optimal distinguisher, requires that the samples x i are independent. By sampling technique we mean how to use the observations to build the samples used in the distinguisher.\nIf the samples are very easy to construct from the observa- tions, we can say that the online computational complexity of the attack is given by the number of terms t in the sum (2). The ofﬂine complexity is the time needed to compute P 1 .\n\u2022 All-Pairs Sampling (APS) Take all pairs of observations (s i , s j ), 1 ≤ i < j ≤ as samples. Let P 1 be the distribution corresponding to (1), i.e., Pr(s i = s j ) =\n(1 + 1 n ) and Pr(s i = s j ) = 1 2 (1 − 1 n ). P 2 is the uniform distribution, Pr(s i = s j ) = Pr(s i = s j ) = 1 2 .\n\u2022 Linear-Pairs Sampling (LPS) Take the pairs of obser- vations (s i , s i+1 ), 1 ≤ i < as samples and let P 1 and P 2 be as for APS above.\n\u2022 Vector Sampling (VS) Take the vectors (s 1 , s 2 , . . . , s ) as samples and perform the hypothesis test with the corresponding vector probability distributions as P 1 and P 2 .\n\u2022 Weight Sampling (WS) Take the vector weights (s 1 , s 2 , . . . , s ) = i=1 s i as samples and perform\nthe hypothesis test with the corresponding vector weight probability distributions as P 1 and P 2 .\nIt is clear that Vector Sampling (VS) is optimal since it preserves all information in the samples. The drawbacks are that the distribution is very large in storage (2 ) and that it is demanding to compute. APS was applied in [4], [5]. It uses the easily computed bias in (1) and produces many samples. For observations, 2 samples are produced. Due to the dependency between samples, LPS was suggested in [2] and WS was also applied as an improvement. However, it was an open question whether it was possible to improve over WS as it appears that not all sample information is retained in the vector weight samples.\nThe rest of the paper is organized as follows. In Sec- tions III-A and III-B we prove that APS and LPS are faulty. In Sections III-C and III-D we give algorithms for computing the required distributions for VS and WS, respectively. We also prove that VS and WS are equivalent in terms of the performance of the resulting distinguisher. Section IV explic- itly compares APS, LPS and WS. The paper is concluded in Section V.\nThe Neyman-Pearson lemma assumes that all samples are independent and identically distributed. In APS sampling, all possible bit pairs in an -bit chunk are taken as samples, producing in total k 2 samples. It is very easy to prove that these samples are not independent. Consider a chunk with = 3, where we take the samples (s 1 , s 2 ), (s 1 , s 3 ) and (s 2 , s 3 ). If we know the ﬁrst two samples, then we also know the last sample, i.e.,\nwhere H(·) denotes the entropy function, ⊕ denotes xor and S 1 , S 2 and S 3 are random variables corresponding to the three observations. This argument is easily extended to the general case with arbitrary , which also serves as a direct motivation for deﬁning and using LPS sampling.\nEven though the samples are dependent, APS is very easy to apply. Computing and storing the P 1 requires negligible memory and can be trivially done by hand, see (1). However, the large number of samples gives an online computational complexity of k 2 = O(k 2 ).\nIn LPS sampling we take (s 1 , s 2 ) as the ﬁrst sample and then only take one new sample for each new observation. This procedure produces − 1 samples per chunk for a total of k( −1) samples. In order to show that this sampling technique also gives dependent samples, for P 1 we calculate and compare Pr(s 3 = s 2 |s 2 = s 1 ) and Pr(s 3 = s 2 |s 2 = s 1 ) to see that the probability of pair equality in one sample depends on the pair equality of the previous one.\nWe regard the S-box as a table with n entries. The ﬁrst time we read a speciﬁc entry in the table, we say that we \u201copen\u201d the entry. Consider Pr(s 3 = s 2 |s 2 = s 1 ) ﬁrst. Given that s 2 = s 1 , we must have opened precisely two entries in the table, one 0 and one 1. We can now have s 3 = s 2 in two different ways, by reading s 3 from either an \u201cold\u201d entry (same as s 2 ) or a \u201cnew\u201d previously unopened one. Thus, we have\nIn total we get Pr(s 3 = s 2 |s 2 = s 1 ) = p\n· b = 1 2\n) > 1 2\nThis proves that LPS is also erroneous in assuming indepen- dence between samples.\nOne may further note that the same probabilities are valid for any other overlapping pair, i.e., for Pr(s k = s j |s j = s i ) and Pr(s k = s j |s j = s i ) for all distinct indices i, j and k.\nThis dependency may seem natural since the two sam- ples are overlapping in one of the observations. Collect- ing samples in a non-overlapping fashion according to (s 1 , s 2 ), (s 3 , s 4 ), (s 5 , s 6 ), and so on, may at ﬁrst glance seem better. However, by performing similar calculations we can also prove that\nThis means that the probability of pair equality in one sample depends on the previous one in this case as well. This immediately generalizes to all non-overlapping pairs, i.e., the same holds for Pr(s j = s i |s v = s u ) and Pr(s j = s i |s v = s u ) for all distinct indices i, j, u and v. Since the overlapping and non-overlapping cases are exhaustive, we can conclude that any two samples will be dependent. An intuitive explanation for this is that a sample leaks information about the entries in the S-box. This information will affect the probability of the next sample since we may read the same entries as before. We summarize this result in Theorem 2.\nTheorem 2 (Random S-box Sampling Theorem): It is not possible to extract more than one independent sample from a chunk s 1 , . . . , s of observations from a random S-box.\nThe advantage of LPS over APS is that fewer samples are used. The computational complexity of the online phase of LPS is k( − 1) = O(k ).\nIn order to correctly apply the Neyman-Pearson lemma, we need to ﬁnd the probability of the complete chunk. Thus, we collect all observations in one vector (s 1 , s 2 , . . . , s ). The vector probability distributions P 1 and P 2 both have a domain of size 2 , which determines the storage cost for handling P 1 and P 2 with VS.\nFor P 2 , all vectors are equally likely, resulting in identical probability values P 2 (v) = 2 − for all vectors v.\nThe S-box vector probability distribution P 1 can be calcu- lated according to Algorithm I, which is stated recursively for simplicity. The main idea here is simply to keep track of how many entries in the S-box that have revealed zeros and ones, as this information will enable us to compute the associated probabilities at each stage.\n(probability entries), and since this amount of memory is necessary to store the resulting probability distribution, no other algorithm can do better in terms of memory. The time complexity of Algorithm I is also exponential in , at most 4 = 2 2 , because every call at depth d results in at most 4 calls at depth d + 1. By employing dynamic programming, see e.g., [3], it is possible to improve this time complexity to O(n 2 2 ) at the expense of increased storage, O(n 2 2 ), but the running time must still necessarily be exponential in .\nFor large , i.e., when many observations are generated before the S-box is reinitialized, the vector sampling technique is infeasible since the distribution P 1 is both too large to store and too demanding to compute.\nNow consider WS, for which we take vector weights (s 1 , s 2 , . . . , s ) = i=1 s i as samples. The corresponding\nvector probability distributions P 1 and P 2 have domains of size + 1, which is much more manageable than those for VS.\nFor WS we begin with P 2 . Every vector is equally likely in the ideal case, so the resulting vector weight probability distribution is combinatorially determined by\nP 1 can be calculated according to Algorithm II, which is just a simple modiﬁcation of Algorithm I. Instead of passing on a (partial) vector we now pass on the (accumulated) vector weight. The algorithm is, again, stated recursively for simplic- ity, but it can also be implemented in a dynamic programming fashion as detailed in [2]. Upper bound formulas for memory and computational complexity for handling vectors of size\nderived from an S-box of size n are given by n 2 2 and n 2 2 4 , respectively.\nWe now explicitly prove that VS and WS are equivalent in terms of keystream complexity of the resulting distinguisher. We ﬁrst present Algorithm III which calculates the proba- bility of an S-box outputting a speciﬁc vector \u2013 the vector probability. The correctness of Algorithm III follows from its relationship to Algorithm I.\nTheorem 3 (WS is optimal): WS is equivalent to VS in terms of the Neyman-Pearson test (Lemma 1).\nProof: The proof follows if we can show that all vectors of equal weight are equiprobable, because the probability distributions P 1 and P 2 for WS can then be derived from those of VS by grouping all probabilities for vectors of equal weight. In such a case the Neyman-Pearson test is equal for both sampling techniques, showing that no information is lost when considering WS over VS.\nIt is sufﬁcient to show that the vector probability is invariant under pairwise bit ﬂips. That is, we need to show that the vector probability does not change if a neighboring pair of bits in a vector are ﬂipped from 10 to 01 (or from 01 to 10).\nLet v = (s 1 , s 2 , . . . , s ) be a vector for which s i = 0 and s i+1 = 1 for some i, and let v be the corresponding vector with s i = 1 and s i+1 = 0. Let v j denote the vector (s j , s j+1 , . . . , s ). We need to show that vp(p, v, a 0 , a 1 ) =\nvp(p, v , a 0 , a 1 ) (we omit some of the less interesting param- eters).\nAll recursive calls to vp(p, v, a 0 , a 1 ) and vp(p, v , a 0 , a 1 ) are identical up to depth i, so it is enough to consider any two such calls vp(p, v i , a 0 , a 1 ) and vp(p, v i , a 0 , a 1 ) at depth i. We need to show that both these calls give rise to the same quadruple of function calls at depth i + 2, two levels deeper.\nvp(p · a 0 n\n2n \t , v i+1 , a 0 + 1, a 1 ) at level i + 1, and then into\n− a 1 ) 2n 2\n− a 1 )a 1 2n 2\nvp(p · (n − a 0 − a 1 )(n − (a 0 + 1) − a 1 ) (2n) 2\nvp(p · a 1 (n − a 0 − a 1 ) 2n 2\n2n 2 \t , v i+2 , a 0 , a 1 + 1) and vp(p ·\nA direct consequence of Theorem 3 is that, although VS is highly impractical to use due to its exponential time- and memory complexities, WS will provide the same result as VS at a much lower cost, allowing much larger -values. The computational complexity of the distinguisher is given by O(k).\nWe can also use Theorem 3 to improve the efﬁciency of computing P 1 with Algorithm II. This is also true for the dynamic programming variant of the algorithm presented in [2]. Since all vectors of equal weight are equiprobable, we need only consider vectors of type 00 . . . 011 . . . 1. The improved algorithm is to calculate the probabilities for all\n+1 such vectors by using a dynamic programming version of Algorithm III. Recall that the time and memory complexities given in [2] are O(n 2 2 ) and O(n 2 ), respectively, so memory usage is limiting in practice. For the new algorithm we need only O(min(n, )) memory for storing intermediate probabil- ity values and O( ) storage to hold the resulting probability distribution. An additional improvement is to recognize that the distribution is symmetric, so we need only compute half of it.\nWhile the time required is still O(n 2 2 ), the constants are better. Our simulations show that we save 80-85% in time, and\nthe memory usage is O( ), i.e., it no longer depends on the size of the S-box. This is optimal since it equals the length of the vector.\nWe have shown above that both APS and LPS are erroneous as the corresponding samples are not taken independently. Still, both techniques are very simple to apply. The distribution P 1 is very easy to compute in each case, and checking if (s i = s j ) is trivial, but the drawback is that the resulting distinguisher will not be optimal. For optimality, WS (or VS) must be used. This optimality comes at the cost of a larger precomputational complexity, i.e., for computing P 1 . Table I summarizes the important parameters corresponding to each sampling technique. Note that we assume that the best dy- namic programming variant is used to compute the probability distributions P 1 for VS and WS. The actual performance of the attack using each of the sampling techniques has been simulated. As VS and WS give the exact same distinguisher performance, only WS is included in the simulations. For a fair comparison, we assume that the number of chunks is the same for all variants, i.e., APS and LPS are allowed to use many more samples than WS, but all use the same number of observations. The two plots in Fig. 1 show the error probabilities for APS, LPS and WS when the size of the S-box is n = 64 and the number of observations in each chunk is = 20 and = 500, respectively. Similarly, Fig. 2 shows the error probabilities when the size of the S-box is n = 512.\nFrom the simulations we can see that both LPS and APS are outperformed by WS. It is interesting to see that APS is not very much worse when the same number of chunks is considered. However, we stress again that APS uses a factor\nmore samples than WS. This clearly shows the problem of assuming independent samples when they are in fact very dependent. Also, the factor 2 makes APS impractical for large .\nSpeciﬁcally for HC-128, each observation is a linear combi- nation of keystream bits. In this case, the comparison assumes an equal number of keystream bits for all sampling techniques.\nLooking at Fig. 1 and Fig. 2 it seems that the performance of APS approaches that of WS when the S-box size n increases and when the chunk size decreases. Thus, for large n and small their performances are practically equal, while for small n and large , WS clearly outperforms APS. We have\nsimulated many other choices of n and , and all simulations show this same tendency.\nFour different sampling techniques for random S-box out- puts have been considered and analyzed. We have proved that it is not possible to take two independent samples from one chunk of a random S-box, which implies that APS and LPS are sub-optimal as they impose a higher error probability in the resulting distinguisher. We have also proved that WS is equivalent to the optimal VS, and that WS is much more prac- tical than VS. WS is thus the preferred sampling technique. We have also presented an improved algoritm for the ofﬂine computation of P 1 for WS.\nEven though APS and LPS are not optimal, they are very simple to apply. For large S-boxes that are frequently rerandomized, the APS technique is very close to optimal."},"refs":[{"authors":[{"name":"T. Cove"},{"name":"J. A. Thomas"}],"title":{"text":"Elements of Information Theory"}},{"authors":[{"name":"P. Stankovsk"},{"name":"S. Ru"},{"name":"M. Hel"},{"name":"T. Johansson"}],"title":{"text":"Improved Distinguishers for HC-128"}},{"authors":[{"name":"R. Rivest T"},{"name":"C. Leiserso"},{"name":"C. Stein"}],"title":{"text":"Cormen,   Introduction to Algorithms, Third Edition "}},{"authors":[{"name":"H. Wu"}],"title":{"text":"A New Stream Cipher HC-256"}},{"authors":[{"name":"H. Wu"}],"title":{"text":"The Stream Cipher HC-128"}}]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569556091.pdf"},"links":[{"id":"1569564843","weight":2},{"id":"1569566527","weight":4},{"id":"1569565383","weight":3},{"id":"1569565883","weight":2},{"id":"1569564889","weight":4},{"id":"1569565223","weight":2},{"id":"1569566725","weight":4},{"id":"1569565377","weight":13},{"id":"1569566385","weight":2},{"id":"1569564635","weight":2},{"id":"1569566799","weight":3},{"id":"1569559665","weight":2},{"id":"1569561021","weight":5},{"id":"1569565691","weight":2},{"id":"1569566815","weight":13},{"id":"1569566875","weight":3},{"id":"1569559617","weight":2},{"id":"1569566981","weight":2},{"id":"1569566433","weight":2},{"id":"1569566321","weight":4},{"id":"1569566855","weight":2},{"id":"1569560629","weight":3},{"id":"1569566869","weight":6},{"id":"1569565097","weight":2},{"id":"1569566091","weight":3},{"id":"1569559259","weight":3},{"id":"1569566697","weight":3},{"id":"1569566597","weight":2},{"id":"1569566761","weight":3},{"id":"1569566943","weight":3},{"id":"1569565091","weight":9},{"id":"1569566591","weight":4},{"id":"1569566571","weight":2},{"id":"1569552245","weight":2},{"id":"1569559889","weight":2},{"id":"1569565495","weight":2},{"id":"1569559967","weight":2},{"id":"1569567045","weight":3},{"id":"1569565227","weight":3},{"id":"1569564481","weight":4},{"id":"1569560833","weight":3},{"id":"1569566415","weight":2},{"id":"1569564805","weight":4},{"id":"1569567005","weight":5},{"id":"1569566081","weight":2},{"id":"1569565355","weight":3},{"id":"1569564469","weight":15},{"id":"1569566373","weight":3},{"id":"1569566647","weight":2},{"id":"1569551535","weight":4},{"id":"1569566765","weight":2},{"id":"1569565775","weight":2},{"id":"1569565547","weight":5},{"id":"1569566871","weight":5},{"id":"1569565461","weight":4},{"id":"1569564731","weight":2},{"id":"1569565171","weight":4},{"id":"1569566207","weight":6},{"id":"1569564227","weight":2},{"id":"1569565837","weight":2},{"id":"1569566303","weight":3},{"id":"1569564233","weight":2},{"id":"1569566459","weight":2},{"id":"1569567535","weight":3},{"id":"1569563411","weight":2},{"id":"1569564401","weight":8},{"id":"1569564849","weight":3},{"id":"1569559541","weight":2},{"id":"1569565317","weight":2},{"id":"1569566363","weight":2},{"id":"1569566739","weight":2},{"id":"1569555811","weight":9},{"id":"1569565609","weight":2},{"id":"1569565291","weight":2},{"id":"1569564203","weight":2},{"id":"1569566821","weight":2},{"id":"1569562685","weight":2},{"id":"1569566467","weight":2},{"id":"1569566157","weight":3},{"id":"1569566903","weight":3},{"id":"1569566999","weight":2},{"id":"1569565859","weight":4},{"id":"1569564249","weight":2},{"id":"1569565809","weight":2},{"id":"1569566843","weight":2},{"id":"1569566579","weight":2},{"id":"1569558483","weight":2},{"id":"1569566563","weight":2},{"id":"1569559221","weight":2},{"id":"1569565347","weight":3},{"id":"1569566925","weight":2},{"id":"1569564387","weight":3},{"id":"1569566497","weight":8},{"id":"1569566795","weight":2},{"id":"1569566963","weight":3},{"id":"1569564989","weight":2},{"id":"1569565897","weight":4},{"id":"1569551763","weight":2},{"id":"1569566895","weight":2},{"id":"1569566749","weight":2},{"id":"1569566269","weight":4},{"id":"1569564189","weight":4},{"id":"1569564195","weight":2},{"id":"1569561513","weight":3},{"id":"1569566985","weight":2},{"id":"1569564613","weight":2},{"id":"1569565369","weight":2},{"id":"1569567009","weight":4},{"id":"1569566865","weight":2},{"id":"1569558785","weight":2},{"id":"1569564647","weight":12},{"id":"1569566095","weight":2},{"id":"1569566193","weight":3},{"id":"1569564337","weight":2},{"id":"1569565907","weight":2},{"id":"1569566343","weight":2},{"id":"1569564311","weight":2},{"id":"1569565803","weight":2},{"id":"1569565785","weight":7},{"id":"1569566167","weight":3},{"id":"1569566679","weight":3},{"id":"1569565989","weight":3},{"id":"1569566575","weight":2},{"id":"1569563981","weight":3},{"id":"1569561085","weight":9},{"id":"1569566617","weight":2},{"id":"1569559565","weight":4},{"id":"1569566905","weight":5},{"id":"1569566311","weight":4},{"id":"1569563307","weight":4},{"id":"1569558681","weight":2},{"id":"1569566759","weight":2},{"id":"1569565589","weight":4},{"id":"1569566149","weight":2},{"id":"1569566657","weight":4},{"id":"1569558859","weight":4},{"id":"1569565199","weight":2},{"id":"1569565365","weight":2},{"id":"1569566643","weight":2},{"id":"1569566511","weight":2},{"id":"1569566719","weight":4},{"id":"1569566369","weight":2},{"id":"1569566531","weight":2},{"id":"1569567665","weight":3},{"id":"1569561143","weight":2},{"id":"1569566581","weight":4},{"id":"1569565833","weight":2},{"id":"1569566489","weight":2},{"id":"1569565535","weight":2},{"id":"1569562867","weight":4},{"id":"1569566845","weight":3},{"id":"1569566325","weight":2},{"id":"1569566423","weight":2},{"id":"1569564795","weight":6},{"id":"1569567015","weight":2},{"id":"1569559805","weight":9},{"id":"1569566437","weight":4},{"id":"1569566851","weight":5},{"id":"1569558901","weight":5},{"id":"1569565735","weight":2},{"id":"1569559111","weight":3},{"id":"1569566687","weight":2},{"id":"1569566939","weight":7},{"id":"1569553537","weight":4},{"id":"1569565427","weight":3},{"id":"1569566403","weight":2},{"id":"1569565839","weight":2},{"id":"1569552251","weight":4},{"id":"1569566139","weight":2},{"id":"1569564441","weight":3},{"id":"1569554881","weight":2},{"id":"1569554971","weight":3},{"id":"1569565501","weight":2},{"id":"1569566899","weight":4},{"id":"1569566445","weight":2},{"id":"1569566209","weight":3},{"id":"1569566649","weight":2},{"id":"1569565559","weight":2},{"id":"1569565655","weight":2},{"id":"1569566127","weight":3},{"id":"1569558985","weight":2},{"id":"1569563763","weight":3},{"id":"1569566473","weight":3},{"id":"1569564857","weight":2},{"id":"1569564333","weight":2},{"id":"1569566913","weight":5},{"id":"1569566809","weight":2},{"id":"1569566629","weight":3},{"id":"1569566257","weight":3},{"id":"1569565033","weight":2},{"id":"1569566447","weight":5},{"id":"1569565847","weight":2},{"id":"1569564353","weight":3},{"id":"1569557083","weight":3},{"id":"1569566141","weight":2},{"id":"1569566721","weight":2},{"id":"1569565633","weight":2},{"id":"1569566661","weight":3},{"id":"1569565279","weight":3},{"id":"1569555879","weight":2},{"id":"1569566115","weight":14},{"id":"1569565219","weight":2},{"id":"1569564851","weight":2},{"id":"1569566003","weight":18},{"id":"1569566773","weight":3},{"id":"1569565029","weight":2},{"id":"1569566505","weight":3},{"id":"1569565393","weight":2},{"id":"1569565933","weight":4},{"id":"1569562207","weight":2},{"id":"1569566191","weight":2},{"id":"1569567033","weight":6},{"id":"1569565527","weight":2},{"id":"1569566853","weight":2},{"id":"1569566603","weight":4},{"id":"1569567029","weight":4},{"id":"1569565363","weight":2},{"id":"1569566159","weight":2},{"id":"1569566695","weight":2},{"id":"1569561379","weight":2},{"id":"1569561123","weight":7},{"id":"1569565467","weight":2},{"id":"1569567235","weight":2},{"id":"1569565311","weight":3},{"id":"1569566233","weight":2},{"id":"1569566893","weight":2},{"id":"1569566317","weight":2},{"id":"1569564097","weight":2},{"id":"1569560997","weight":2},{"id":"1569563845","weight":2},{"id":"1569565741","weight":2},{"id":"1569566275","weight":6},{"id":"1569566481","weight":5},{"id":"1569565545","weight":8},{"id":"1569566857","weight":4},{"id":"1569566387","weight":12},{"id":"1569566245","weight":3},{"id":"1569560503","weight":3},{"id":"1569564339","weight":6},{"id":"1569565439","weight":2},{"id":"1569566229","weight":2},{"id":"1569562551","weight":2},{"id":"1569563395","weight":2},{"id":"1569566901","weight":2},{"id":"1569551347","weight":3},{"id":"1569565415","weight":2},{"id":"1569561623","weight":8},{"id":"1569565885","weight":2},{"id":"1569566177","weight":2},{"id":"1569565493","weight":3},{"id":"1569557633","weight":2},{"id":"1569559199","weight":26},{"id":"1569566293","weight":3},{"id":"1569565665","weight":3},{"id":"1569566831","weight":3},{"id":"1569565549","weight":7},{"id":"1569565523","weight":4},{"id":"1569564175","weight":3},{"id":"1569566983","weight":4},{"id":"1569566779","weight":2},{"id":"1569566097","weight":2},{"id":"1569566479","weight":3},{"id":"1569556361","weight":3},{"id":"1569566873","weight":7},{"id":"1569565765","weight":5},{"id":"1569565925","weight":2},{"id":"1569565435","weight":3},{"id":"1569557275","weight":2},{"id":"1569565263","weight":2},{"id":"1569566261","weight":5},{"id":"1569565215","weight":2},{"id":"1569565385","weight":2},{"id":"1569565575","weight":4},{"id":"1569565919","weight":2},{"id":"1569565181","weight":4},{"id":"1569566711","weight":8},{"id":"1569566927","weight":3},{"id":"1569565661","weight":2},{"id":"1569566887","weight":3},{"id":"1569565273","weight":8},{"id":"1569566267","weight":4},{"id":"1569552037","weight":2},{"id":"1569564919","weight":5},{"id":"1569566737","weight":3},{"id":"1569566429","weight":4},{"id":"1569564595","weight":3},{"id":"1569566917","weight":5},{"id":"1569566253","weight":3},{"id":"1569565353","weight":3},{"id":"1569564683","weight":2},{"id":"1569564305","weight":4},{"id":"1569564283","weight":3},{"id":"1569564291","weight":2},{"id":"1569565421","weight":3},{"id":"1569566595","weight":12},{"id":"1569565349","weight":3},{"id":"1569552025","weight":7},{"id":"1569566237","weight":5},{"id":"1569566715","weight":10},{"id":"1569565237","weight":3},{"id":"1569566639","weight":2},{"id":"1569566819","weight":3},{"id":"1569565041","weight":6},{"id":"1569564703","weight":3},{"id":"1569565597","weight":2},{"id":"1569566813","weight":2},{"id":"1569566771","weight":3},{"id":"1569564201","weight":6},{"id":"1569562277","weight":4},{"id":"1569566641","weight":2},{"id":"1569565425","weight":3},{"id":"1569564437","weight":4},{"id":"1569551905","weight":2},{"id":"1569564861","weight":3},{"id":"1569565457","weight":2},{"id":"1569564787","weight":4},{"id":"1569566487","weight":4},{"id":"1569565529","weight":4},{"id":"1569556759","weight":3},{"id":"1569566619","weight":2},{"id":"1569561185","weight":2},{"id":"1569566075","weight":2},{"id":"1569566397","weight":2},{"id":"1569558779","weight":2},{"id":"1569565233","weight":2},{"id":"1569563721","weight":3},{"id":"1569565593","weight":3},{"id":"1569565367","weight":30},{"id":"1569566299","weight":2},{"id":"1569565769","weight":3},{"id":"1569566171","weight":2},{"id":"1569565805","weight":4},{"id":"1569561713","weight":6},{"id":"1569566933","weight":2},{"id":"1569563919","weight":3},{"id":"1569557851","weight":2},{"id":"1569559919","weight":2},{"id":"1569566147","weight":3},{"id":"1569565537","weight":3},{"id":"1569566057","weight":23},{"id":"1569562367","weight":2},{"id":"1569560785","weight":3},{"id":"1569565631","weight":3},{"id":"1569566457","weight":2},{"id":"1569555891","weight":3},{"id":"1569566847","weight":2},{"id":"1569565997","weight":2},{"id":"1569565035","weight":3},{"id":"1569559597","weight":2},{"id":"1569564961","weight":3},{"id":"1569561861","weight":2},{"id":"1569565337","weight":2},{"id":"1569565737","weight":2},{"id":"1569560459","weight":2},{"id":"1569566807","weight":2},{"id":"1569564463","weight":2},{"id":"1569565853","weight":4},{"id":"1569550425","weight":3},{"id":"1569564123","weight":4},{"id":"1569565889","weight":2},{"id":"1569566635","weight":2},{"id":"1569566611","weight":2},{"id":"1569563725","weight":8},{"id":"1569564505","weight":2},{"id":"1569565165","weight":3},{"id":"1569565565","weight":4},{"id":"1569565635","weight":2},{"id":"1569561397","weight":2},{"id":"1569556327","weight":2},{"id":"1569566797","weight":2},{"id":"1569566413","weight":2},{"id":"1569565707","weight":2},{"id":"1569566375","weight":4},{"id":"1569565143","weight":3},{"id":"1569564257","weight":2},{"id":"1569566555","weight":2},{"id":"1569565373","weight":3},{"id":"1569566973","weight":5},{"id":"1569561579","weight":4},{"id":"1569566987","weight":2},{"id":"1569565031","weight":2},{"id":"1569564755","weight":2},{"id":"1569551541","weight":2},{"id":"1569566839","weight":6},{"id":"1569565139","weight":5},{"id":"1569566663","weight":2},{"id":"1569566067","weight":3},{"id":"1569566825","weight":4},{"id":"1569564807","weight":3},{"id":"1569563007","weight":3},{"id":"1569566113","weight":2},{"id":"1569566443","weight":2},{"id":"1569566727","weight":5},{"id":"1569560581","weight":3},{"id":"1569559233","weight":2}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S5.T6.3","endtime":"10:50","authors":"Paul Stankovski, Martin Hell","date":"1341311400000","papertitle":"An Optimal Sampling Technique for Distinguishing Random S-boxes","starttime":"10:30","session":"S5.T6: Boolean Functions and Related Topics","room":"Kresge Rehearsal A (033)","paperid":"1569556091"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"9","spectral28":"2","spectral32":"2","spectral14":"13","spectral20":"5","spectral9":"6","spectral25":"0","spectral42":"22","spectral3":"1","spectral47":"9","spectral17":"16","louvain":"429","spectral36":"22","spectral39":"22","spectral10":"4","spectral15":"5","spectral33":"10","spectral5":"2","spectral21":"7","spectral44":"42","spectral26":"8","spectral40":"11","spectral8":"1","spectral11":"4","spectral4":"3","spectral37":"19","spectral48":"46","spectral22":"10","spectral23":"14","spectral12":"9","spectral50":"31","spectral19":"13","spectral34":"3","spectral45":"40","spectral7":"5","spectral49":"33","spectral38":"5","spectral24":"16","spectral13":"1","spectral31":"1","spectral29":"4","spectral35":"4","spectral30":"19","spectral41":"25","spectral27":"25","spectral18":"9","spectral46":"10","spectral2":"0","spectral16":"5"}}

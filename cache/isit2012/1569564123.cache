{"id":"1569564123","paper":{"title":{"text":"On a Construction of Universal Network Code using LDPC Matrices"},"authors":[{"name":"Shigeki Miyake"},{"name":"Jun Muramatsu"}],"abstr":{"text":"Abstract\u2014An LDPC matrix is used as a local encoding kernel at each link to construct a universal code to address network coding problems. It is also shown that at each terminal node the global encoding kernel that constructs a decoder becomes an LDPC matrix. This provides the perspective that decoding complexity can be reduced to a linear order of a block length by using an efﬁcient decoding algorithm such as the sum-product algorithm."},"body":{"text":"The theory of network coding [1] provides the bound of transmission rate (\u201cmax-ﬂow bound\u201d) with which a source node multicasts a message to terminal nodes. A signiﬁcant property of network coding is the transmission of information after being encoded at each intermediate node, which is different from the ordinary store and forward scheme. The problem of how to construct an encoder at each node or decoder at each terminal node has been investigated by many researchers. Li et al. [2] showed that linear codes that assign matrices to each node attain the max-ﬂow bound. Using the random coding technique, Ho et al. [3] showed that a linear code constructed by randomly selected matrices also attains the max-ﬂow bound and established the theory of random linear network coding.\nRegarding channel coding problems, on the other hand, since the 1990\u2019s it has been known that using linear codes constructed from LDPC matrices in combination with an ef- ﬁcient decoding algorithm such as the sum-product algorithm enables decoding complexity to be reduced to O(n) of the block length n. As for the lossless source coding problem, Caire et al. [4] proposed an efﬁcient variable-length universal code using multiple LDPC matrices. It is quite natural that many researchers have tried to construct network codes using LDPC or sparse matrices to reduce encoding and decoding complexity. By constructing each local encoding kernel [10] using sparse matrices, Jaggi et al. [5] reduced encoding complexity to O(n). Li et al. [6] derived a condition with which a square sparse matrix is not non-singular. Note that in [5], since the decoding process adopts an ordinary inverse matrix computation, computational complexity of the process is not reduced compared with ordinary linear network coding.\nIn this paper, by constructing local encoding kernels using LDPC matrices, constructed code is shown to have a universal property that does not depend on the statistical property of the\nsource. Since it is also shown that the global encoding kernel at each terminal node becomes an LDPC matrix, it can be expected that using an efﬁcient decoding algorithm such as the sum-product algorithm will enable decoding complexity to be reduced to O(n).\nG = ( V, E) denotes a directed acyclic graph, where V is a vertex set and E is a link set whose element is described by an ordered pair of vertices (i, j) i, j ∈ V. At each link (i, j) ∈ E, a rate constraint R ij is assigned. Network coding handles the problem of multicasting from the source node s ∈ V to the set of terminal nodes T ⊂ V (Figure 1). The\nnetwork code consists of an encoder f ij and a decoder g t that are assigned at each link (i, j) ∈ E or at a terminal node t ∈ T . Messages and codewords are assumed to be binary sequences of 0 and 1, which are elements of binary ﬁeld F 2 . Let a message transmitted from the source node s be x nω ∈ F nω 2 , which is generated from the discrete memoryless probability distribution P X . Parameters n and ω are the number of link usage and transmission rate, respectively. The nω-length binary sequence x nω can be interpreted as ω-juxtapositions of n-length binary sequences. When we deﬁne encoder and\ndecoder as mappings f ij : F k i 2 → F k ij 2 , and g t : F k t 2 → F nω 2 , the rate constraints at each link (i, j) ∈ E can be denoted as\nNote that if we let z i be an information (or row) vector entering into node i, then decoding error can be described as an event x nω ̸= g t (z t ) for a terminal node t ∈ T . The multicasting problem treated here is the following:\nAssume that message x nω is generated according to the discrete memoryless probability distribution P X and sent out from the source node s. Then construct a network code using LDPC matrices that attains the maxﬂow bound and at the same time makes decoding error at each terminal node arbitrarily small asymptotically with the block length n.\nA universal network code is constructed using LDPC ma- trices.\nAfter showing the construction of LDPC matrices, encoders and decoders are described. For integers i < j, [i : j] is deﬁned as [i : j] def = {i, i + 1, ..., j}, and let H b ( ·) be a binary entropy function: For 0 < γ < 1,\nwhere 1[(Proposition)] takes a value 1 if the proposition is true and 0 otherwise.\nLet c be an even number which is greater than 6, and d be an odd number, and nc = kd is satisﬁed [7]. A bipartite graph constructed by a variable node set labeled [1 : n] and a check node set labeled [1 : k] is considered.\nStep 1. From each node in variable node set c hands are stretched, and from each node in check node set d hands are stretched.\nStep 2. With the condition nc = kd, since the number of hands stretched from both sides of the bipartite graph is equal, the hands from each side can be connected 1 : 1 at random.\nStep 3. If the number of connections between variable node i ∈ [1 : n] and check node j ∈ [1 : k] is even, set a ij = 0, otherwise set a ij = 1.\n[Construction of encoders] For (i, j) ∈ E,\nwhere z i is k i -dimensional row vector, and A ij is a k i × k ij LDPC matrix.\nLet an information (or row) vector that is received by a terminal node t be z t . Then\n˜ A t in the above deﬁnition (6) represents the global encoding kernel [10] at the terminal node t: When the transmitted message is x nω , z t , the information received by the terminal node t is represented by\nFor the network conﬁguration shown in Figure 1, ˜ A t 1 is an nω × k t 1 matrix, and represented by\nRemark 1: Since in the binary alphabet case, the sequence that attains minimum entropy in (6) corresponds to the se- quence that has the least number of 1\u2019s or 0\u2019s under the given linear constraints, which is the maximum likelihood estimator with an appropriate probability parameter, the decoder can be approximately implemented using, e. g. , the sum-product algorithm.\nLemma 1 (Modiﬁed version of Theorem 3 in [7]): Let A be an n × k LDPC matrix, and 0 < γ < 1/2 be a weight parameter satisfying\nwhere K = 6n ln(d) kd . If w(x n ) ≥ nγ and n is sufﬁciently large, then\n2 k \t (10) holds, where\nLemma 2 (Modiﬁed version of arguments at Section V-B [7]): Let A be an n × k LDPC matrix with k = nR for a constant R, and d min (A) def = min x n ̸=0 n :x n A=0 k w(x n ). Then for any 0 < ξ < 1,\nNote that in the above lemma, from the assumption c ≥ 6, β n → 0 (n → ∞) holds [7].\nThe next lemma refers to the universality of a code. Let P n be a type set [8] constructed by n-length sequences, and for each e ∈ E,\nIni(e) def = (origin of a directed link e), Err A,t (x nω ) denotes an event of decoding error at a terminal node t for a message x nω , and H(Q) is an entropy function of a type Q.\n \n} ∨   \nTheorem 1: Suppose that a message x nω is generated ac- cording to a discrete memoryless distribution P X . When a di- rected acyclic graph G and rate constraints R = {R ij } (i,j) ∈E are given, let a weight parameter γ be taken which satisﬁes\nIf ωH(P X ) < min t ∈T maxﬂow(s, t), then for sufﬁciently large d there exist LDPC matrices {A e } e ∈E with high prob- ability and decoding error at each terminal node can be arbitrarily small asymptotically with the block length n, where H(P X ) is an entropy of the source P X , and maxﬂow(s, t) denotes the max-ﬂow [1] between the source node s and the terminal node t.\nNote that (18) denotes a condition with which Lemma 1 and 2 hold on a given graph.\n(Proof of Theorem 1) If Lemma 3 holds, then with the probability of more than 1 − β(n) − ξ, for ∀t ∈ T and ∀Q ∈ P nω , LDPC matrices {A e } e ∈E can be taken that satisfy\nwhere at (a), (19) is used. \t (End of Proof of Theorem 1) From Theorem 1 and its proof, it can be easily seen that if\nholds. And when the weight parameter γ satisﬁes the condition given in the theorem, LDPC matrices with which the decoding error can be arbitrarily small asymptotically with the block length n can be taken with high probability.\nRemark 2: The code constructed here is also a static code [10]. When some links are broken and disconnected, at unbro- ken links the same LDPC matrices can be used for encoding. The proof can be shown applying the union bound to (19), using the fact that the number of disorder patterns is upper- bounded by 2 |E| .\nWhile local encoding kernels A e (e ∈ E) are LDPC matrices, in which the number of 1\u2019s of any row or column is constant with respect to the block length n, it is not obvious whether the global encoding kernel ˜ A t (t ∈ T ) is also an LDPC matrix or not. If ˜ A t is an LDPC matrix, to approximately implement the decoder g t the sum-product algorithm can be applied. The next lemma states that ˜ A t becomes an LDPC matrix:\nLemma 4: For each global encoding kernel ˜ A t (t ∈ T ), the number of 1\u2019s of any row or column is upper-bounded by a constant that does not depend on the block length n\n(Proof of Lemma 4) Assume that n × l matrix A and l × k matrix B are LDPC matrices with parameters (c 1 , d 1 ) and (c 2 , d 2 ), respectively. Let row vectors of B be b 1 , ..., b l . Then the i-th row of the product matrix AB can be described as\nFrom the construction of matrices, since the number of non- zero elements among a i1 , ..., a il is at most c 1 and the number of non-zero elements in k-dimensional row vectors b j (j ∈ [1 : l]) is at most c 2 , it can be seen that the number of non- zero elements of the i-th row of n × k matrix AB is at most c 1 c 2 . From a similar argument, it can be seen that the number of non-zero elements of each column of the matrix AB is at most d 1 d 2 .\nIf we suppose that the length of the longest path from the source node s to the terminal node t is h, since the global encoding kernel ˜ A t is constructed by multiplying matrices that are at most |V| juxtapositions of LDPC matrices, whose parameters are (c, d), at most h times, it can be seen that the number of 1\u2019s of each column is upper-bounded by d h and the number of 1\u2019s of each row is upper-bounded by (c |V|) h . These upper-bounds are constants with respect to the block length n. \t (End of Proof of Lemma 4)\nRemark 3: If d i (i = 1, 2) is O(log n) with respect to the block length n, since d 1 d 2 ≃ O\nand 2 d 1 d 2 can not be upper-bounded by a polynomial of n, a known decoding algorithm such as the sum-product algorithm can not be applied efﬁciently in this case.\nSumming up the above arguments, the following should be noted: If the parameters of LDPC matrices are chosen ap- propriately, the computational complexity of encoding at each node becomes O(n). Furthermore, if we apply a known efﬁ- cient decoding algorithm such as the sum-product algorithm, the decoding complexity at each terminal node can be expected to become O(n).\nIn this paper, it was shown that by using an LDPC matrix as a local encoding kernel at each link, the global encoding kernel also becomes an LDPC matrix at each terminal node. With this fact and by using an efﬁcient decoding algorithm such as the sum-product algorithm, we can expect that the decoding can be approximately implemented with computational complexity of O(n).\nWhile the code shown here is constructed using random selection, there exist deterministically constructed network codes such as the Jaggi-Sanders algorithm [9]. In the latter case, n does not denote block length but the extension degree of the ﬁeld that comprises the alphabet. When in the case of a deterministic algorithm we denote the extension degree as n 0 , the magnitude of n 0 is ordinary about 2 n 0 ≤ 100. Since in the random selection case the magnitude of n can be about nω ≃ 10 4 , when we want to send data of magnitude\nC at transmission rate ω the data is divided into large C nω packets, while in the deterministic case it is divided into small C n\npackets. If we assume that decoding complexity in the former case is O(nω) per packet, the total decoding time is about C nω × O(nω) ≃ C. In the latter case if we adopt FFT for multiplication of the elements of extension ﬁeld GF(2 n 0 ) whose computation complexity is O(n 0 log n 0 ), since the computation complexity of multiplication of the ω- vector and ω × ω matrix is O(ω 2 ), the total decoding time is about C n\n× O ( ω 2 n 0 log n 0 ) ≃ ω log n 0 × C. This argument shows that the network code constructed by LDPC matrices can be expected to be smaller decoding complexity than that of deterministically constructed network code. It should be noted that deterministic algorithms can decode with decoding error of exactly 0, while algorithms constructed with a random selection manner (such as the code constructed in this paper) can decode only with arbitrarily small error. The type of algorithm adopted should be determined according to the situation in which it is applied.\nholds, where β(n) is deﬁned at (17), and the condition in Theorem 1 is necessary to make β(n) → 0 (n → ∞).\nThe ﬁrst half of the following proof is similar to that in [1]. Let the transmitted message be x nω ∈ {0, 1} nω . The probability that at a ﬁxed terminal node t there exists another message ˜ x nω ∈ {0, 1} nω that provides the same codeword as that of transmitted message x nω is evaluated. Note that from Lemma 2, with high probability we can select A e that provides only the case w(x nω + ˜ x nω ) ≥ nγ, and the case\nIn the following, we sometimes use the notations z i def = z i (x nω ) and ˜ z i def = z i (˜ x nω ) as appropriate. Let a random variable A be A def = {A e } e ∈E . Since each A e is selected independently, from the deﬁnition of D e in (14) and Lemma 1, for any (i, j) ∈ E it holds that\nwhere D ij denotes a complement of D ij . Note that the left hand side of (23) becomes 0 for w(z i − ˜ z i ) < k i γ. At the terminal node t, if z t (x nω ) = z t (˜ x nω ) occurs, there exists U ⊂ V such that for any i ∈ U z i ̸= ˜z i holds, and at the same time, between node i in U and node j outside U with (i, j) ∈ E\nholds. From the above observation, since U 0 = U holds, it can be seen that\n \nAt (a), we use the fact that when U 0 ⊃ U, for any l ∈ U z l ̸= ˜ z l holds, and the fact that when U 0 = U , for (i, j) ∈ E U z i A ij = ˜ z i A ij holds. At (b), we use the fact that {A e } that is associated with the event\n{z l ̸= ˜ z l } is selected independently from A ij that satisﬁes z i A ij = ˜ z i A ij , and the fact that for e ̸= ˜e A e is selected independently from A ˜ e . At (c), (23) is used.\nTo consider a code whose transmission rate is near the rate constraint, for a given ε > 0 let k ij be satisﬁed by\nAt (d), the max-ﬂow min-cut theorem [1] is used. Considering U ⊂ V, since\nwhere at (e), (29) is used and at (f), n is assumed to be sufﬁciently large to satisfy"},"refs":[]},"file":{"jsonClass":"File","file":"/home/arnfred/Code/trailhead/resources/isit2012/1569564123.pdf"},"links":[{"id":"1569566567","weight":4},{"id":"1569564843","weight":10},{"id":"1569566381","weight":3},{"id":"1569566527","weight":9},{"id":"1569566485","weight":6},{"id":"1569565383","weight":3},{"id":"1569565883","weight":28},{"id":"1569564889","weight":6},{"id":"1569565223","weight":6},{"id":"1569566725","weight":12},{"id":"1569565663","weight":2},{"id":"1569565377","weight":6},{"id":"1569566385","weight":9},{"id":"1569564635","weight":9},{"id":"1569565867","weight":9},{"id":"1569566799","weight":12},{"id":"1569565067","weight":4},{"id":"1569559665","weight":10},{"id":"1569561021","weight":6},{"id":"1569564669","weight":13},{"id":"1569565691","weight":8},{"id":"1569566815","weight":5},{"id":"1569566875","weight":7},{"id":"1569564605","weight":15},{"id":"1569559617","weight":5},{"id":"1569566981","weight":3},{"id":"1569566433","weight":2},{"id":"1569566321","weight":9},{"id":"1569566605","weight":13},{"id":"1569565489","weight":5},{"id":"1569566683","weight":10},{"id":"1569566855","weight":11},{"id":"1569560629","weight":4},{"id":"1569566869","weight":7},{"id":"1569565097","weight":10},{"id":"1569566227","weight":9},{"id":"1569566091","weight":11},{"id":"1569559259","weight":14},{"id":"1569566697","weight":7},{"id":"1569566597","weight":11},{"id":"1569565551","weight":9},{"id":"1569565711","weight":6},{"id":"1569566761","weight":6},{"id":"1569566943","weight":11},{"id":"1569565091","weight":16},{"id":"1569566591","weight":15},{"id":"1569556029","weight":2},{"id":"1569566571","weight":7},{"id":"1569552245","weight":7},{"id":"1569565607","weight":5},{"id":"1569565495","weight":3},{"id":"1569559967","weight":4},{"id":"1569567045","weight":11},{"id":"1569565227","weight":5},{"id":"1569564481","weight":10},{"id":"1569560833","weight":9},{"id":"1569566415","weight":10},{"id":"1569564805","weight":13},{"id":"1569567005","weight":12},{"id":"1569566469","weight":3},{"id":"1569566081","weight":24},{"id":"1569565613","weight":3},{"id":"1569565355","weight":5},{"id":"1569564469","weight":5},{"id":"1569565931","weight":7},{"id":"1569566373","weight":8},{"id":"1569566647","weight":5},{"id":"1569551535","weight":10},{"id":"1569566765","weight":4},{"id":"1569564897","weight":23},{"id":"1569565775","weight":6},{"id":"1569565547","weight":8},{"id":"1569566871","weight":8},{"id":"1569565461","weight":14},{"id":"1569564245","weight":2},{"id":"1569564731","weight":9},{"id":"1569565171","weight":6},{"id":"1569566207","weight":15},{"id":"1569564227","weight":11},{"id":"1569558325","weight":19},{"id":"1569557585","weight":2},{"id":"1569565837","weight":14},{"id":"1569566671","weight":7},{"id":"1569566303","weight":4},{"id":"1569566119","weight":3},{"id":"1569564233","weight":9},{"id":"1569566459","weight":12},{"id":"1569567535","weight":4},{"id":"1569563411","weight":7},{"id":"1569560427","weight":5},{"id":"1569564401","weight":4},{"id":"1569564849","weight":12},{"id":"1569559541","weight":10},{"id":"1569566363","weight":4},{"id":"1569566319","weight":4},{"id":"1569565123","weight":6},{"id":"1569566941","weight":4},{"id":"1569566033","weight":7},{"id":"1569566739","weight":5},{"id":"1569555811","weight":4},{"id":"1569558459","weight":6},{"id":"1569565609","weight":6},{"id":"1569565291","weight":7},{"id":"1569564203","weight":15},{"id":"1569566821","weight":11},{"id":"1569556713","weight":9},{"id":"1569562685","weight":6},{"id":"1569566751","weight":3},{"id":"1569566467","weight":9},{"id":"1569565771","weight":3},{"id":"1569566157","weight":6},{"id":"1569560613","weight":2},{"id":"1569566903","weight":13},{"id":"1569566999","weight":3},{"id":"1569565859","weight":11},{"id":"1569564249","weight":2},{"id":"1569565809","weight":19},{"id":"1569566843","weight":6},{"id":"1569566579","weight":5},{"id":"1569558483","weight":6},{"id":"1569566563","weight":27},{"id":"1569566089","weight":3},{"id":"1569564903","weight":2},{"id":"1569566173","weight":4},{"id":"1569559221","weight":5},{"id":"1569556091","weight":4},{"id":"1569565347","weight":9},{"id":"1569566925","weight":18},{"id":"1569564387","weight":12},{"id":"1569565455","weight":6},{"id":"1569566497","weight":33},{"id":"1569566795","weight":10},{"id":"1569566963","weight":7},{"id":"1569561679","weight":12},{"id":"1569566709","weight":6},{"id":"1569564989","weight":5},{"id":"1569566787","weight":3},{"id":"1569566717","weight":10},{"id":"1569560721","weight":3},{"id":"1569566015","weight":26},{"id":"1569566523","weight":3},{"id":"1569565897","weight":10},{"id":"1569551763","weight":7},{"id":"1569565953","weight":14},{"id":"1569566895","weight":15},{"id":"1569566889","weight":5},{"id":"1569565709","weight":9},{"id":"1569566749","weight":9},{"id":"1569566269","weight":14},{"id":"1569564189","weight":8},{"id":"1569564195","weight":3},{"id":"1569561513","weight":11},{"id":"1569566985","weight":6},{"id":"1569564613","weight":20},{"id":"1569565369","weight":3},{"id":"1569567009","weight":11},{"id":"1569566865","weight":8},{"id":"1569565321","weight":15},{"id":"1569558785","weight":4},{"id":"1569564647","weight":12},{"id":"1569566095","weight":4},{"id":"1569566193","weight":8},{"id":"1569564271","weight":12},{"id":"1569564337","weight":4},{"id":"1569565907","weight":6},{"id":"1569566343","weight":6},{"id":"1569564311","weight":10},{"id":"1569565803","weight":4},{"id":"1569565785","weight":6},{"id":"1569566239","weight":4},{"id":"1569566167","weight":5},{"id":"1569566679","weight":17},{"id":"1569565989","weight":14},{"id":"1569566575","weight":10},{"id":"1569563981","weight":10},{"id":"1569561085","weight":4},{"id":"1569566419","weight":3},{"id":"1569566617","weight":4},{"id":"1569559565","weight":6},{"id":"1569566905","weight":7},{"id":"1569566733","weight":2},{"id":"1569566753","weight":4},{"id":"1569566311","weight":11},{"id":"1569563307","weight":16},{"id":"1569566063","weight":13},{"id":"1569558681","weight":6},{"id":"1569555999","weight":11},{"id":"1569566759","weight":5},{"id":"1569565589","weight":2},{"id":"1569559195","weight":7},{"id":"1569566149","weight":6},{"id":"1569559995","weight":4},{"id":"1569566217","weight":2},{"id":"1569566657","weight":9},{"id":"1569558859","weight":10},{"id":"1569565199","weight":19},{"id":"1569565213","weight":4},{"id":"1569565365","weight":8},{"id":"1569566643","weight":7},{"id":"1569566511","weight":9},{"id":"1569566719","weight":4},{"id":"1569566991","weight":5},{"id":"1569565841","weight":5},{"id":"1569566975","weight":4},{"id":"1569566369","weight":8},{"id":"1569566531","weight":16},{"id":"1569567665","weight":13},{"id":"1569561143","weight":11},{"id":"1569566581","weight":6},{"id":"1569565833","weight":9},{"id":"1569566489","weight":4},{"id":"1569564611","weight":9},{"id":"1569565535","weight":12},{"id":"1569562867","weight":21},{"id":"1569566395","weight":5},{"id":"1569565667","weight":4},{"id":"1569561795","weight":3},{"id":"1569566845","weight":3},{"id":"1569566325","weight":26},{"id":"1569566423","weight":6},{"id":"1569565257","weight":3},{"id":"1569564795","weight":12},{"id":"1569567015","weight":9},{"id":"1569559805","weight":14},{"id":"1569566437","weight":9},{"id":"1569566811","weight":4},{"id":"1569566851","weight":3},{"id":"1569558901","weight":2},{"id":"1569565735","weight":10},{"id":"1569553909","weight":6},{"id":"1569559111","weight":10},{"id":"1569566687","weight":4},{"id":"1569564881","weight":3},{"id":"1569566939","weight":3},{"id":"1569553537","weight":10},{"id":"1569565427","weight":9},{"id":"1569566403","weight":6},{"id":"1569565839","weight":3},{"id":"1569565915","weight":5},{"id":"1569552251","weight":11},{"id":"1569566139","weight":5},{"id":"1569553519","weight":5},{"id":"1569567051","weight":6},{"id":"1569566885","weight":8},{"id":"1569564441","weight":5},{"id":"1569566231","weight":10},{"id":"1569564209","weight":3},{"id":"1569566513","weight":3},{"id":"1569566425","weight":3},{"id":"1569554881","weight":6},{"id":"1569554971","weight":13},{"id":"1569565501","weight":13},{"id":"1569566899","weight":5},{"id":"1569566445","weight":9},{"id":"1569566209","weight":5},{"id":"1569562821","weight":2},{"id":"1569566649","weight":6},{"id":"1569566791","weight":6},{"id":"1569565559","weight":6},{"id":"1569566371","weight":3},{"id":"1569565655","weight":11},{"id":"1569566909","weight":4},{"id":"1569566127","weight":6},{"id":"1569565151","weight":9},{"id":"1569558985","weight":8},{"id":"1569563763","weight":11},{"id":"1569565087","weight":3},{"id":"1569566473","weight":20},{"id":"1569564857","weight":19},{"id":"1569564333","weight":5},{"id":"1569566913","weight":10},{"id":"1569566809","weight":17},{"id":"1569566629","weight":5},{"id":"1569566257","weight":15},{"id":"1569565033","weight":12},{"id":"1569566447","weight":7},{"id":"1569566357","weight":3},{"id":"1569565817","weight":5},{"id":"1569565847","weight":18},{"id":"1569564353","weight":7},{"id":"1569563897","weight":4},{"id":"1569557083","weight":8},{"id":"1569565887","weight":8},{"id":"1569565929","weight":5},{"id":"1569566141","weight":13},{"id":"1569553591","weight":2},{"id":"1569566721","weight":3},{"id":"1569565055","weight":3},{"id":"1569564677","weight":3},{"id":"1569563231","weight":6},{"id":"1569565633","weight":9},{"id":"1569566661","weight":6},{"id":"1569565279","weight":7},{"id":"1569555879","weight":10},{"id":"1569565521","weight":4},{"id":"1569566115","weight":13},{"id":"1569565219","weight":9},{"id":"1569558509","weight":3},{"id":"1569554759","weight":5},{"id":"1569564851","weight":2},{"id":"1569565595","weight":7},{"id":"1569565185","weight":21},{"id":"1569556671","weight":2},{"id":"1569566773","weight":13},{"id":"1569566037","weight":3},{"id":"1569564985","weight":4},{"id":"1569565095","weight":2},{"id":"1569566223","weight":16},{"id":"1569558401","weight":5},{"id":"1569566553","weight":13},{"id":"1569564973","weight":23},{"id":"1569565469","weight":13},{"id":"1569564969","weight":7},{"id":"1569566593","weight":3},{"id":"1569566043","weight":2},{"id":"1569565029","weight":17},{"id":"1569565357","weight":5},{"id":"1569561245","weight":4},{"id":"1569566505","weight":13},{"id":"1569565393","weight":6},{"id":"1569565933","weight":9},{"id":"1569562207","weight":6},{"id":"1569565705","weight":8},{"id":"1569566191","weight":6},{"id":"1569567033","weight":12},{"id":"1569565527","weight":10},{"id":"1569566853","weight":8},{"id":"1569566603","weight":8},{"id":"1569567029","weight":4},{"id":"1569565363","weight":5},{"id":"1569566159","weight":6},{"id":"1569566695","weight":14},{"id":"1569566051","weight":16},{"id":"1569561379","weight":6},{"id":"1569565909","weight":6},{"id":"1569561123","weight":8},{"id":"1569555787","weight":2},{"id":"1569565467","weight":2},{"id":"1569566655","weight":5},{"id":"1569566673","weight":4},{"id":"1569567235","weight":4},{"id":"1569565441","weight":6},{"id":"1569565739","weight":4},{"id":"1569565311","weight":5},{"id":"1569566233","weight":4},{"id":"1569566667","weight":5},{"id":"1569566297","weight":6},{"id":"1569566893","weight":7},{"id":"1569566317","weight":17},{"id":"1569564097","weight":3},{"id":"1569560997","weight":9},{"id":"1569563845","weight":4},{"id":"1569566407","weight":5},{"id":"1569560349","weight":8},{"id":"1569566501","weight":9},{"id":"1569565741","weight":13},{"id":"1569566275","weight":10},{"id":"1569566481","weight":24},{"id":"1569565545","weight":9},{"id":"1569566857","weight":11},{"id":"1569565961","weight":6},{"id":"1569566387","weight":6},{"id":"1569566245","weight":14},{"id":"1569560503","weight":7},{"id":"1569565463","weight":4},{"id":"1569564339","weight":5},{"id":"1569566219","weight":4},{"id":"1569565439","weight":6},{"id":"1569566229","weight":7},{"id":"1569566949","weight":7},{"id":"1569566133","weight":3},{"id":"1569562551","weight":18},{"id":"1569566155","weight":2},{"id":"1569563395","weight":8},{"id":"1569566901","weight":4},{"id":"1569551347","weight":5},{"id":"1569565415","weight":6},{"id":"1569555367","weight":4},{"id":"1569561623","weight":8},{"id":"1569566383","weight":2},{"id":"1569564485","weight":5},{"id":"1569565155","weight":3},{"id":"1569566631","weight":7},{"id":"1569565571","weight":7},{"id":"1569565885","weight":6},{"id":"1569566177","weight":12},{"id":"1569565493","weight":18},{"id":"1569557633","weight":10},{"id":"1569564411","weight":4},{"id":"1569566805","weight":23},{"id":"1569559199","weight":7},{"id":"1569566929","weight":2},{"id":"1569566293","weight":7},{"id":"1569565665","weight":9},{"id":"1569566831","weight":7},{"id":"1569565549","weight":7},{"id":"1569565523","weight":7},{"id":"1569565611","weight":7},{"id":"1569557715","weight":9},{"id":"1569564175","weight":4},{"id":"1569566983","weight":11},{"id":"1569566779","weight":5},{"id":"1569566097","weight":8},{"id":"1569566479","weight":21},{"id":"1569556361","weight":6},{"id":"1569566431","weight":7},{"id":"1569565397","weight":6},{"id":"1569566873","weight":12},{"id":"1569565765","weight":10},{"id":"1569565925","weight":5},{"id":"1569565435","weight":7},{"id":"1569557275","weight":5},{"id":"1569565263","weight":5},{"id":"1569566129","weight":3},{"id":"1569566261","weight":2},{"id":"1569565215","weight":4},{"id":"1569565093","weight":12},{"id":"1569565385","weight":5},{"id":"1569565575","weight":3},{"id":"1569565919","weight":14},{"id":"1569565181","weight":4},{"id":"1569566711","weight":16},{"id":"1569565241","weight":6},{"id":"1569566927","weight":17},{"id":"1569565661","weight":13},{"id":"1569565865","weight":15},{"id":"1569566887","weight":18},{"id":"1569565273","weight":9},{"id":"1569565319","weight":2},{"id":"1569566267","weight":4},{"id":"1569564131","weight":4},{"id":"1569552037","weight":7},{"id":"1569564919","weight":8},{"id":"1569565511","weight":6},{"id":"1569566737","weight":12},{"id":"1569566429","weight":8},{"id":"1569561221","weight":3},{"id":"1569566917","weight":19},{"id":"1569566035","weight":12},{"id":"1569566253","weight":2},{"id":"1569565353","weight":21},{"id":"1569564683","weight":10},{"id":"1569564305","weight":11},{"id":"1569564283","weight":7},{"id":"1569564291","weight":4},{"id":"1569566691","weight":9},{"id":"1569565421","weight":9},{"id":"1569566547","weight":12},{"id":"1569566651","weight":7},{"id":"1569565177","weight":10},{"id":"1569566823","weight":9},{"id":"1569566595","weight":3},{"id":"1569566677","weight":4},{"id":"1569565349","weight":17},{"id":"1569566137","weight":22},{"id":"1569565013","weight":3},{"id":"1569565829","weight":5},{"id":"1569566237","weight":9},{"id":"1569566283","weight":15},{"id":"1569565645","weight":2},{"id":"1569566529","weight":14},{"id":"1569565375","weight":7},{"id":"1569566715","weight":8},{"id":"1569565237","weight":11},{"id":"1569566639","weight":8},{"id":"1569566819","weight":6},{"id":"1569565041","weight":10},{"id":"1569564703","weight":8},{"id":"1569566713","weight":8},{"id":"1569565541","weight":21},{"id":"1569565597","weight":2},{"id":"1569566813","weight":10},{"id":"1569565293","weight":5},{"id":"1569566771","weight":4},{"id":"1569564649","weight":3},{"id":"1569564201","weight":4},{"id":"1569562277","weight":12},{"id":"1569566641","weight":5},{"id":"1569565425","weight":10},{"id":"1569559035","weight":2},{"id":"1569566977","weight":2},{"id":"1569564247","weight":6},{"id":"1569564437","weight":10},{"id":"1569566533","weight":12},{"id":"1569563975","weight":4},{"id":"1569551905","weight":6},{"id":"1569564861","weight":19},{"id":"1569565457","weight":5},{"id":"1569564787","weight":6},{"id":"1569566487","weight":10},{"id":"1569565529","weight":16},{"id":"1569556759","weight":11},{"id":"1569566619","weight":9},{"id":"1569565271","weight":3},{"id":"1569561185","weight":13},{"id":"1569566075","weight":5},{"id":"1569566397","weight":9},{"id":"1569566301","weight":12},{"id":"1569558779","weight":7},{"id":"1569565669","weight":3},{"id":"1569565233","weight":3},{"id":"1569563721","weight":4},{"id":"1569566001","weight":6},{"id":"1569565593","weight":4},{"id":"1569560235","weight":5},{"id":"1569566817","weight":5},{"id":"1569564157","weight":5},{"id":"1569565729","weight":7},{"id":"1569566389","weight":8},{"id":"1569566435","weight":4},{"id":"1569567483","weight":4},{"id":"1569566911","weight":4},{"id":"1569564923","weight":18},{"id":"1569565367","weight":2},{"id":"1569566299","weight":11},{"id":"1569564281","weight":6},{"id":"1569565039","weight":21},{"id":"1569564769","weight":11},{"id":"1569565769","weight":21},{"id":"1569566171","weight":8},{"id":"1569566601","weight":15},{"id":"1569565805","weight":6},{"id":"1569561713","weight":6},{"id":"1569566933","weight":4},{"id":"1569563919","weight":10},{"id":"1569566577","weight":6},{"id":"1569557851","weight":9},{"id":"1569567691","weight":2},{"id":"1569565389","weight":6},{"id":"1569559919","weight":8},{"id":"1569565861","weight":23},{"id":"1569566147","weight":23},{"id":"1569565537","weight":8},{"id":"1569559523","weight":4},{"id":"1569566057","weight":4},{"id":"1569562367","weight":3},{"id":"1569560785","weight":5},{"id":"1569565561","weight":16},{"id":"1569565631","weight":5},{"id":"1569560213","weight":6},{"id":"1569566457","weight":2},{"id":"1569555891","weight":6},{"id":"1569566847","weight":6},{"id":"1569565997","weight":17},{"id":"1569563425","weight":5},{"id":"1569565035","weight":38},{"id":"1569559597","weight":9},{"id":"1569564961","weight":21},{"id":"1569559251","weight":7},{"id":"1569565089","weight":3},{"id":"1569567013","weight":12},{"id":"1569566583","weight":5},{"id":"1569561861","weight":8},{"id":"1569565337","weight":6},{"id":"1569564253","weight":3},{"id":"1569565737","weight":8},{"id":"1569560459","weight":10},{"id":"1569564463","weight":9},{"id":"1569565853","weight":17},{"id":"1569550425","weight":22},{"id":"1569566273","weight":18},{"id":"1569566341","weight":3},{"id":"1569565889","weight":11},{"id":"1569566635","weight":11},{"id":"1569566611","weight":8},{"id":"1569563725","weight":2},{"id":"1569551539","weight":5},{"id":"1569564505","weight":8},{"id":"1569565165","weight":5},{"id":"1569565565","weight":8},{"id":"1569565635","weight":13},{"id":"1569561397","weight":8},{"id":"1569565731","weight":7},{"id":"1569556327","weight":2},{"id":"1569566797","weight":11},{"id":"1569566125","weight":3},{"id":"1569566413","weight":6},{"id":"1569565707","weight":17},{"id":"1569565113","weight":9},{"id":"1569566375","weight":6},{"id":"1569565143","weight":6},{"id":"1569564257","weight":9},{"id":"1569565583","weight":8},{"id":"1569566555","weight":15},{"id":"1569564931","weight":6},{"id":"1569565373","weight":3},{"id":"1569564141","weight":4},{"id":"1569566973","weight":21},{"id":"1569561579","weight":7},{"id":"1569566449","weight":2},{"id":"1569566987","weight":4},{"id":"1569565031","weight":5},{"id":"1569564755","weight":3},{"id":"1569551541","weight":7},{"id":"1569565619","weight":2},{"id":"1569566839","weight":6},{"id":"1569551751","weight":5},{"id":"1569558697","weight":7},{"id":"1569565139","weight":22},{"id":"1569565895","weight":2},{"id":"1569566663","weight":8},{"id":"1569564419","weight":3},{"id":"1569565579","weight":9},{"id":"1569566067","weight":7},{"id":"1569566825","weight":16},{"id":"1569566615","weight":4},{"id":"1569566241","weight":14},{"id":"1569564807","weight":5},{"id":"1569566609","weight":2},{"id":"1569563007","weight":6},{"id":"1569566113","weight":9},{"id":"1569566443","weight":8},{"id":"1569566727","weight":19},{"id":"1569565315","weight":11},{"id":"1569565515","weight":5},{"id":"1569566417","weight":9},{"id":"1569560581","weight":12},{"id":"1569559233","weight":7}],"meta":{"jsonClass":"HashMap$HashTrieMap","sessionid":"S8.T1.1","endtime":"17:00","authors":"Shigeki Miyake, Jun Muramatsu","date":"1341333600000","papertitle":"On a construction of universal network code using LDPC matrices","starttime":"16:40","session":"S8.T1: Network Coding:  Code Design and Resource Allocation","room":"Kresge Rehearsal B (030)","paperid":"1569564123"},"cluster":{"jsonClass":"HashMap$HashTrieMap","spectral6":"3","spectral43":"14","spectral28":"6","spectral32":"11","spectral14":"6","spectral20":"14","spectral9":"1","spectral25":"19","spectral42":"5","spectral3":"1","spectral47":"43","spectral17":"2","louvain":"250","spectral36":"21","spectral39":"36","spectral10":"6","spectral15":"8","spectral33":"4","spectral5":"2","spectral21":"10","spectral44":"32","spectral26":"14","spectral40":"38","spectral8":"2","spectral11":"1","spectral4":"3","spectral37":"34","spectral48":"32","spectral22":"20","spectral23":"5","spectral12":"5","spectral50":"24","spectral19":"8","spectral34":"14","spectral45":"22","spectral7":"6","spectral49":"35","spectral38":"16","spectral24":"22","spectral13":"1","spectral31":"3","spectral29":"14","spectral35":"31","spectral30":"19","spectral41":"38","spectral27":"18","spectral18":"5","spectral46":"0","spectral2":"0","spectral16":"5"}}
